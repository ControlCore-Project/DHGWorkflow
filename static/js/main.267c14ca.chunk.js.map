{"version":3,"sources":["graph-builder/graph-core/3-component.js","graph-builder/graph-core/2-canvas.js","graph-builder/graph-core/1-core.js","graph-builder/local-storage-manager.js","component/ZoomSetter.jsx","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-core/4-undo-redo.js","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","graph-builder/graph-core/index.js","graph-builder/graph-core/6-server.js","graph-builder/graph-core/5-load-save.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","GraphArea.jsx","config/defaultValidators.js","GraphWorkspace.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/serverActions/ServerActions.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","component/File-drag-drop.jsx","component/modals/History.jsx","component/fileBrowser.jsx","component/modals/FileEdit.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","graph-builder/calculations/bending-dist-weight.js","config/cytoscape-style.js","config/cytoscape-options.js","graph-builder/graph-actions.js","reducer/actionType.js","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js"],"names":["GraphComponent","args","nodeValidator","edgeValidator","setEdgeNodeValidator","getTid","Date","getTime","allNodes","this","cy","$","start","x","y","found","i","length","nodePos","position","label","style","type","getPos","data","id","tid","node","add","group","addAction","actionName","GA","DEL_NODE","parameters","ADD_NODE","sourceID","targetID","getById","edgesWith","edges","getEdgesBetweenNodes","dists","Set","forEach","edge","target","bendDistance","d","has","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","w","getBendingD","edgeData","bendData","parseBendinDW","source","DEL_EDGE","ADD_EDGE","addEdgeWithLabel","dispatcher","T","Model_Open_Create_Edge","cb","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","UPDATE_NODE","getStyle","UPDATE_EDGE","key","val","UPDATE_DATA","connectedEdges","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","height","width","setPos","toString","indexOf","lastIndexOf","a","b","slice","trim","eval","map","sourceLabel","getRealSourceId","targetLabel","comp","validator","getNodesEdges","nodes","undefined","err","e","validiateComp","GraphCanvas","reset","removeListener","setZoomUI","on","Math","round","zoom","fit","v","elements","window","confirm","el","deleteElem","actionArr","SET_ZOOM_LEVEL","payload","element","superState","projectName","cytoscape","use","edgehandles","nodeEditing","Konva","gridGuide","cyOptions","container","bendNode","classes","regesterEvents","initizialize","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","snapToGridOnRelease","zoomDash","panGrid","preview","handlePosition","handleNodes","complete","c","addEdge","getElementById","shouldEmit","SET_PROJECT_DETAILS","value","graphID","serverID","els","ELE_UNSELECTED","every","isEdge","ids","ELE_SELECTED","selectDeselectEventHandler","scratch","addClass","evt","ev","hasClass","CoreGraph","getBendEdgePoint","DW","addBendChange","removeClass","resetAllComp","resetAllAction","parseFloat","getCoordinate","ALL_GRAPHS","localStorageManager","btoa","AUTHOR_NAME","allgs","localStorage","getItem","setItem","JSON","stringify","parse","atob","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","getAllGraphs","addToFront","Garr","unshift","getAuthorName","setAuthorName","authorName","clearGraph","getFileList","minZoom","GraphOption","maxZoom","marks","ZoomComp","myGraph","curGraphInstance","zoomValue","zoomLevel","className","role","tabIndex","onClick","resetZoom","onKeyDown","fitZoom","min","max","onChange","setZoom","included","getGraphFun","createNode","state","setState","Model_Open_Create_Node","validiateNode","addNode","editElement","eleSelectedPayload","Model_Open_Update_Node","retMessage","updateNode","labelAllowed","getLabel","Model_Open_Update_Edge","updateEdge","downloadImg","format","saveAction","fileName","saveToDisk","readFile","file","fr","FileReader","name","split","pop","onload","ADD_GRAPH","graphML","result","readAsText","newProject","NEW_GRAPH","clearAll","undo","redo","openShareModal","SET_SHARE_MODAL","viewHistory","SET_HISTORY_MODAL","TabBar","closeTab","stopPropagation","graphs","REMOVE_GRAPH","editCur","SET_EDIT_DETAILS_MODAL","React","useEffect","hotkeys","event","preventDefault","document","click","querySelector","bind","data-tip","size","curGraphIndex","CHANGE_TAB","data-for","place","effect","nodeML","posX","posY","opacity","shape","color","backgroundColor","borderColor","borderWidth","actionHistory","graphml","xmlns","for","graph","edgedefault","edgeML","lineColor","lineWidth","configuration","sx","sy","tx","ty","builder","G","edg","thickness","X","xml2js","Builder","buildObject","GraphUndoRedo","props","methodsMapped","updateData","SET_POS","SET_DIM","setDim","SET_BENDW","setBendWightDist","curActionIndex","SET_UNDO","SET_REDO","prevPos","curPos","prevDim","curDim","prevDW","curDW","inverse","equivalent","splice","actionIdentity","sequencify","push","hash","md5","at","informUI","performAction","curTid","addPositionChange","addDimensionChange","obj","Object","r","keys","sort","k","PropFromArr","arr","flatenArr","flatArr","constructor","o","p","filter","s","t","propFromArr","property","any","S","A","F","mapByDefault","def","includes","parseNode","parseProps","parseInt","parseEdge","parseActionML","parser","graphMlCnt","Promise","resolve","Parser","parseString","grahMLObj","grahML","parseDetails","parseActionHistory","GraphServer","config","setServerID","IS_WORKFLOW_ON_SERVER","Boolean","autoSaveIntervalId","saveLocalStorage","saveAs","png","full","getName","jpg","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","shouldEdgeBeSaved","edgeJson","GraphLoadSave","stringifyAction","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","content","parseAction","setProjectName","clearTimeout","setTimeout","graphMLParser","then","graphObject","loadGraphFromLocalStorage","loadJson","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","h","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TailoredGraph","calJuncNodePos","juncNodeId","incomers","unselectify","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","tidd","juncNodes","outgoers","addEdgeWithoutJuncNode","addEdgeAction","junctionNode","n1","n2","n","union","c1","c2","values","parNode","meanNbrPosition","setOfPos","posStr","Graph","graphContainerRef","active","loaded","useState","instance","setInstance","ref","useRef","setContainerDim","elToAss","current","offsetWidth","offsetHeight","history","pushState","path","join","process","set","setCurStatus","SET_CUR_INSTANCE","addEventListener","MyGraph","forcePullFromServer","setGraphML","initialiseNewGraph","zIndex","display","GraphComp","loadedFromStorage","setLoadedFromStorage","loadedFromURL","setLoadedFromURL","allSavedGs","ADD_GRAPH_BULK","graphFromParams","fromEntries","URLSearchParams","location","search","entries","g","gid","replaceState","title","pathname","urlParms","serverIDIndex","localIDIndex","flex","flexDirection","background","ReactModal","setAppElement","Modal","closeModal","ModelOpen","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","setData","errorMessage","setErrorMessage","modalPayload","submitText","Children","defaultStyle","defaultLabel","ParentModal","onSubmit","toolbarList","text","icon","FaPlus","action","hotkey","FaFileImport","FaSave","fn","prompt","FaThermometerEmpty","FaUndo","undoEnabled","FaRedo","redoEnabled","FaEdit","eleSelected","FaTrash","FaHistory","isWorkflowOnServer","FaToggleOn","FiToggleLeft","toggleServer","FaHammer","build","FaBug","debug","FiPlay","run","FaRegTimesCircle","clear","FiStopCircle","stop","FaBomb","destroy","FiTriangle","open","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","fileRef","Switcher","checked","ActionButton","fontSize","Vsep","Hsep","Space","ServerActions","inputRef","isReadOnly","setIsReadOnly","readOnly","edit","focus","Header","actions","replace","handler","shortcut","setHotKeys","ProjectDetails","curGraph","useCallback","newGraphModal","editDetailsModal","setProjAuthorName","SET_AUTHOR","authorNameE","openExisting","NewWorkflow","SET_NEW_GRAPH_MODAL","placeholder","required","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","shareModal","serializeGraph","link","protocol","host","navigator","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","post","docString","createRef","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","settingsModal","SET_SETTING_MODAL","app","SET_FILE_REF","getElementsByTagName","cc","classList","dragEvent","dataTransfer","files","accept","HistoryModal","curState","setcurState","historyList","setHistoryList","historyView","setHistoryView","res","mapActionToTrue","filterAction","setFilterAction","getLabelFromID","reverse","stringifyActionType","prefixTid","index","DT","date","toLocaleDateString","time","toLocaleTimeString","tempCurState","undoSingleAction","redoSingleAction","restoreState","fontWeight","par","htmlFor","listStyleType","LocalFileBrowser","dirButton","setDirButton","userAgent","fileState","setFileState","handleFileInDirs","topKey","valueSubDir","kind","getFile","fileData","concat","modified","lastModified","fileObj","fileHandle","newFeature","showDirectoryPicker","dirHandle","webkitRelativePath","directory","webkitdirectory","disabled","onSelectFile","EDIT_TEXTFILE","show","detailRenderer","fileRenderer","FileRenderers","TableFile","folderRenderer","FolderRenderers","TableFolder","FileEditModal","codeStuff","setCodeStuff","setFileName","submit","createWritable","stream","write","close","alert","textFileModal","minHeight","onValueChange","highlight","code","languages","js","padding","fontFamily","minWidth","border","useReducer","reducer","initialState","Settings","History","FileEdit","GraphCompDetails","Model_Close","overflow","GraphWorkspace","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","rotate","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","selector","overlayOpacity","textValign","textHalign","curveStyle","targetArrowShape","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","lineStyle","edgeTextRotation","textBackgroundOpacity","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","borderOpacity","overlayColor","overlayPadding","options","zoomingEnabled","userZoomingEnabled","zealit","require","$$typeof","TURN_DRAW","SET_ZOOM","ADD_GRAPH_INSTANCE","NodeDetails","textRef","widthSet","labelName","setLabelName","labelFile","setLabelFile","prop","borderRadius","lname","list","item","some","substring","Triangle","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","borderBottomWidth","borderBottomColor","borderBottomStyle","NodeStyle","EdgeStyle","drawModeOn","initialGraphState","component","foundi","newState"],"mappings":"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","file":"static/js/main.267c14ca.chunk.js","sourcesContent":["import BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\nimport GraphCanvas from './2-canvas';\n\nclass GraphComponent extends GraphCanvas {\n    getTid;\n\n    nodeValidator;\n\n    edgeValidator;\n\n    addAction;\n\n    getRealSourceId;\n\n    constructor(...args) {\n        super(...args);\n        const [,,,,, nodeValidator, edgeValidator] = args;\n        this.setEdgeNodeValidator({ nodeValidator, edgeValidator });\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(),\n        data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    getEdgesBetweenNodes(sourceID, targetID) {\n        return this.getById(sourceID).edgesWith(this.getById(targetID));\n    }\n\n    getBendingD(sourceID, targetID) {\n        const edges = this.getEdgesBetweenNodes(sourceID, targetID);\n        const dists = new Set();\n        edges.forEach((edge) => {\n            if (targetID === edge.target().id()) dists.add(edge.data('bendData').bendDistance);\n            else dists.add(-edge.data('bendData').bendDistance);\n        });\n        for (let d = 0; ;d += 20) {\n            if (!dists.has(d)) return d;\n            if (!dists.has(-d)) return -d;\n        }\n    }\n\n    parseBendinDW({\n        sourceID, targetID, type, bendWeight, bendDistance, bendPoint,\n    }) {\n        if (type !== 'ordin') return { bendDistance: 0, bendWeight: 0 };\n        if (bendDistance && bendWeight) return { bendDistance, bendWeight };\n        if (bendPoint) {\n            const { x, y } = bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceID).position(), this.getById(targetID).position(),\n            );\n            return { bendDistance: d, bendWeight: w };\n        }\n        return { bendDistance: this.getBendingD(sourceID, targetID), bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(edgeData, tid = this.getTid()) {\n        const { type = 'ordin' } = edgeData;\n        const bendData = this.parseBendinDW({ ...edgeData, ...edgeData.bendData });\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                ...edgeData, source: edgeData.sourceID, target: edgeData.targetID, type, bendData,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [{ ...edgeData, id: edge.id() }] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(edgeData, tid = this.getTid()) {\n        if ((edgeData.type && edgeData.type !== 'ordin') || edgeData.label) {\n            return this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle,\n                    edgeData.targetID, edgeData.targetID, null, 'New');\n                if (message.ok) this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{\n                    ...jsonEd.data, sourceID: jsonEd.data.source, targetID: jsonEd.data.target,\n                }],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            targetLabel: edge.target().data('label'),\n            style: edge.data('style'),\n            id: edge.data('id'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator, type) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges, type);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style, id, type) {\n        if (id) {\n            const node = this.getById(id);\n            return this.validiateComp({\n                label: label || node.data('label'),\n                style: style || node.data('style'),\n                id,\n            }, this.nodeValidator, type);\n        }\n        return this.validiateComp({ label, style, id }, this.nodeValidator, type);\n    }\n\n    validiateEdge(label, style, sourceID, targetID, id, type) {\n        if (id) {\n            const edge = this.getById(id);\n            return this.validiateComp({\n                label: label || edge.data('label'),\n                style: style || edge.data('style'),\n                sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n                targetLabel: edge.target().data('label'),\n                id,\n            }, this.edgeValidator, type);\n        }\n        return this.validiateComp({\n            label,\n            style,\n            sourceLabel: this.getById(this.getRealSourceId(sourceID)).data('label'),\n            targetLabel: this.getById(targetID).data('label'),\n            id,\n        }, this.edgeValidator, type);\n    }\n}\n\nexport default GraphComponent;\n","// import GraphUndoRedo from './graph-undo-redo';\nimport Core from './1-core';\nimport { actionType as T } from '../../reducer';\n\nclass GraphCanvas extends Core {\n    setZoomUI;\n\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), 0));\n        this.actionArr = [];\n        this.cy.emit('graph-modified');\n        return true;\n    }\n\n    resetAllComp() {\n        this.cy.elements().remove();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.SET_ZOOM_LEVEL, payload: Math.round(this.cy.zoom() * 100) });\n    }\n}\n\nexport default GraphCanvas;\n","import cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from '../../config/cytoscape-options';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport { actionType as T } from '../../reducer';\n\nclass CoreGraph {\n    dispatcher;\n\n    superState;\n\n    id;\n\n    projectName;\n\n    cy;\n\n    bendNode;\n\n    constructor(id, element, dispatcher, superState, projectName) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        // if (cy) this.cy = cy;\n        this.cy = cytoscape({ ...cyOptions, container: element });\n        this.id = id;\n        this.projectName = projectName;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.regesterEvents();\n        this.cy.emit('graph-modified');\n        this.initizialize();\n    }\n\n    initizialize() {\n        this.cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        this.cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        this.cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); this.addEdge({ sourceID: a.id(), targetID: b.id() }); },\n        });\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    getLabelFromID(x) {\n        return this.getById(x).data('label') || '**Deleted El**';\n    }\n\n    set({\n        cy, dispatcher, superState, projectName,\n    }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        if (projectName) this.projectName = projectName;\n    }\n\n    setProjectName(projectName, shouldEmit = true) {\n        this.projectName = projectName;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: projectName,\n                    graphID: this.id,\n                    type: 'projectName',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    setServerID(serverID, shouldEmit = true) {\n        this.serverID = serverID;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: serverID,\n                    graphID: this.id,\n                    type: 'serverID',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag grab dragfree'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CoreGraph.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('bendData', { bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.on('grab', () => {\n                const node = el;\n                node.scratch('bendDistWeight', el.data('bendData'));\n            });\n            this.bendNode.on('dragfree', () => {\n                const node = el;\n                this.addBendChange(node.id(), node.scratch('bendDistWeight'), el.data('bendData'));\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    setBendWightDist(id, DW) {\n        this.getById(id).data('bendData', DW);\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('bendData');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        this.selectDeselectEventHandler();\n    }\n\n    reset() {\n        this.resetAllComp();\n        this.resetAllAction();\n    }\n}\n\nexport default CoreGraph;\n","const getSet = (ALL_GRAPHS) => {\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: window.btoa('ALL_GRAPHS'),\n    AUTHOR_NAME: window.btoa('AUTHOR_NAME'),\n\n    allgs: getSet(window.btoa('ALL_GRAPHS')),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n    getAuthorName() {\n        return localStorage.getItem(this.AUTHOR_NAME) || '';\n    },\n    setAuthorName(authorName) {\n        localStorage.setItem(this.AUTHOR_NAME, authorName);\n    },\n    clearGraph(id) {\n        window.localStorage.removeItem(id);\n    },\n    getFileList() {\n        return localStorage.getItem('fileList') || '';\n    },\n};\nexport default localStorageManager;\n","import Slider from 'rc-slider';\nimport React from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\nimport { actionType as T } from '../reducer';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState, dispatcher }) => {\n    const myGraph = superState.curGraphInstance;\n    if (!myGraph) return <></>;\n    const zoomValue = superState.zoomLevel;\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => {\n                                myGraph.setZoom(value);\n                                dispatcher({ type: T.SET_ZOOM_LEVEL, payload: value });\n                            }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","import { actionType as T } from '../reducer';\n\nconst getGraphFun = (superState) => superState.curGraphInstance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style, null, 'New');\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateNode(\n                        shouldUpdateLabel ? label : null, style, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateEdge(\n                        shouldUpdateLabel ? label : null, style, null, null, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\n// TODO\n// const saveLocal = (state, d) => {\n// };\n\nconst saveAction = (state, d, fileName) => {\n    getGraphFun(state).saveToDisk(fileName);\n};\n\nconst readFile = (state, setState, file) => {\n    if (file) {\n        const fr = new FileReader();\n        const projectName = file.name;\n        if (file.name.split('.').pop() === 'graphml') {\n            fr.onload = (x) => {\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: { projectName, graphML: x.target.result },\n                });\n            };\n            fr.readAsText(file);\n        }\n    }\n};\n\nconst readTextFile = (state, setState, file, fileHandle) => {\n    if (file) {\n        setState({\n            type: T.EDIT_TEXTFILE,\n            payload: { show: true, fileObj: file, fileHandle },\n        });\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_EDIT_DETAILS_MODAL,\n        payload: true,\n    });\n};\n\nconst undo = (state) => {\n    if (getGraphFun(state)) getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nconst viewHistory = (state, setState) => {\n    setState({ type: T.SET_HISTORY_MODAL, payload: true });\n};\n\nconst toggleServer = (state, dispatcher) => {\n    if (state.isWorkflowOnServer) {\n        dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: false });\n    } else {\n        dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: true });\n    }\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, readTextFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal, viewHistory,\n    toggleServer,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].graphID : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.graphID}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectName}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, actionHistory, serverID,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          serverID,\n        },\n        node: nodes,\n        edge: edges,\n        actionHistory,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint, type,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n                type,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.bendData.bendPoint,\n        type: edg.style.shape,\n    }));\n    const X = graphML({\n        nodes,\n        edges,\n        projectName: G.projectName,\n        id: G.id,\n        actionHistory: G.actionHistory,\n        serverID: G.serverID,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import md5 from 'md5';\nimport GraphComponent from './3-component';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\n\nclass GraphUndoRedo extends GraphComponent {\n    static methodsMapped\n\n    actionArr\n\n    curActionIndex\n\n    constructor(...props) {\n        super(...props);\n\n        this.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => this.addNode(...args, 0),\n            [GA.ADD_EDGE]: (...args) => this.addEdge(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => this.updateNode(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => this.updateEdge(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => this.updateData(...args, 0),\n            [GA.DEL_NODE]: (...args) => this.deleteNode(...args, 0),\n            [GA.DEL_EDGE]: (...args) => this.deleteElem(...args, 0),\n            [GA.SET_POS]: (...args) => this.setPos(...args, 0),\n            [GA.SET_DIM]: (...args) => this.setDim(...args, 0),\n            [GA.SET_BENDW]: (...args) => this.setBendWightDist(...args),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    resetAllAction() {\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    informUI() {\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    performAction({ actionName, parameters }) {\n        const action = this.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos, curPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos, prevPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addBendChange(id, prevDW, curDW) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_BENDW, parameters: [id, prevDW] },\n            { actionName: GA.SET_BENDW, parameters: [id, curDW] }, tid,\n        );\n    }\n\n    static sequencify(obj) {\n        if (!(obj instanceof Object)) return obj;\n        let r = [];\n        if (obj instanceof Array) {\n            r = obj.map(GraphUndoRedo.sequencify);\n        } else {\n            Object.keys(obj).sort().forEach((k) => {\n                r.push(`:${k}:`);\n                r.push(GraphUndoRedo.sequencify(obj[k]));\n            });\n        }\n        return r;\n    }\n\n    addAction(inverse, equivalent, tid, authorName = this.superState.authorName) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n\n        const actionIdentity = GraphUndoRedo.sequencify(equivalent).toString()\n            + GraphUndoRedo.sequencify(equivalent).toString()\n            + tid\n            + authorName;\n        this.actionArr.push({\n            tid,\n            inverse,\n            equivalent,\n            authorName,\n            hash: md5(\n                `${actionIdentity}|${this.actionArr.length ? this.actionArr.at(-1).hash : ''}`,\n            ),\n        });\n        this.curActionIndex += 1;\n        this.informUI();\n    }\n\n    undoSingleAction() {\n        if (this.curActionIndex !== 0) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n            this.informUI();\n        }\n    }\n\n    redoSingleAction() {\n        if (this.curActionIndex !== this.actionArr.length) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n            this.informUI();\n        }\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.informUI();\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.informUI();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.informUI();\n    }\n\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('dragfree', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n    }\n}\n\nexport default GraphUndoRedo;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst mapByDefault = (x, arr, def) => {\n    if (arr.includes(x)) return x;\n    return def;\n};\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: mapByDefault(p.parseProps('y:Shape.$.type'), ['rectangle', 'ellipse'], 'rectangle'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        shape: mapByDefault(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.type'),\n            ['dashed', 'dotted'], 'solid'),\n    },\n    bendData: {\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseActionML = (({ actionName, parameters }) => ({ actionName: actionName[0], parameters: parameters[0] }));\n\nconst parseActionHistory = (grahML) => grahML.parseProps('graphml.graph.actionHistory', 1)\n    .map(({\n        authorName, equivalent, inverse, tid,\n    }) => ({\n        authorName: authorName[0],\n        equivalent: parseActionML(equivalent[0]),\n        inverse: parseActionML(inverse[0]),\n        tid: tid[0],\n    }));\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n};\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n} from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, serverID } = parseDetails(grahML);\n        const actionHistory = parseActionHistory(grahML);\n        resolve({\n            id, projectName, edges, nodes, actionHistory, serverID,\n        });\n    });\n});\nexport default parser;\n","import GraphServer from './6-server';\n\nexport default GraphServer;\n","import { actionType as T } from '../../reducer';\nimport GraphLoadSave from './5-load-save';\n// import {\n//     postGraph, updateGraph, forceUpdateGraph, getGraph, getGraphWithHashCheck,\n// } from '../../serverCon/crud_http';\n\nclass GraphServer extends GraphLoadSave {\n    set(config) {\n        const { serverID } = config;\n        super.set(config);\n        if (serverID) {\n            this.setServerID(serverID);\n            this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n        }\n    }\n    // Not being immplemented in version 1\n    // pushToServer() {\n    //     if (this.serverID) {\n    //         updateGraph(this.serverID, this.getGraphML()).then(() => {\n\n    //         });\n    //     } else {\n    //         postGraph(this.getGraphML()).then((serverID) => {\n    //             this.set({ serverID });\n    //             this.cy.emit('graph-modified');\n    //         });\n    //     }\n    // }\n\n    // forcePushToServer() {\n    //     if (this.serverID) {\n    //         forceUpdateGraph(this.serverID, this.getGraphML()).then(() => {\n\n    //         });\n    //     } else {\n    //         postGraph(this.getGraphML()).then((serverID) => {\n    //             this.set({ serverID });\n    //         });\n    //     }\n    // }\n\n    // forcePullFromServer() {\n    //     if (this.serverID) {\n    //         getGraph(this.serverID).then((graphXML) => {\n    //             this.setGraphML(graphXML);\n    //         });\n    //     } else {\n    //         // eslint-disable-next-line no-alert\n    //         alert('Not on server');\n    //     }\n    // }\n\n    // pullFromServer() {\n    //     if (this.actionArr.length === 0) { this.forcePullFromServer(); return; }\n    //     if (this.serverID) {\n    //         getGraphWithHashCheck(this.serverID, this.actionArr.at(-1).hash).then((graphXML) => {\n    //             this.setGraphML(graphXML);\n    //         }).catch(() => {\n\n    //         });\n    //     } else {\n    //         // eslint-disable-next-line no-alert\n    //         alert('Not on server');\n    //     }\n    // }\n\n    build() {\n        // TODO\n        if (this.serverID);\n    }\n\n    debug() {\n        // TODO\n        if (this.serverID);\n    }\n\n    run() {\n        // TODO\n        if (this.serverID);\n    }\n\n    clear() {\n        // TODO\n        if (this.serverID);\n    }\n\n    stop() {\n        // TODO\n        if (this.serverID);\n    }\n\n    destroy() {\n        // TODO\n        if (this.serverID);\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n    }\n}\n\nexport default GraphServer;\n","import { saveAs } from 'file-saver';\nimport localStorageManager from '../local-storage-manager';\nimport graphmlBuilder from '../graphml/builder';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GraphUndoRedo from './4-undo-redo';\nimport graphMLParser from '../graphml/parser';\n\nclass GraphLoadSave extends GraphUndoRedo {\n    autoSaveIntervalId\n\n    constructor(...args) {\n        super(...args);\n        this.autoSaveIntervalId = null;\n    }\n\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('nodeediting.resizeend graph-modified', () => this.saveLocalStorage());\n    }\n\n    downloadImg(format) {\n        this.cy.emit('hide-bend');\n        this.cy.$('.eh-handle').remove();\n        if (format === 'PNG') saveAs(this.cy.png({ full: true }), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.jpg({ full: true }), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    static stringifyAction({ actionName, parameters }) {\n        return { actionName, parameters: window.btoa(JSON.stringify(parameters)) };\n    }\n\n    static parseAction({ actionName, parameters }) {\n        return { actionName, parameters: JSON.parse(window.atob(parameters)) };\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [],\n            edges: [],\n            actionHistory: [],\n            projectName: this.projectName,\n            id: this.id,\n            serverID: this.serverID,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                    style: {},\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const edgeJson = edge.json().data;\n                edgeJson.source = this.getRealSourceId(edge.source().id());\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.bendData.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.bendData.bendWeight, edgeJson.bendData.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        graph.actionHistory = this.actionArr.map(({\n            tid, inverse, equivalent, authorName, hash,\n        }) => ({\n            tid,\n            authorName,\n            inverse: GraphLoadSave.stringifyAction(inverse),\n            equivalent: GraphLoadSave.stringifyAction(equivalent),\n            hash,\n        }));\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectName}`;\n    }\n\n    saveToDisk(fileName) {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${fileName || `${this.getName()}-DHGWorkflow`}.graphml`);\n    }\n\n    getGraphML() {\n        return graphmlBuilder(this.jsonifyGraph());\n    }\n\n    loadJson(content) {\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, 0);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge({ ...edge, sourceID: edge.source, targetID: edge.target }, 0);\n        });\n        content.actionHistory.forEach(({\n            inverse, equivalent, tid, authorName,\n        }) => {\n            this.addAction(GraphLoadSave.parseAction(inverse), GraphLoadSave.parseAction(equivalent), tid, authorName);\n        });\n        this.setProjectName(content.projectName);\n        this.setServerID(this.serverID || content.serverID);\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveIntervalId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    setGraphML(graphML) {\n        graphMLParser(graphML).then((graphObject) => {\n            localStorageManager.save(this.id, graphObject);\n            this.loadGraphFromLocalStorage();\n        });\n    }\n\n    resetLocalStorage() {\n        localStorageManager.clearGraph(this.id);\n    }\n\n    loadGraphFromLocalStorage() {\n        this.reset();\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return window.btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n}\n\nexport default GraphLoadSave;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './graph-core';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\nimport GA from './graph-actions';\n\nclass TailoredGraph extends CoreGraph {\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('drag data moved', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TailoredGraph.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(edgeData, tid) {\n        const juncNode = this.getById(edgeData.sourceID);\n        const ed = super.addEdge({\n            ...edgeData,\n            label: juncNode.data('edgeLabel'),\n            style: juncNode.data('edgeStyle'),\n        }, tid);\n        juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(edgeData, tid) {\n        const { sourceID, targetID, style } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: edgeData.label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdge({\n            sourceID,\n            targetID: juncNode.id(),\n            style: {\n                ...style,\n                'target-arrow-shape': 'none',\n            },\n            type: 'special',\n        }, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNode.id() }, tid);\n    }\n\n    addEdgeAction(id, edgeData, tid) {\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [id] },\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{ ...edgeData, sourceID: this.getRealSourceId(edgeData.sourceID), id }],\n            },\n            tid,\n        );\n    }\n\n    addEdge(edgeData, tidd = this.getTid()) {\n        const tid = 0;\n        const { sourceID, targetID, label } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const juncNodes = sourceNode.outgoers('node').filter((node) => label && node.data('edgeLabel') === label);\n\n        let edge;\n        if (targetNode.data('type') !== 'ordin') return edge; // Don't Add Node\n        if (sourceNode.data('type') === 'special') edge = this.addEdgeWithJuncNode(edgeData, tid);\n        else if (juncNodes.length) edge = this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNodes[0].id() }, tid);\n        else if (label && label.length) edge = this.addEdgeWithoutJuncNode(edgeData, tid);\n        else {\n            this.dispatcher({\n                type: T.Model_Open_Create_Edge,\n                cb: (edgeLabel, edgeStyle) => {\n                    const message = this.validiateEdge(edgeLabel, edgeStyle, sourceID, targetID, null, 'New');\n                    if (message.ok) edge = this.addEdge({ ...edgeData, label: edgeLabel, style: edgeStyle }, tid);\n                    if (edge) this.addEdgeAction(edge.id(), { ...edgeData, label: edgeLabel, style: edgeStyle }, tidd);\n                    return message;\n                },\n            });\n        }\n        if (edge) this.addEdgeAction(edge.id(), edgeData, tidd);\n        return edge;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, 0);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, 0);\n        this.updateNode(junctionNode.data('id'), { backgroundColor: style.backgroundColor }, '', false, 0);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, 0));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node[type=\"special\"]')\n                .connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n            el.connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n\n            const node = this.getById(id);\n            this.addAction(\n                {\n                    actionName: GA.ADD_NODE,\n                    parameters: [\n                        node.data('label'), this.getStyle(node.id()), node.data('type'),\n                        node.position(), node.json().data, id,\n                    ],\n                },\n                { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n            );\n            super.deleteNode(id, 0);\n        } else {\n            if (!this.getById(id).length || el.removed()) return;\n            const jsonEd = this.getById(id).json().data;\n            this.addAction(\n                {\n                    actionName: GA.ADD_EDGE,\n                    parameters: [{\n                        ...jsonEd, sourceID: this.getRealSourceId(jsonEd.source), targetID: jsonEd.target,\n                    }],\n                },\n                { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n            );\n            const junctionNode = el.source();\n            super.deleteEdge(id, 0);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), 0);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    getEdgesBetweenNodes(n1, n2) {\n        const [c1, c2] = [n1, n2]\n            .map((n) => this.getById(this.getRealSourceId(n)))\n            .map((r) => r.outgoers('node[type=\"special\"]').union(r));\n        return c1.edgesWith(c2);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = {};\n        this.cy.$('edge[type=\"ordin\"]').forEach((edge) => {\n            const label = edge.data('label');\n            const sourceLabel = this.getById(this.getRealSourceId(edge.source().id())).data('label');\n            const targetLabel = edge.target().data('label');\n            const style = edge.data('style');\n            const id = edge.data('id');\n            if (!edges[label]) {\n                edges[label] = {\n                    targetLabel: [targetLabel], sourceLabel, id, label, style,\n                };\n            } else edges[label].targetLabel.push(targetLabel);\n        });\n        return [nodes, Object.values(edges)];\n    }\n}\n\nexport default TailoredGraph;\n","import React, { useEffect, useRef, useState } from 'react';\nimport path from 'path';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\nimport MyGraph from './graph-builder';\nimport { actionType as T } from './reducer';\n\nfunction Graph({\n    el, superState, dispatcher, graphID, serverID, graphML, projectName, graphContainerRef, active, loaded,\n}) {\n    const [instance, setInstance] = useState(null);\n    const ref = useRef();\n    const setContainerDim = (element) => {\n        const elToAss = element;\n        elToAss.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        elToAss.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n    };\n\n    const initialiseNewGraph = () => {\n        const myGraph = new MyGraph(\n            graphID, ref.current, dispatcher, superState, projectName, nodeValidator, edgeValidator,\n        );\n        if (graphID) myGraph.loadGraphFromLocalStorage();\n        if (serverID) {\n            myGraph.set({ serverID });\n            myGraph.forcePullFromServer();\n        }\n        if (graphML) myGraph.setGraphML(graphML);\n        myGraph.setCurStatus();\n        return myGraph;\n    };\n    useEffect(() => {\n        if (active && loaded && serverID) {\n            window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 's', serverID));\n        } else if (active && loaded && graphID) {\n            window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 'l', graphID));\n        }\n    }, [active, serverID, loaded, graphID]);\n    useEffect(() => instance && instance.set({ superState }), [instance, superState]);\n    useEffect(() => active && instance && instance.setCurStatus(), [active && instance]);\n    useEffect(() => {\n        if (active && instance) dispatcher({ type: T.SET_CUR_INSTANCE, payload: instance });\n    }, [active && instance]);\n\n    useEffect(() => {\n        if (ref.current) {\n            setContainerDim(ref.current);\n            window.addEventListener('resize', () => setContainerDim(ref.current));\n            setInstance(initialiseNewGraph());\n        }\n    }, [ref]);\n\n    const { id } = el;\n\n    return (\n        <div\n            style={{ zIndex: 1, display: active ? 'block' : 'none' }}\n            key={id}\n            className=\"graph-element\"\n            ref={ref}\n        />\n    );\n}\nexport default Graph;\n","const nodeValidator = `(node, nodes, edges) => {\n    var regex = /^[A-za-z0-9]+:[A-Za-z0-9.]+$/;\n    let message = { ok: true, err: null };\n    if (!regex.test(node.label)) {\n        message = {\n            ok: false,\n            err: 'Node with incorrect label.',\n        }\n        return message;\n    }\n    nodes.forEach((n) => {\n        if (n.id !== node.id && n.label.split(':')[0] === node.label.split(':')[0]) {\n            message = {\n                ok: false,\n                err: 'Node with same label exists.',\n            };\n        }\n    });\n    return message;\n    }`;\nconst edgeValidator = `(edge, nodes, edges) => {\nlet message = { ok: true, err: null };\nedges.forEach((e) => {\n    if (e.label === edge.label && e.sourceLabel !== edge.sourceLabel) {\n        message = {\n            ok: false,\n            err: 'Edge with same label exists.',\n        };\n    }\n});\nreturn message;\n}`;\n\n/* eslint-disable max-len */\nconst nodeValidatorFormat = `Takes **\\`node\\`** details under validation, existing **\\`nodes\\`**, existing **\\`edges\\`** and **\\`type\\`**\n\n**Node:** { label: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n\nconst edgeValidatorFormat = `Takes **\\`edge\\`** details under validation, existing **\\`nodes\\`** and existing **\\`edges\\`** and **\\`type\\`**\n\n**Edge:** { label: String, sourceLabel: String, targetLabel: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n/* eslint-enable max-len */\n\nexport {\n    nodeValidator, edgeValidator, nodeValidatorFormat, edgeValidatorFormat,\n};\n","import React, { useEffect } from 'react';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graphWorkspace.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport Graph from './GraphArea';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.useRef();\n    const { dispatcher, superState } = props;\n    const [loadedFromStorage, setLoadedFromStorage] = React.useState(false);\n    const [loadedFromURL, setLoadedFromURL] = React.useState(false);\n\n    useEffect(() => {\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphID) => ({\n            graphID,\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n        setLoadedFromStorage(true);\n    }, []);\n\n    useEffect(() => {\n        if (!loadedFromStorage) return;\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(window.atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n            dispatcher({ type: T.ADD_GRAPH, payload: { graphID: gid } });\n        }\n        const urlParms = window.location.pathname.split('/');\n        const serverIDIndex = urlParms.indexOf('s');\n        const localIDIndex = urlParms.indexOf('l');\n        if (serverIDIndex !== -1 && serverIDIndex + 1 < urlParms.length) {\n            const serverID = urlParms[serverIDIndex + 1];\n            dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n        }\n        if (localIDIndex !== -1 && localIDIndex + 1 < urlParms.length) {\n            const graphID = urlParms[localIDIndex + 1];\n            dispatcher({ type: T.ADD_GRAPH, payload: { graphID } });\n        }\n        setLoadedFromURL(true);\n    }, [loadedFromStorage]);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <Graph\n                        el={el}\n                        i={i}\n                        superState={superState}\n                        graphContainerRef={graphContainerRef}\n                        dispatcher={dispatcher}\n                        key={el.graphID}\n                        active={i === superState.curGraphIndex}\n                        graphID={el.graphID}\n                        serverID={el.serverID}\n                        graphML={el.graphML}\n                        projectName={el.projectName}\n                        loaded={loadedFromURL}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setErrorMessage('');\n    }, [ModelOpen]);\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","/* eslint-disable no-alert */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare, FaHistory,\n    FaHammer, FaBug, FaBomb, FaToggleOn, FaThermometerEmpty,\n} from 'react-icons/fa';\n\nimport {\n    // FiChevronDown, FiChevronsDown, FiChevronsUp, FiChevronUp,\n    FiPlay, FiStopCircle, FiToggleLeft, FiTriangle,\n} from 'react-icons/fi';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal, viewHistory,\n    toggleServer,\n    // openSettingModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state, dispatcher) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'menu',\n        text: 'Save',\n        icon: FaSave,\n        action: (s, d) => [\n            { fn: () => saveAction(s, d), name: 'Save As' },\n        ],\n        active: false,\n    },\n    {\n        type: 'menu',\n        text: 'Save As',\n        icon: FaSave,\n        action: (s, d) => [\n            { fn: () => saveAction(s, d, prompt('File Name:')), name: 'Save As' },\n        ],\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Empty',\n        icon: FaThermometerEmpty,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'History',\n        icon: FaHistory,\n        action: viewHistory,\n        active: true,\n    },\n    { type: 'vsep' },\n    // server buttons\n    {\n        type: 'action',\n        text: 'Server',\n        icon: state.isWorkflowOnServer ? FaToggleOn : FiToggleLeft,\n        action: () => toggleServer(state, dispatcher),\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Build',\n        icon: FaHammer,\n        action: () => state.curGraphInstance && state.curGraphInstance.build(),\n        active: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Debug',\n        icon: FaBug,\n        action: () => state.curGraphInstance && state.curGraphInstance.debug(),\n        active: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Run',\n        icon: FiPlay,\n        action: () => state.curGraphInstance && state.curGraphInstance.run(),\n        active: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: () => state.curGraphInstance && state.curGraphInstance.clear(),\n        active: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Stop',\n        icon: FiStopCircle,\n        action: () => state.curGraphInstance && state.curGraphInstance.stop(),\n        active: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Destroy',\n        icon: FaBomb,\n        action: () => state.curGraphInstance && state.curGraphInstance.destroy(),\n        active: state.isWorkflowOnServer,\n    },\n\n    // Not being implemented in version 1\n    // {\n    //     type: 'action',\n    //     text: 'Push',\n    //     icon: FiChevronUp,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.pushToServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Pull',\n    //     icon: FiChevronDown,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.pullFromServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Force Push',\n    //     icon: FiChevronsUp,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.forcePushToServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Force Pull',\n    //     icon: FiChevronsDown,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.forcePullFromServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // { type: 'vsep' },\n    { type: 'space' },\n    // Not being implemented in version 1\n    // {\n    //     type: 'action',\n    //     text: 'Settings',\n    //     icon: FaRegSun,\n    //     action: openSettingModal,\n    //     active: true,\n    // },\n    {\n        type: 'action',\n        text: 'Contribute',\n        icon: FiTriangle,\n        action: () => { window.open('https://github.com/ControlCore-Project/concore-editor', '_blank'); },\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Export',\n        icon: FaDownload,\n        action: (s, d) => [\n            { fn: () => downloadImg(s, d, 'JPG'), name: 'JPG' },\n            { fn: () => downloadImg(s, d, 'PNG'), name: 'PNG' },\n        ],\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            {action().map(({ fn, name }) => <MenuItem onClick={fn} key={name}>{name}</MenuItem>)}\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, active, tabIndex, hotkey, superState,\n}) => (\n    <ActionButton {...{\n        Icon, text, active, tabIndex, action: () => superState.fileRef.current.click(), hotkey,\n    }}\n    />\n);\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { MdEdit, MdDone } from 'react-icons/md';\nimport './serverActions.css';\n\nconst ServerActions = () => {\n    const inputRef = useRef();\n    const [isReadOnly, setIsReadOnly] = useState(true);\n    useEffect(() => { inputRef.current.readOnly = isReadOnly; }, [isReadOnly]);\n    const edit = () => {\n        setIsReadOnly(false);\n        inputRef.current.focus();\n    };\n    const save = () => {\n        setIsReadOnly(true);\n    };\n    return (\n        <div className=\"server-actions-container\">\n            <input className=\"server-id\" readOnly ref={inputRef} />\n            {\n                isReadOnly\n                    ? (\n                        <div\n                            className=\"edit-icon\"\n                            role=\"button\"\n                            onKeyDown={edit}\n                            onClick={edit}\n                            tabIndex={0}\n                        >\n                            <MdEdit size=\"25\" />\n                        </div>\n                    )\n                    : (\n                        <div\n                            className=\"edit-icon\"\n                            role=\"button\"\n                            onKeyDown={save}\n                            onClick={save}\n                            tabIndex={0}\n                        >\n                            <MdDone size=\"25\" />\n                        </div>\n                    )\n            }\n        </div>\n    );\n};\n\nexport default ServerActions;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\nimport ServerActions from './serverActions/ServerActions';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ superState, dispatcher }) => {\n    const actions = toolbarList(superState, dispatcher);\n    React.useEffect(() => {\n        setHotKeys(actions, superState, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    superState.curGraphInstance ? `${\n                        superState.curGraphInstance.projectName\n                    } - concore Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(superState, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} superState={superState} />;\n                        case 'action': return <ActionButton {...props} />;\n                        case 'serverActions': return <ServerActions superState={superState} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('Untitled');\n    const [authorName, setAuthorName] = useState('Default');\n    // const [serverID, setServerID] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const newGraphModal = superState.newGraphModal || superState.graphs.length === 0;\n    const editDetailsModal = superState.editDetailsModal || (curGraph && !curGraph.projectName);\n\n    const setProjAuthorName = (a) => {\n        setAuthorName(a);\n        dispatcher({\n            type: T.SET_AUTHOR,\n            payload: a,\n        });\n    };\n\n    useEffect(() => {\n        if (superState.editDetailsModal && curGraph) {\n            setProjectName(curGraph.projectName);\n        } else setProjectName('');\n    }, [superState.authorName, superState.editDetailsModal, curGraph]);\n\n    useEffect(() => {\n        if (superState.authorName) setAuthorName(superState.authorName);\n        else {\n            const authorNameE = localStorageManager.getAuthorName();\n            setProjAuthorName(authorNameE);\n        }\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (newGraphModal) dispatcher({ type: T.ADD_GRAPH, payload: { projectName } });\n        else if (editDetailsModal) {\n            superState.curGraphInstance.setProjectName(projectName);\n            dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n        }\n        setProjAuthorName(authorName);\n        localStorageManager.setAuthorName(authorName);\n    };\n\n    const openExisting = () => {\n        superState.fileRef.current.click();\n    };\n\n    const closeModal = () => {\n        if (superState.newGraphModal) dispatcher({ type: T.SET_NEW_GRAPH_MODAL, payload: false });\n        else if (superState.editDetailsModal) dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n    };\n    // const loadFromServer = () => {\n    //     dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n    // };\n    const NewWorkflow = () => (\n        <>\n            {/* <div className=\"divider\" />\n            <input\n                placeholder=\"Enter the Server ID of Workflow\"\n                value={serverID}\n                onChange={(e) => setServerID(e.target.value)}\n                className=\"serverIDText\"\n            />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={loadFromServer}\n            >\n                Load From Server\n\n            </button> */}\n            <div className=\"divider\" />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={openExisting}\n            >\n                Open Existing From GraphML File\n\n            </button>\n        </>\n    );\n\n    return (\n        <Modal\n            ModelOpen={newGraphModal || editDetailsModal}\n            closeModal={superState.editDetailsModal || superState.newGraphModal ? closeModal : null}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={authorName}\n                    onChange={(e) => setAuthorName(e.target.value)}\n                    required\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                </div>\n                <div className=\"expand\">\n                    {newGraphModal && <NewWorkflow />}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal && superState.curGraphInstance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.curGraphInstance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height, docString,\n}) => {\n    const inputRef = React.createRef();\n    const parseMD = (s) => s.split('**').map((e, i) => {\n        if (i % 2) return <span key={e}><b>{e}</b></span>;\n        return <span key={e}>{e}</span>;\n    });\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            {docString\n                ? (\n                    <div className=\"docStr\">\n                        {parseMD(docString)}\n                    </div>\n                ) : <div />}\n            <br />\n            {pre\n                ? (\n                    <textarea\n                        className=\"preTextField\"\n                        value={pre}\n                        readOnly\n                        spellCheck=\"false\"\n                    />\n                ) : <div />}\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height, width: '90vw' }}\n                ref={inputRef}\n            />\n            {post\n                ? (\n                    <textarea\n                        className=\"postTextField\"\n                        readOnly\n                        value={post}\n                        spellCheck=\"false\"\n                    />\n                ) : <div />}\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\nimport { nodeValidatorFormat, edgeValidatorFormat } from '../../config/defaultValidators';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setNodeValidator(superState.curGraphInstance.getNodeValidator());\n            setEdgeValidator(superState.curGraphInstance.getEdgeValidator());\n        }\n    }, [superState.curGraphInstance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        try {\n            superState.curGraphInstance.setEdgeNodeValidator({\n                nodeValidator: `(node, nodes, edges, type)=>{${nodeValidator}}`,\n                edgeValidator: `(edge, nodes, edges, type)=>{${edgeValidator}}`,\n            });\n            dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n            setErrorMessage('');\n        } catch (e) {\n            setErrorMessage(e.message);\n        }\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={200}\n                        docString={nodeValidatorFormat}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={200}\n                        docString={edgeValidatorFormat}\n                    />\n                </div>\n                <div className=\"error\">{errorMessage}</div>\n\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useEffect } from 'react';\nimport { FaFileImport } from 'react-icons/fa';\nimport './file-drag-drop.css';\nimport { actionType as T } from '../reducer';\nimport { readFile } from '../toolbarActions/toolbarFunctions';\n\nconst app = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n\n    useEffect(() => {\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n        const p = document.getElementsByTagName('body')[0];\n        const c = document.getElementsByClassName('drag-drop-area')[0];\n        let cc = 0;\n        p.addEventListener('dragenter', (e) => {\n            e.preventDefault();\n            cc += 1;\n            if (cc === 1) c.classList.remove('hidden');\n        });\n        p.addEventListener('dragleave', (e) => {\n            e.preventDefault();\n            cc -= 1;\n            if (cc === 0) c.classList.add('hidden');\n        });\n\n        p.addEventListener('dragover', (e) => {\n            e.preventDefault();\n        });\n        ['dragend', 'dragexit', 'drop'].forEach((dragEvent) => {\n            p.addEventListener(dragEvent, (e) => {\n                e.preventDefault();\n                cc = 0;\n                c.classList.add('hidden');\n            });\n        });\n\n        p.addEventListener('drop', (e) => {\n            e.preventDefault();\n            fileRef.current.value = null;\n            if (e.dataTransfer.files.length === 1\n                && e.dataTransfer.files[0].name.split('.').slice(-1)[0] === 'graphml') {\n                readFile(superState, dispatcher, { target: e.dataTransfer });\n            }\n        });\n    }, []);\n    return (\n        <div className=\"drag-drop-area hidden\">\n            <div className=\"inner\">\n                <FaFileImport size={100} style={{ color: '#1e88e5' }} />\n                <div>\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e)}\n                    />\n                    <span className=\"arrow\">&#10230;</span>\n                    <h1 className=\"text\">Drop the File anywhere to open</h1>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default app;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport GA from '../../graph-builder/graph-actions';\nimport './history.css';\n\nconst HistoryModal = ({ superState, dispatcher }) => {\n    const [curState, setcurState] = useState(0);\n    const [historyList, setHistoryList] = useState([]);\n    const [historyView, setHistoryView] = useState([]);\n    const actions = [\n        GA.ADD_NODE, GA.ADD_EDGE,\n        GA.UPDATE_NODE, GA.UPDATE_EDGE,\n        GA.DEL_NODE, GA.DEL_EDGE,\n        GA.SET_DIM, GA.SET_BENDW, GA.SET_POS,\n    ];\n    const mapActionToTrue = () => {\n        const res = {};\n        actions.forEach((action) => { res[action] = true; });\n        return res;\n    };\n    const [filterAction, setFilterAction] = useState(mapActionToTrue());\n\n    const getLabelFromID = (x) => {\n        if (superState.curGraphInstance) {\n            return superState.curGraphInstance.getLabelFromID(x);\n        }\n        return '';\n    };\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setHistoryList([\n                ...superState.curGraphInstance.actionArr\n                    .slice().reverse().map((action, i) => ({ ...action, i })),\n            ]);\n            setcurState(\n                superState.curGraphInstance.actionArr.length\n                - superState.curGraphInstance.curActionIndex,\n            );\n        }\n    }, [superState.viewHistory, superState.graphs, superState.curGraphInstance, curState]);\n\n    const stringifyAction = (equivalent) => {\n        const par = equivalent.parameters;\n        switch (equivalent.actionName) {\n        case GA.ADD_NODE: return `Created new Node: ${par[0]}`;\n        case GA.ADD_EDGE: return `Created new Edge ${\n            getLabelFromID(par[0].id)\n        } between ${getLabelFromID(par[0].sourceID)} and ${getLabelFromID(par[0].targetID)}`;\n        case GA.UPDATE_NODE: return `Updated Label/Style for ${getLabelFromID(par[0])} node`;\n        case GA.UPDATE_EDGE: return `Updated Edge ${getLabelFromID(par[0])}`;\n        case GA.DEL_NODE: return `Deleted Node: ${getLabelFromID(par[0])}`;\n        case GA.DEL_EDGE: return `Deleted Edge: ${getLabelFromID(par[0])}`;\n        case GA.SET_POS: return `Moved node ${getLabelFromID(par[0])} on canvas`;\n        case GA.SET_DIM: return `Changed dimension of node ${getLabelFromID(par[0])}`;\n        case GA.SET_BENDW: return `Modified Bend Point of node ${getLabelFromID(par[0])}`;\n        default: return '';\n        }\n    };\n\n    const stringifyActionType = {\n        [GA.ADD_NODE]: 'NodeAddition:',\n        [GA.ADD_EDGE]: 'EdgeAddition',\n        [GA.UPDATE_NODE]: 'NodeUpdates',\n        [GA.UPDATE_EDGE]: 'EdgeUpdates',\n        [GA.DEL_NODE]: 'NodeDeletion',\n        [GA.DEL_EDGE]: 'EdgeDeletion',\n        [GA.SET_POS]: 'NodePosChange',\n        [GA.SET_DIM]: 'NodeDimensionChange',\n        [GA.SET_BENDW]: 'EdgeBend',\n    };\n\n    const restoreState = (index) => {\n        // eslint-disable-next-line no-alert\n        if (window.confirm('Are you sure to restore the selected state?')) {\n            let tempCurState = curState;\n            while (index > tempCurState) {\n                superState.curGraphInstance.undoSingleAction();\n                tempCurState += 1;\n            }\n            while (index < tempCurState) {\n                superState.curGraphInstance.redoSingleAction();\n                tempCurState -= 1;\n            }\n            setcurState(tempCurState);\n        }\n    };\n    const prefixTid = (tid, str, authorName, index, hash) => {\n        const DT = new Date(parseInt(tid, 10));\n        const date = DT.toLocaleDateString();\n        const time = DT.toLocaleTimeString();\n        const c = (\n            <>\n                <td>\n                    {\n                        index === curState ? '[Current]' : (\n                            <button className=\"a-link\" type=\"button\" onClick={() => restoreState(index)}>\n                                [Restore]\n                            </button>\n                        )\n                    }\n                </td>\n                <td>{`${date}-${time}`}</td>\n                <td>\n                    [\n                    <b>{`${authorName}`}</b>\n                    ]\n                </td>\n                <td style={{ fontWeight: 100 }}>{str}</td>\n                <td style={{ fontWeight: 100 }}>{hash}</td>\n            </>\n        );\n        // if (index === curState) return <u>{c}</u>;\n        return c;\n    };\n\n    const parseAction = ({\n        equivalent, tid, i, authorName, hash,\n    }) => prefixTid(\n        tid, stringifyAction(equivalent), authorName, i, hash,\n    );\n\n    useEffect(() => {\n        setHistoryView(historyList.filter((action) => filterAction[action.equivalent.actionName]).map(parseAction));\n    }, [filterAction, historyList]);\n\n    const close = () => dispatcher({ type: T.SET_HISTORY_MODAL, payload: false });\n    return (\n        <Modal\n            ModelOpen={superState.viewHistory}\n            closeModal={close}\n            title=\"History\"\n        >\n            <div className=\"hist-container\">\n                <fieldset>\n                    <legend>Filters</legend>\n                    {\n                        actions.map((action) => (\n                            <label htmlFor={action} className=\"filter_checkbox\" key={action}>\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"filter\"\n                                    checked={filterAction[action]}\n                                    onChange={() => setFilterAction({\n                                        ...filterAction,\n                                        [action]: !filterAction[action],\n                                    })}\n                                />\n                                {stringifyActionType[action]}\n                            </label>\n                        ))\n                    }\n                </fieldset>\n                <div className=\"hist-list\">\n                    <table style={{ listStyleType: 'circle' }}>\n                        <tbody>\n                            {historyView.map((h, i) => (\n                                <tr\n                                    className={`hist-element ${i === curState ? 'active' : ''}`}\n                                    // eslint-disable-next-line react/no-array-index-key\n                                    key={i}\n                                >\n                                    {h}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default HistoryModal;\n","/* eslint-disable object-shorthand */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/state-in-constructor */\nimport React, { useEffect, useState } from 'react';\nimport FileBrowser, { FileRenderers, FolderRenderers } from 'react-keyed-file-browser';\nimport { readFile, readTextFile } from '../toolbarActions/toolbarFunctions';\nimport { actionType as T } from '../reducer';\nimport './fileBrowser.css';\n\nconst LocalFileBrowser = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n    const [dirButton, setDirButton] = useState(false);\n\n    useEffect(() => {\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            setDirButton(true);\n        }\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n    }, []);\n\n    const [fileState, setFileState] = useState([]);\n    // const [fileState, setFileState] = useState(() => {\n    //     let files = [];\n    //     files = [];\n    //     // if (window.localStorage.getItem('fileList')) {\n    //     //     files = JSON.parse(window.localStorage.getItem('fileList'));\n    //     //     console.log(files);\n    //     //     return files;\n    //     // }\n    //     return { files };\n    // });\n\n    // TODO\n    useEffect(() => {\n        // if(window.localStorage.getItem('fileList')) {\n        //     const allFiles = window.localStorage.getItem('fileList');\n        //     setFileState({ files: allFiles });\n        // }\n        window.localStorage.setItem('fileList', JSON.stringify(fileState));\n    }, [fileState]);\n\n    const handleSelectFile = (data) => {\n        // eslint-disable-next-line max-len\n        if (data.fileObj.name.split('.').pop() === 'graphml') readFile(superState, dispatcher, data.fileObj, data.fileHandle);\n        else {\n            readTextFile(superState, dispatcher, data.fileObj, data.fileHandle);\n        }\n    };\n\n    const handleFileInDirs = async (topKey, value) => {\n        let state = [];\n        // eslint-disable-next-line no-restricted-syntax\n        for await (const [key, valueSubDir] of value.entries()) {\n            if (valueSubDir.kind === 'file') {\n                const fileData = await valueSubDir.getFile();\n                state = state.concat([{\n                    key: `${topKey}/${value.name}/${key}`,\n                    modified: fileData.lastModified,\n                    size: fileData.size,\n                    fileObj: fileData,\n                    fileHandle: value,\n                }]);\n            } else if (valueSubDir.kind === 'directory') {\n                const res = await handleFileInDirs();\n                state = state.concat(res);\n            }\n        }\n        return state;\n    };\n\n    const newFeature = async () => {\n        const dirHandle = await window.showDirectoryPicker();\n        let state = [];\n        // eslint-disable-next-line no-restricted-syntax\n        for await (const [key, value] of dirHandle.entries()) {\n            if (value.kind === 'file') {\n                const fileData = await value.getFile();\n                state = state.concat([{\n                    key: `${dirHandle.name}/${key}`,\n                    modified: fileData.lastModified,\n                    size: fileData.size,\n                    fileObj: fileData,\n                    fileHandle: value,\n                }]);\n            } else if (value.kind === 'directory') {\n                const res = await handleFileInDirs(dirHandle.name, value);\n                state = state.concat(res);\n            }\n        }\n        setFileState([]);\n        setFileState(state);\n    };\n\n    return (\n        <div>\n            {!dirButton && (\n                <label\n                    className=\"inputButton\"\n                    htmlFor=\"fileButton\"\n                >\n                    Upload Directory\n                    <input\n                        type=\"file\"\n                        accept=\".py, .m, .c, .cpp, .v, .sh\"\n                        ref={fileRef}\n                        id=\"fileButton\"\n                        style={{ display: 'none' }}\n                        onClick={(e) => { e.target.value = null; }}\n                        onChange={(e) => {\n                            setFileState([]);\n                            setFileState((state) => {\n                                for (let i = 0; i < e.target.files.length; i += 1) {\n                                    state = state.concat([{\n                                        key: e.target.files[i].webkitRelativePath,\n                                        modified: e.target.files[i].lastModified,\n                                        size: e.target.files[i].size,\n                                        fileObj: e.target.files[i],\n                                    }]);\n                                }\n                                return state;\n                            });\n                            window.localStorage.setItem('fileList', JSON.stringify(fileState));\n                        }}\n                        directory\n                        webkitdirectory=\"true\"\n                    />\n                </label>\n            ) }\n            {dirButton && (\n                <button\n                    type=\"button\"\n                    className=\"inputButton\"\n                    disabled={!dirButton}\n                    onClick={newFeature}\n                    ref={fileRef}\n                >\n                    Upload Directory\n                </button>\n            )}\n            <h4>\n                Folder Name :\n                {' '}\n                {fileState[0] ? fileState[0].key.split('/')[0] : '' }\n            </h4>\n            <FileBrowser\n                files={fileState}\n                onSelectFile={handleSelectFile}\n                detailRenderer={() => null}\n                fileRenderer={FileRenderers.TableFile}\n                folderRenderer={FolderRenderers.TableFolder}\n            />\n        </div>\n    );\n};\nexport default LocalFileBrowser;\n","import React, { useState, useEffect } from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport Modal from './ParentModal';\nimport './file-edit.css';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/themes/prism.css';\nimport { actionType as T } from '../../reducer';\n\nconst FileEditModal = ({ superState, dispatcher }) => {\n    const [codeStuff, setCodeStuff] = useState('');\n    const [fileName, setFileName] = useState('');\n    const close = () => dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    // TODO - Save file\n    async function submit() {\n        if (superState.fileHandle) {\n            const stream = await superState.fileHandle.createWritable();\n            await stream.write(codeStuff);\n            await stream.close();\n        } else {\n            // eslint-disable-next-line no-alert\n            alert('Switch to Edge/Chrome!');\n        }\n        dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    useEffect(() => {\n        if (superState.fileObj) {\n            setFileName(superState.fileObj.name);\n            const fr = new FileReader();\n            fr.onload = (x) => {\n                setCodeStuff(x.target.result);\n            };\n            fr.readAsText(superState.fileObj);\n        }\n    }, [superState.fileObj]);\n\n    return (\n        <Modal\n            ModelOpen={superState.textFileModal}\n            closeModal={close}\n            title={fileName}\n        >\n            <div className=\"File Edit Container\">\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n                <div\n                    style={{\n                        minHeight: '400px',\n                    }}\n                >\n                    <Editor\n                        value={codeStuff}\n                        onValueChange={(e) => setCodeStuff(e)}\n                        highlight={(code) => highlight(code, languages.js)}\n                        padding={10}\n                        style={{\n                            fontFamily: '\"Arial\"',\n                            fontSize: 16,\n                            minHeight: '100vh',\n                            minWidth: '80vw',\n                            border: '1px solid black',\n                        }}\n                    />\n                </div>\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default FileEditModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphWorkspace from './GraphWorkspace';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\nimport FileDragDrop from './component/File-drag-drop';\nimport HistoryModal from './component/modals/History';\nimport LocalFileBrowser from './component/fileBrowser';\nimport FileEditModal from './component/modals/FileEdit';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <HistoryModal superState={superState} dispatcher={dispatcher} />\n            <FileEditModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <FileDragDrop dispatcher={dispatcher} />\n            <Header superState={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <div style={{ display: 'flex', overflow: 'auto' }}>\n                    <LocalFileBrowser dispatcher={dispatcher} />\n                </div>\n                <div className=\"graph\" style={{ display: 'flex', overflow: 'hidden' }}>\n                    <GraphWorkspace dispatcher={dispatcher} superState={superState} />\n                </div>\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(bendData.bendDistance)',\n            segmentWeights: 'data(bendData.bendWeight)',\n            edgeDistances: 'node-position',\n            lineStyle: 'data(style.shape)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n    SET_BENDW: 'SET_BENDW',\n};\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n    SET_FILE_REF: 'SET_FILE_REF',\n    SET_HISTORY_MODAL: 'SET_HISTORY_MODAL',\n    SET_AUTHOR: 'SET_AUTHOR',\n    IS_WORKFLOW_ON_SERVER: 'IS_WORKFLOW_ON_SERVER',\n    SET_CUR_INSTANCE: 'SET_CUR_INSTANCE',\n    SET_ZOOM_LEVEL: 'SET_ZOOM_LEVEL',\n    SET_EDIT_DETAILS_MODAL: 'SET_EDIT_DETAILS_MODAL',\n    SET_NEW_GRAPH_MODAL: 'SET_NEW_GRAPH_MODAL',\n    EDIT_TEXTFILE: 'EDIT_TEXTFILE',\n};\n\nexport default zealit(actionType);\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\n// import ColorBox from './ColorBox';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet] = useState(false);\n    const [labelName, setLabelName] = useState('');\n    const [labelFile, setLabelFile] = useState('');\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    useEffect(() => {\n        setLabelName(data.label.split(':')[0]);\n    }, [data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                {/* <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div /> */}\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <>\n                        <input\n                            className=\"nodeLabel\"\n                            ref={inputRef}\n                            type=\"text\"\n                            required\n                            label=\"Node Label\"\n                            placeholder=\"Enter Node Label\"\n                            value={data.label.split(':')[0]}\n                            onChange={(e) => {\n                                if (e.target.value.slice(-1) !== ':') {\n                                    setLabelName(`${e.target.value}:`);\n                                    setData({ ...data, label: `${e.target.value}:${labelFile}` });\n                                } else {\n                                    setLabelName(e.target.value);\n                                    setData({ ...data, label: e.target.value + labelFile });\n                                }\n                            }}\n                        />\n\n                        <input\n                            className=\"nodeLabelFile\"\n                            type=\"text\"\n                            required\n                            label=\"Node Label file\"\n                            placeholder=\"Select file\"\n                            onChange={(e) => {\n                                setLabelFile(e.target.value.split('/').pop());\n                                if (labelName) {\n                                    let lname = labelName;\n                                    if (labelName.slice(-1) !== ':') {\n                                        setLabelName(`${labelName}:`);\n                                        lname += ':';\n                                    }\n                                    setData({ ...data, label: lname + e.target.value.split('/').pop() });\n                                } else setData({ ...data, label: `:${e.target.value.split('/').pop()}` });\n                            }}\n                            list=\"files\"\n                        />\n                        <datalist id=\"files\">\n                            {\n                                localStorageManager.getFileList()\n                                    // eslint-disable-next-line max-len, prefer-arrow-callback\n                                    ? JSON.parse(localStorageManager.getFileList()).map(function fn(item, index) {\n                                        const acceptedTypes = ['.v', '.c', '.cpp', '.py', '.m', '.sh'];\n                                        const list = [];\n                                        // eslint-disable-next-line max-len\n                                        if ((acceptedTypes.some((substring) => item.key.toString().includes(substring)))) {\n                                            list.push(item.key.toString());\n                                        }\n                                        // eslint-disable-next-line jsx-a11y/control-has-associated-label, react/no-array-index-key\n                                        return <option value={list} key={index} />;\n                                    })\n                                    : ''\n                            }\n                        </datalist>\n                    </>\n                ) : ''}\n                {/* <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                /> */}\n\n                {/* <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                /> */}\n\n                {/* <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                /> */}\n\n                {/* <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                /> */}\n\n                {/* <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                /> */}\n                {/* <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                /> */}\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\n// import ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    // const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    // const RadioBtn = ({ name, shape }) => (\n    //     <label htmlFor=\"ellipse\">\n    //         <input\n    //             type=\"radio\"\n    //             name=\"shape\"\n    //             value={shape}\n    //             checked={data.style.shape === shape}\n    //             onChange={() => setStyle({ shape })}\n    //         />\n    //         {name}\n    //     </label>\n    // );\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{\n                        borderBottomWidth: data.style.thickness,\n                        borderBottomColor: data.style.backgroundColor,\n                        borderBottomStyle: data.style.shape,\n                    }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"span-rest edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                {/* <div> Shape</div>\n                <div className=\"span-rest hascheckbox\">\n                    <div><RadioBtn name=\"Solid\" shape=\"solid\" /></div>\n                    <div><RadioBtn name=\"Dotted\" shape=\"dotted\" /></div>\n                    <div><RadioBtn name=\"Dashed\" shape=\"dashed\" /></div>\n                </div>\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                /> */}\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n    shape: 'solid',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    shareModal: false,\n    settingsModal: false,\n    editDetailsModal: false,\n    newGraphModal: false,\n\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    graphs: [],\n    curGraphIndex: 0,\n    viewHistory: false,\n    authorName: '',\n    isWorkflowOnServer: false,\n    curGraphInstance: null,\n    zoomLevel: 100,\n};\n\nconst initialGraphState = {\n    projectName: '',\n    graphID: null,\n    serverID: null,\n    graphML: null,\n\n    component: null,\n    instance: null,\n    id: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        let foundi = -1;\n        const graphID = action.payload.graphID || new Date().getTime().toString();\n        state.graphs.forEach((g, i) => {\n            if ((g.graphID && g.graphID === graphID) || (g.serverID && g.serverID === action.payload.serverID)) {\n                foundi = i;\n            }\n        });\n        if (foundi !== -1) {\n            return { ...state, newGraphModal: false, curGraphIndex: foundi };\n        }\n        return {\n            ...state,\n            newGraphModal: false,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    projectName: action.payload.projectName,\n                    graphID,\n                    serverID: action.payload.serverID,\n                    graphML: action.payload.graphML,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.SET_CUR_INSTANCE: {\n        return { ...state, curGraphInstance: action.payload };\n    }\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n\n    case T.NEW_GRAPH: return { ...state, newGraphModal: true };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => (\n            g.graphID === action.payload.graphID ? { ...g, [action.payload.type]: action.payload.value }\n                : g\n        ));\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    case T.SET_FILE_REF: {\n        return { ...state, fileRef: action.payload };\n    }\n\n    case T.SET_HISTORY_MODAL: {\n        return { ...state, viewHistory: action.payload };\n    }\n\n    case T.SET_AUTHOR: {\n        return { ...state, authorName: action.payload };\n    }\n\n    case T.IS_WORKFLOW_ON_SERVER: {\n        return { ...state, isWorkflowOnServer: action.payload };\n    }\n    case T.SET_ZOOM_LEVEL: {\n        return { ...state, zoomLevel: action.payload };\n    }\n    case T.SET_EDIT_DETAILS_MODAL: {\n        return { ...state, editDetailsModal: action.payload };\n    }\n    case T.SET_NEW_GRAPH_MODAL: {\n        return { ...state, newGraphModal: action.payload };\n    }\n\n    case T.EDIT_TEXTFILE: {\n        return {\n            ...state,\n            textFileModal: action.payload.show,\n            fileObj: action.payload.fileObj,\n            fileHandle: action.payload.fileHandle,\n        };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n"],"sourceRoot":""}