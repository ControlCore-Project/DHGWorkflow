{"version":3,"sources":["reducer/actionType.js","component/modals/NodeDetails.jsx","component/modals/ColorBox.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js","graph-builder/graph-core/3-component.js","graph-builder/graph-core/2-canvas.js","graph-builder/graph-core/1-core.js","graph-builder/local-storage-manager.js","graph-builder/calculations/bending-dist-weight.js","component/ZoomSetter.jsx","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-core/4-undo-redo.js","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","graph-builder/graph-core/index.js","graph-builder/graph-core/6-server.js","graph-builder/graph-core/5-load-save.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","GraphArea.jsx","config/defaultValidators.js","GraphWorkspace.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/serverActions/ServerActions.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","component/File-drag-drop.jsx","component/modals/History.jsx","component/fileBrowser.jsx","component/modals/FileEdit.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","config/cytoscape-style.js","config/cytoscape-options.js","graph-builder/graph-actions.js"],"names":["zealit","require","$$typeof","Model_Open_Create_Node","Model_Open_Create_Edge","Model_Open_Update_Edge","Model_Open_Update_Node","Model_Close","ELE_UNSELECTED","ELE_SELECTED","TURN_DRAW","SET_ZOOM","SET_PROJECT_DETAILS","SET_UNDO","SET_REDO","ADD_GRAPH_INSTANCE","ADD_GRAPH","ADD_GRAPH_BULK","CHANGE_TAB","REMOVE_GRAPH","NEW_GRAPH","SET_SHARE_MODAL","SET_SETTING_MODAL","SET_FILE_REF","SET_HISTORY_MODAL","SET_AUTHOR","IS_WORKFLOW_ON_SERVER","SET_CUR_INSTANCE","SET_ZOOM_LEVEL","SET_EDIT_DETAILS_MODAL","SET_NEW_GRAPH_MODAL","EDIT_TEXTFILE","NodeDetails","data","setData","submit","labelAllowed","inputRef","useCallback","node","focus","textRef","createRef","useState","widthSet","labelName","setLabelName","labelFile","setLabelFile","useEffect","prop","width","Math","max","style","min","current","offsetWidth","label","className","onSubmit","height","borderRadius","shape","ref","padding","type","required","placeholder","onChange","e","target","value","lname","slice","list","id","localStorageManager","getFileList","JSON","parse","map","item","key","toString","colors","light","dark","ColorBox","color","setColor","React","visible","setVisible","floor","random","role","tabIndex","onClick","onKeyDown","ev","background","display","onChangeComplete","x","hex","Triangle","size","s","parseInt","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","setStyle","RadioBtn","name","htmlFor","checked","borderBottomWidth","thickness","borderBottomColor","backgroundColor","borderBottomStyle","NodeStyle","opacity","borderColor","borderWidth","EdgeStyle","initialState","ModelOpen","modalPayload","cb","title","submitText","Children","defaultStyle","defaultLabel","shareModal","settingsModal","editDetailsModal","newGraphModal","eleSelected","drawModeOn","undoEnabled","redoEnabled","graphs","curGraphIndex","viewHistory","authorName","isWorkflowOnServer","curGraphInstance","zoomLevel","initialGraphState","projectName","graphID","serverID","graphML","component","instance","reducer","state","action","T","eleSelectedPayload","payload","foundi","Date","getTime","forEach","g","i","length","filter","newState","fileRef","textFileModal","show","fileObj","GraphComponent","args","nodeValidator","edgeValidator","setEdgeNodeValidator","getTid","allNodes","this","cy","$","start","y","found","nodePos","position","getPos","tid","add","group","addAction","actionName","GA","DEL_NODE","parameters","ADD_NODE","sourceID","targetID","getById","edgesWith","edges","getEdgesBetweenNodes","dists","Set","edge","bendDistance","d","has","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","w","getBendingD","edgeData","bendData","parseBendinDW","source","DEL_EDGE","ADD_EDGE","addEdgeWithLabel","dispatcher","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","UPDATE_NODE","getStyle","UPDATE_EDGE","val","UPDATE_DATA","connectedEdges","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","setPos","indexOf","lastIndexOf","a","b","trim","eval","sourceLabel","getRealSourceId","targetLabel","comp","validator","getNodesEdges","nodes","undefined","err","validiateComp","GraphCanvas","reset","removeListener","setZoomUI","on","round","zoom","fit","v","elements","window","confirm","el","deleteElem","actionArr","element","superState","cytoscape","use","edgehandles","nodeEditing","Konva","gridGuide","cyOptions","container","bendNode","classes","regesterEvents","initizialize","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","snapToGridOnRelease","zoomDash","panGrid","preview","handlePosition","handleNodes","complete","c","addEdge","getElementById","shouldEmit","els","every","isEdge","ids","selectDeselectEventHandler","scratch","addClass","evt","hasClass","CoreGraph","getBendEdgePoint","DW","addBendChange","removeClass","resetAllComp","resetAllAction","parseFloat","getCoordinate","ALL_GRAPHS","btoa","AUTHOR_NAME","allgs","localStorage","getItem","setItem","stringify","atob","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","getAllGraphs","addToFront","Garr","unshift","getAuthorName","setAuthorName","clearGraph","dist","A","B","rotate","P","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","p","minZoom","GraphOption","maxZoom","marks","ZoomComp","myGraph","zoomValue","resetZoom","fitZoom","setZoom","included","getGraphFun","createNode","setState","validiateNode","addNode","editElement","retMessage","updateNode","getLabel","updateEdge","downloadImg","format","saveAction","fileName","saveToDisk","readFile","file","fr","FileReader","split","pop","onload","result","readAsText","newProject","clearAll","undo","redo","openShareModal","TabBar","closeTab","stopPropagation","editCur","hotkeys","event","preventDefault","document","click","querySelector","bind","data-tip","data-for","place","effect","nodeML","posX","posY","actionHistory","graphml","xmlns","for","graph","edgedefault","edgeML","lineColor","lineWidth","configuration","sx","sy","tx","ty","builder","G","edg","X","xml2js","Builder","buildObject","GraphUndoRedo","props","methodsMapped","updateData","SET_POS","SET_DIM","setDim","SET_BENDW","setBendWightDist","curActionIndex","prevPos","curPos","prevDim","curDim","prevDW","curDW","inverse","equivalent","splice","actionIdentity","sequencify","push","hash","md5","at","informUI","performAction","curTid","addPositionChange","addDimensionChange","obj","Object","r","keys","sort","k","PropFromArr","arr","flatenArr","flatArr","constructor","o","t","propFromArr","property","any","S","F","mapByDefault","def","includes","parseNode","parseProps","parseEdge","parseActionML","parser","graphMlCnt","Promise","resolve","Parser","parseString","grahMLObj","grahML","parseDetails","parseActionHistory","GraphServer","config","setServerID","Boolean","autoSaveIntervalId","saveLocalStorage","saveAs","png","full","getName","jpg","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","shouldEdgeBeSaved","edgeJson","GraphLoadSave","stringifyAction","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","content","parseAction","setProjectName","clearTimeout","setTimeout","graphMLParser","then","graphObject","loadGraphFromLocalStorage","loadJson","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","h","C","D","getY1Y2","x1","x2","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TailoredGraph","calJuncNodePos","juncNodeId","incomers","unselectify","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","tidd","juncNodes","outgoers","addEdgeWithoutJuncNode","addEdgeAction","junctionNode","n1","n2","n","union","c1","c2","values","parNode","meanNbrPosition","setOfPos","posStr","Graph","graphContainerRef","active","loaded","setInstance","useRef","setContainerDim","elToAss","offsetHeight","history","pushState","path","join","process","set","setCurStatus","addEventListener","MyGraph","forcePullFromServer","setGraphML","initialiseNewGraph","zIndex","GraphComp","loadedFromStorage","setLoadedFromStorage","loadedFromURL","setLoadedFromURL","allSavedGs","graphFromParams","fromEntries","URLSearchParams","location","search","entries","gid","replaceState","pathname","urlParms","serverIDIndex","localIDIndex","flex","flexDirection","ReactModal","setAppElement","Modal","closeModal","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","onRequestClose","overlayClassName","aria-hidden","ModalComp","errorMessage","setErrorMessage","ParentModal","toolbarList","text","icon","FaPlus","hotkey","FaFileImport","FaSave","fn","pushToServer","prompt","FaRegTimesCircle","FaUndo","FaRedo","FaEdit","FaTrash","FaHistory","FaShare","FaDownload","DropDown","Icon","menuButton","FileUploader","Switcher","ActionButton","fontSize","Vsep","Hsep","Space","ServerActions","isReadOnly","setIsReadOnly","readOnly","edit","Header","actions","replace","handler","shortcut","setHotKeys","ProjectDetails","curGraph","setProjAuthorName","authorNameE","openExisting","loadFromServer","NewWrokflow","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","serializeGraph","link","protocol","host","navigator","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","post","docString","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","app","getElementsByTagName","cc","classList","dragEvent","dataTransfer","files","accept","HistoryModal","curState","setcurState","historyList","setHistoryList","historyView","setHistoryView","res","mapActionToTrue","filterAction","setFilterAction","getLabelFromID","reverse","stringifyActionType","prefixTid","index","DT","date","toLocaleDateString","time","toLocaleTimeString","tempCurState","undoSingleAction","redoSingleAction","restoreState","fontWeight","par","listStyleType","LocalFileBrowser","fileState","setFileState","concat","modified","lastModifiedDate","directory","webkitdirectory","onSelectFile","detailRenderer","FileEditModal","codeStuff","setCodeStuff","setFileName","minHeight","onValueChange","highlight","code","languages","js","fontFamily","minWidth","border","useReducer","Settings","History","FileEdit","GraphCompDetails","overflow","GraphWorkspace","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","selector","overlayOpacity","textValign","textHalign","curveStyle","targetArrowShape","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","lineStyle","edgeTextRotation","textBackgroundOpacity","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","borderOpacity","overlayColor","overlayPadding","options","zoomingEnabled","userZoomingEnabled"],"mappings":"6NAAA,IAmCeA,EAnCAC,EAAQ,IAmCRD,CAjCI,CACfE,SAAU,GACVC,uBAAwB,uBACxBC,uBAAwB,uBACxBC,uBAAwB,uBACxBC,uBAAwB,uBACxBC,YAAa,aACbC,eAAgB,iBAChBC,aAAc,eACdC,UAAW,YACXC,SAAU,WACVC,oBAAqB,sBACrBC,SAAU,WACVC,SAAU,WACVC,mBAAoB,qBACpBC,UAAW,YACXC,eAAgB,iBAChBC,WAAY,aACZC,aAAc,eACdC,UAAW,YACXC,gBAAiB,kBACjBC,kBAAmB,oBACnBC,aAAc,eACdC,kBAAmB,oBACnBC,WAAY,aACZC,sBAAuB,wBACvBC,iBAAkB,mBAClBC,eAAgB,iBAChBC,uBAAwB,yBACxBC,oBAAqB,sBACrBC,cAAe,kB,sECsIJC,EA/JK,SAAC,GAEd,IADHC,EACE,EADFA,KAAMC,EACJ,EADIA,QAASC,EACb,EADaA,OAAQC,EACrB,EADqBA,aAEjBC,EAAWC,uBAAY,SAACC,GAAD,OAAUA,GAAQA,EAAKC,UAAS,IACvDC,EAAUC,sBAChB,EAAmBC,oBAAS,GAArBC,EAAP,oBACA,EAAkCD,mBAAS,IAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAcA,OARAC,qBAAU,WAJO,IAACC,EAKTN,IALSM,EAMD,CACLC,MAAOC,KAAKC,IAAIpB,EAAKqB,MAAMH,MAAOC,KAAKG,IAAI,IAAKd,EAAQe,QAAQC,YAAc,MANtFvB,EAAQ,2BAAKD,GAAN,IAAYqB,MAAM,2BAAMrB,EAAKqB,OAAUJ,SAS/C,EAAEN,GAAYX,EAAKyB,QAGlB,sBAAKC,UAAU,WAAWC,SAAUzB,EAApC,UACI,qBAAKwB,UAAU,aAAaL,MAAO,CAAEO,OAAQ5B,EAAKqB,MAAMO,QAAxD,SACI,qBACIF,UAAU,WACVL,MAAK,2BACErB,EAAKqB,OADP,IAEDQ,aAAmC,YAArB7B,EAAKqB,MAAMS,MAAsB,OAAS,IAJhE,SAOI,sBAAMC,IAAKvB,EAAX,SAAqBL,EAAeH,EAAKyB,MAAQ,SAIzD,sBAAKC,UAAU,OAAOL,MAAO,CAAEW,QAAS,IAAxC,UA4BK7B,EAAe,yCAAoB,GACnCA,EACG,qCACI,uBACIuB,UAAU,YACVK,IAAK3B,EACL6B,KAAK,OACLC,UAAQ,EACRT,MAAM,aACNU,YAAY,mBACZC,SAAU,SAACC,GACPxB,EAAawB,EAAEC,OAAOC,OAClBzB,GAAWb,EAAQ,2BAAKD,GAAN,IAAYyB,MAAOY,EAAEC,OAAOC,MAAQzB,QAIlE,uBACIY,UAAU,gBACVO,KAAK,OACLC,UAAQ,EACRT,MAAM,kBACNU,YAAY,cACZC,SAAU,SAACC,GAEP,GADAtB,EAAasB,EAAEC,OAAOC,OAClB3B,EAAW,CACX,IAAI4B,EAAQ5B,EACgB,MAAxBA,EAAU6B,OAAO,KACjB5B,EAAa,GAAD,OAAID,EAAJ,MACZ4B,GAAS,KAEbvC,EAAQ,2BAAKD,GAAN,IAAYyB,MAAOe,EAAQH,EAAEC,OAAOC,WAGnDG,KAAK,UAET,0BAAUC,GAAG,QAAb,SAEQC,IAAoBC,cAEdC,KAAKC,MAAMH,IAAoBC,eAAeG,KAAI,SAACC,GAAD,OAAU,wBAAQV,MAAK,UAAKU,EAAKC,IAAIC,iBACvF,QAIlB,U,SC/GdC,EAAS,CACXC,MAAO,CACH,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAEvGC,KAAM,CACF,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAoC5FC,EAhCE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAAUxB,EAAW,EAAXA,KACjC,EAA8ByB,IAAMhD,UAAS,GAA7C,mBAAOiD,EAAP,KAAgBC,EAAhB,KAIA,OAHAF,IAAM1C,WAAU,WACPwC,GAAOC,EAASL,EAAOnB,GAAMd,KAAK0C,MAAsB,GAAhB1C,KAAK2C,cACnD,IAEC,sBACIC,KAAK,SACLC,SAAU,EACVtC,UAAU,gBACVuC,QAAS,kBAAON,GAAWC,GAAW,IACtCM,UAAW,SAACC,GAAD,MAAmB,MAAXA,EAAGjB,MAAiBS,GAAWC,GAAW,IALjE,UAOI,qBAAKlC,UAAU,YAAYL,MAAO,CAAE+C,WAAYZ,GAAS,UACzD,sBACI9B,UAAU,eACVL,MAAO,CACHgD,QAASV,EAAU,QAAU,QAHrC,UAOI,qBAAKI,KAAK,SAASrC,UAAU,UAAUuC,QAAS,kBAAML,GAAW,MACjE,cAAC,IAAD,CACIR,OAAQA,EAAOnB,GACfuB,MAAOA,GAAS,OAChBc,iBAAkB,SAACC,GAAD,OAAOd,EAASc,EAAEC,eCjClDC,G,OAAW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMlB,EAAY,EAAZA,MAChBmB,EAAyB,EAArBC,SAASF,EAAM,IACnBG,EAAa,CACfC,WAAW,GAAD,OAAK,MAASH,EAAd,oBAA2BnB,GACrCuB,aAAa,GAAD,OAAKJ,EAAI,EAAT,wBACZK,UAAU,GAAD,OAAKL,EAAI,EAAT,wBACTM,YAAa,GAEjB,OACI,qBAAK5D,MAAOwD,MAyELK,EArEK,SAAC,GAEd,IADHlF,EACE,EADFA,KAAMC,EACJ,EADIA,QAASC,EACb,EADaA,OAAQC,EACrB,EADqBA,aAEjBgF,EAAW,SAAClE,GAAD,OAAUhB,EAAQ,2BAAKD,GAAN,IAAYqB,MAAM,2BAAMrB,EAAKqB,OAAUJ,OACnEb,EAAWC,uBAAY,SAACC,GAAD,OAAUA,GAAQA,EAAKC,UAAS,IACvD6E,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMvD,EAAT,EAASA,MAAT,OACb,wBAAOwD,QAAQ,UAAf,UACI,uBACIrD,KAAK,QACLoD,KAAK,QACL9C,MAAOT,EACPyD,QAASvF,EAAKqB,MAAMS,QAAUA,EAC9BM,SAAU,kBAAM+C,EAAS,CAAErD,aAE9BuD,MAIT,OACI,sBAAK3D,UAAU,WAAWC,SAAUzB,EAApC,UACI,sBAAKwB,UAAU,UAAf,UACI,qBACIA,UAAU,WACVL,MAAO,CACHmE,kBAAmBxF,EAAKqB,MAAMoE,UAC9BC,kBAAmB1F,EAAKqB,MAAMsE,gBAC9BC,kBAAmB5F,EAAKqB,MAAMS,SAGtC,cAAC,EAAD,CAAU4C,KAAM1E,EAAKqB,MAAMoE,UAAWjC,MAAOxD,EAAKqB,MAAMsE,kBACxD,qBAAKjE,UAAU,QAAf,SAAwB1B,EAAKyB,WAEjC,sBAAKC,UAAU,OAAf,UACKvB,EAAe,yCAAoB,GACnCA,EACG,uBACI4B,IAAK3B,EACLsB,UAAU,sBACVO,KAAK,OACLC,UAAQ,EACRT,MAAM,aACNc,MAAOvC,EAAKyB,MACZU,YAAY,mBACZC,SAAU,SAACC,GAAD,OAAOpC,EAAQ,2BAAKD,GAAN,IAAYyB,MAAM,GAAD,OAAKY,EAAEC,OAAOC,aAE3D,GACJ,yCACA,sBAAKb,UAAU,wBAAf,UACI,8BAAK,cAAC0D,EAAD,CAAUC,KAAK,QAAQvD,MAAM,YAClC,8BAAK,cAACsD,EAAD,CAAUC,KAAK,SAASvD,MAAM,aACnC,8BAAK,cAACsD,EAAD,CAAUC,KAAK,SAASvD,MAAM,gBAEvC,6CACA,uBACIG,KAAK,SACLM,MAAOvC,EAAKqB,MAAMoE,UAClBrD,SAAU,SAACC,GAAD,OAAO8C,EAAS,CAAEM,UAAWtE,KAAKC,IAAI,EAAGD,KAAKG,IAAI,GAAIe,EAAEC,OAAOC,aAE7E,oDACA,cAAC,EAAD,CACIiB,MAAOxD,EAAKqB,MAAMsE,gBAClBlC,SAAU,SAACD,GAAD,OAAW2B,EAAS,CAAEQ,gBAAiBnC,KACjDvB,KAAK,gBC/EnB4D,EAAY,CACd3E,MAAO,IACPU,OAAQ,GACRE,MAAO,YACPgE,QAAS,EACTH,gBAAiB,UACjBI,YAAa,OACbC,YAAa,GAGXC,EAAY,CACdR,UAAW,EACXE,gBAAiB,KACjB7D,MAAO,SCbLoE,EAAe,CACjBC,WAAW,EACXC,aAAc,CACVC,GAAI,aACJC,MAAO,GACPC,WAAY,GACZC,SAAU,GACVC,aAAc,GACdC,aAAc,GACdvG,aAAc,MAElBwG,YAAY,EACZC,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EAEfC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,aAAa,EACbC,OAAQ,GACRC,cAAe,EACfC,aAAa,EACbC,WAAY,GACZC,oBAAoB,EACpBC,iBAAkB,KAClBC,UAAW,KAGTC,EAAoB,CACtBC,YAAa,GACbC,QAAS,KACTC,SAAU,KACVC,QAAS,KAETC,UAAW,KACXC,SAAU,KACVrF,GAAI,MCmIOsF,EAlKC,SAACC,EAAOC,GACpB,OAAQA,EAAOlG,MACf,KAAKmG,EAAElK,uBACH,OAAO,2BACAgK,GADP,IAEI/B,WAAW,EACXC,aAAc,CACVE,MAAO,cACPC,WAAY,cACZC,SAAUzG,EACV0G,aAAcZ,EACda,aAAc,GACdvG,cAAc,EACdkG,GAAI8B,EAAO9B,MAGvB,KAAK+B,EAAEjK,uBACH,OAAO,2BACA+J,GADP,IAEI/B,WAAW,EACXC,aAAc,CACVE,MAAO,cACPC,WAAY,cACZC,SAAUtB,EACVuB,aAAcR,EACdS,aAAc,GACdvG,cAAc,EACdkG,GAAI8B,EAAO9B,MAGvB,KAAK+B,EAAE/J,uBACH,OAAO,2BACA6J,GADP,IAEI/B,WAAW,EACXC,aAAc,CACVE,MAAO,YACPC,WAAY,YACZC,SAAUzG,EACV0G,aAAc0B,EAAO9G,MACrBqF,aAAcyB,EAAO1G,MACrBtB,aAAcgI,EAAOhI,aACrBkG,GAAI8B,EAAO9B,MAIvB,KAAK+B,EAAEhK,uBACH,OAAO,2BACA8J,GADP,IAEI/B,WAAW,EACXC,aAAc,CACVE,MAAO,YACPC,WAAY,YACZC,SAAUtB,EACVuB,aAAc0B,EAAO9G,MACrBqF,aAAcyB,EAAO1G,MACrBtB,aAAcgI,EAAOhI,aACrBkG,GAAI8B,EAAO9B,MAIvB,KAAK+B,EAAE9J,YAAa,OAAO,2BAAK4J,GAAZ,IAAmB/B,WAAW,IAClD,KAAKiC,EAAE5J,aAAc,OAAO,2BAAK0J,GAAZ,IAAmBnB,aAAa,EAAMsB,mBAAoBF,EAAOG,UACtF,KAAKF,EAAE7J,eAAgB,OAAO,2BAAK2J,GAAZ,IAAmBnB,aAAa,IACvD,KAAKqB,EAAE3J,UAAW,OAAO,2BAAKyJ,GAAZ,IAAmBlB,WAAYmB,EAAOG,UAExD,KAAKF,EAAExJ,SAAU,OAAO,2BAAKsJ,GAAZ,IAAmBjB,YAAakB,EAAOG,UACxD,KAAKF,EAAEvJ,SAAU,OAAO,2BAAKqJ,GAAZ,IAAmBhB,YAAaiB,EAAOG,UAExD,KAAKF,EAAErJ,UACH,IAAIwJ,GAAU,EACRX,EAAUO,EAAOG,QAAQV,UAAW,IAAIY,MAAOC,UAAUtF,WAM/D,OALA+E,EAAMf,OAAOuB,SAAQ,SAACC,EAAGC,IAChBD,EAAEf,SAAWe,EAAEf,UAAYA,GAAae,EAAEd,UAAYc,EAAEd,WAAaM,EAAOG,QAAQT,YACrFU,EAASK,OAGD,IAAZL,EACO,2BAAKL,GAAZ,IAAmBpB,eAAe,EAAOM,cAAemB,IAErD,2BACAL,GADP,IAEIpB,eAAe,EACfM,cAAec,EAAMf,OAAO0B,OAC5B1B,OAAO,GAAD,mBACCe,EAAMf,QADP,4BAGKO,GAHL,IAIEC,YAAaQ,EAAOG,QAAQX,YAC5BC,UACAC,SAAUM,EAAOG,QAAQT,SACzBC,QAASK,EAAOG,QAAQR,cAKxC,KAAKM,EAAEpJ,eACH,OAAO,2BAAKkJ,GAAZ,IAAmBf,OAAO,GAAD,mBAAMe,EAAMf,QAAZ,YAAuBgB,EAAOG,YAE3D,KAAKF,EAAE1I,iBACH,OAAO,2BAAKwI,GAAZ,IAAmBV,iBAAkBW,EAAOG,UAEhD,KAAKF,EAAEnJ,WAAY,OAAO,2BAAKiJ,GAAZ,IAAmBd,cAAee,EAAOG,UAE5D,KAAKF,EAAEjJ,UAAW,OAAO,2BAAK+I,GAAZ,IAAmBpB,eAAe,IACpD,KAAKsB,EAAElJ,aAAc,OAAO,2BACrBgJ,GADc,IAEjBf,OAAQe,EAAMf,OAAO2B,QAAO,SAACzG,EAAGuG,GAAJ,OAAUA,IAAMT,EAAOG,WACnDlB,cAAec,EAAMd,cAAgBe,EAAOG,QACtCJ,EAAMd,cACNjG,KAAKC,IAAI,EAAG8G,EAAMd,cAAgB,KAG5C,KAAKgB,EAAEzJ,oBACH,IAAMoK,EAAQ,eAAQb,GAKtB,OAJAa,EAAS5B,OAAS4B,EAAS5B,OAAOnE,KAAI,SAAC2F,GAAD,OAClCA,EAAEf,UAAYO,EAAOG,QAAQV,QAA7B,2BAA4Ce,GAA5C,kBAAgDR,EAAOG,QAAQrG,KAAOkG,EAAOG,QAAQ/F,QAC/EoG,KAEH,eAAKI,GAGhB,KAAKX,EAAEhJ,gBACH,OAAO,2BAAK8I,GAAZ,IAAmBvB,WAAYwB,EAAOG,UAG1C,KAAKF,EAAE/I,kBACH,OAAO,2BAAK6I,GAAZ,IAAmBtB,cAAeuB,EAAOG,UAG7C,KAAKF,EAAE9I,aACH,OAAO,2BAAK4I,GAAZ,IAAmBc,QAASb,EAAOG,UAGvC,KAAKF,EAAE7I,kBACH,OAAO,2BAAK2I,GAAZ,IAAmBb,YAAac,EAAOG,UAG3C,KAAKF,EAAE5I,WACH,OAAO,2BAAK0I,GAAZ,IAAmBZ,WAAYa,EAAOG,UAG1C,KAAKF,EAAE3I,sBACH,OAAO,2BAAKyI,GAAZ,IAAmBX,mBAAoBY,EAAOG,UAElD,KAAKF,EAAEzI,eACH,OAAO,2BAAKuI,GAAZ,IAAmBT,UAAWU,EAAOG,UAEzC,KAAKF,EAAExI,uBACH,OAAO,2BAAKsI,GAAZ,IAAmBrB,iBAAkBsB,EAAOG,UAEhD,KAAKF,EAAEvI,oBACH,OAAO,2BAAKqI,GAAZ,IAAmBpB,cAAeqB,EAAOG,UAG7C,KAAKF,EAAEtI,cACH,OAAO,2BAAKoI,GAAZ,IAAmBe,cAAed,EAAOG,QAAQY,KAAMC,QAAShB,EAAOG,QAAQa,UAGnF,QACI,OAAOjB,K,s+CChKTkB,e,waAWF,0BAAsB,IAAD,mOAANC,EAAM,yBAANA,EAAM,gBACjB,yCAASA,IACT,IAAaC,EAAgCD,EAA7C,GAA4BE,EAAiBF,EAA7C,GAFiB,OAGjB,EAAKG,qBAAqB,CAAEF,gBAAeC,kBAC3C,EAAKE,OAAS,kBAAM,IAAIjB,MAAOC,WAJd,E,yNAOrB,WAII,IAHA,IAAMiB,EAAWC,KAAKC,GAAGC,EAAE,QACrBC,EAAQ,CAAEvF,EAAG,IAAKwF,EAAG,KACvBC,GAAQ,EACLA,GAAO,CACVA,GAAQ,EACR,IAAK,IAAIpB,EAAI,EAAGA,EAAIc,EAASb,OAAQD,GAAK,EAAG,CACzC,IAAMqB,EAAUP,EAASd,GAAGsB,WAC5BF,EAAQA,GAAUC,EAAQ1F,IAAMuF,EAAMvF,GAAK0F,EAAQF,IAAMD,EAAMC,EAE/DC,IACAF,EAAMvF,GAAK,GACXuF,EAAMC,GAAK,IAGnB,OAAOD,I,qBAGX,SAAQrI,EAAOJ,GAC0B,IADnBY,EACkB,uDADX,QAASiI,EACE,uDADSP,KAAKQ,SAClDnK,EAAoC,uDAA7B,GAAI2C,EAAyB,uCAArByH,EAAqB,uDAAfT,KAAKF,SACpBnJ,EAAOqJ,KAAKC,GAAGS,IAAI,CACrBC,MAAO,QACPtK,KAAK,mWACEA,GADH,IACS2C,KAAIlB,QAAOQ,OAAMZ,UAE9B6I,aAUJ,OARAP,KAAKY,UACD,CAAEC,WAAYC,8CAAGC,SAAUC,WAAY,CAACrK,EAAKqC,OAC7C,CACI6H,WAAYC,8CAAGG,SACfD,WAAY,CAAClJ,EAAOJ,EAAOY,EAAMiI,EAAUlK,EAAMM,EAAKqC,OAE1DyH,GAEG9J,I,kCAGX,SAAqBuK,EAAUC,GAC3B,OAAOnB,KAAKoB,QAAQF,GAAUG,UAAUrB,KAAKoB,QAAQD,M,yBAGzD,SAAYD,EAAUC,GAClB,IAAMG,EAAQtB,KAAKuB,qBAAqBL,EAAUC,GAC5CK,EAAQ,IAAIC,IAClBH,EAAMvC,SAAQ,SAAC2C,GACPP,IAAaO,EAAK/I,SAASK,KAAMwI,EAAMd,IAAIgB,EAAKrL,KAAK,YAAYsL,cAChEH,EAAMd,KAAKgB,EAAKrL,KAAK,YAAYsL,iBAE1C,IAAK,IAAIC,EAAI,GAAIA,GAAK,GAAI,CACtB,IAAKJ,EAAMK,IAAID,GAAI,OAAOA,EAC1B,IAAKJ,EAAMK,KAAKD,GAAI,OAAQA,K,2BAIpC,YAEI,IADAV,EACD,EADCA,SAAUC,EACX,EADWA,SAAU7I,EACrB,EADqBA,KAAMwJ,EAC3B,EAD2BA,WAAYH,EACvC,EADuCA,aAAcI,EACrD,EADqDA,UAEpD,GAAa,UAATzJ,EAAkB,MAAO,CAAEqJ,aAAc,EAAGG,WAAY,GAC5D,GAAIH,GAAgBG,EAAY,MAAO,CAAEH,eAAcG,cACvD,GAAIC,EAAW,CACX,IAAQnH,EAASmH,EAATnH,EAAGwF,EAAM2B,EAAN3B,EACX,EAAiB4B,iEAAsBC,kBACnC,CAAErH,IAAGwF,KAAKJ,KAAKoB,QAAQF,GAAUX,WAAYP,KAAKoB,QAAQD,GAAUZ,YAExE,MAAO,CAAEoB,aAHT,EAAQC,EAGkBE,WAH1B,EAAWI,GAKf,MAAO,CAAEP,aAAc3B,KAAKmC,YAAYjB,EAAUC,GAAWW,WAAY,M,8BAG7E,SAAiBM,GAAgC,IAAtB3B,EAAqB,uDAAfT,KAAKF,SAClC,EAA2BsC,EAAnB9J,YAAR,MAAe,QAAf,EACM+J,EAAWrC,KAAKsC,cAAL,mWAAwBF,GAAaA,EAASC,WACzDX,EAAO1B,KAAKC,GAAGS,IAAI,CACrBC,MAAO,QACPtK,KAAK,mWACE+L,GADH,IACaG,OAAQH,EAASlB,SAAUvI,OAAQyJ,EAASjB,SAAU7I,OAAM+J,eASjF,OANArC,KAAKY,UACD,CAAEC,WAAYC,8CAAG0B,SAAUxB,WAAY,CAACU,EAAK1I,OAC7C,CAAE6H,WAAYC,8CAAG2B,SAAUzB,WAAY,CAAC,mWAAKoB,GAAN,IAAgBpJ,GAAI0I,EAAK1I,SAChEyH,GAGGiB,I,qBAGX,SAAQU,GAAgC,IAAD,OAArB3B,EAAqB,uDAAfT,KAAKF,SACzB,GAAKsC,EAAS9J,MAA0B,UAAlB8J,EAAS9J,MAAqB8J,EAAStK,MACzD,OAAOkI,KAAK0C,iBAAL,mWAA2BN,GAA3B,IAAqC9J,KAAM8J,EAAS9J,MAAQ,UAAWmI,GAElFT,KAAK2C,WAAW,CACZrK,KAAMmG,wCAAEjK,uBACRkI,GAAI,SAACkG,EAAWC,GACZ,IAAMC,EAAU,EAAKC,cAAcH,EAAWC,EAC1CT,EAASjB,SAAUiB,EAASjB,SAAU,KAAM,OAEhD,OADI2B,EAAQE,IAAI,EAAKN,iBAAL,mWAA2BN,GAA3B,IAAqC9J,KAAM8J,EAAS9J,MAAQ,UAAWmI,GAChFqC,O,sBAMnB,SAAS9J,GACL,OAAOgH,KAAKoB,QAAQpI,GAAI3C,KAAK,W,sBAGjC,SAAS2C,GACL,OAAOgH,KAAKoB,QAAQpI,GAAI3C,KAAK,UAAY2J,KAAKoB,QAAQpI,GAAI3C,KAAK,W,wBAGnE,SAAW2C,EAAItB,EAAOI,EAAOmL,GAAyC,IAAtBxC,EAAqB,uDAAfT,KAAKF,SACvDE,KAAKY,UACD,CACIC,WAAYC,8CAAGoC,YACflC,WAAY,CAAChI,EAAIgH,KAAKmD,SAASnK,GAAKgH,KAAKoB,QAAQpI,GAAI3C,KAAK,SAAU4M,IAExE,CAAEpC,WAAYC,8CAAGoC,YAAalC,WAAY,CAAChI,EAAItB,EAAOI,EAAOmL,IAC7DxC,GAEAwC,GAAmBjD,KAAKoB,QAAQpI,GAAI3C,KAAK,QAASyB,GACtDkI,KAAKoB,QAAQpI,GAAI3C,KAAK,QAASqB,K,wBAGnC,SAAWsB,EAAItB,EAAOI,EAAOmL,GAAyC,IAAtBxC,EAAqB,uDAAfT,KAAKF,SACvDE,KAAKY,UACD,CACIC,WAAYC,8CAAGsC,YACfpC,WAAY,CAAChI,EAAIgH,KAAKmD,SAASnK,GAAKgH,KAAKoB,QAAQpI,GAAI3C,KAAK,SAAU4M,IAExE,CAAEpC,WAAYC,8CAAGsC,YAAapC,WAAY,CAAChI,EAAItB,EAAOI,EAAOmL,IAC7DxC,GAEAwC,GAAmBjD,KAAKoB,QAAQpI,GAAI3C,KAAK,QAASyB,GACtDkI,KAAKoB,QAAQpI,GAAI3C,KAAK,QAASqB,K,wBAGnC,SAAWsB,EAAIO,EAAK8J,GAA2B,IAAtB5C,EAAqB,uDAAfT,KAAKF,SAMhC,OALAE,KAAKY,UACD,CAAEC,WAAYC,8CAAGwC,YAAatC,WAAY,CAAChI,EAAIO,EAAKyG,KAAKoB,QAAQpI,GAAI3C,KAAKkD,KAC1E,CAAEsH,WAAYC,8CAAGwC,YAAatC,WAAY,CAAChI,EAAIO,EAAK8J,IAAQ5C,GAEhET,KAAKoB,QAAQpI,GAAI3C,KAAKkD,EAAK8J,GACpBrD,O,wBAGX,SAAWhH,GAA0B,IAAD,OAArByH,EAAqB,uDAAfT,KAAKF,SAChBnJ,EAAOqJ,KAAKoB,QAAQpI,GAC1BrC,EAAK4M,eAAe,kBAAkBxE,SAAQ,SAAC2C,GAAD,OAAU,EAAK8B,WAAW9B,EAAK1I,KAAMyH,MACnF9J,EAAK4M,iBAAiBxE,SAAQ,SAAC2C,GAAD,OAAU,EAAK8B,WAAW9B,EAAK1I,KAAMyH,MACnET,KAAKY,UACD,CACIC,WAAYC,8CAAGG,SACfD,WAAY,CACRrK,EAAKN,KAAK,SAAU2J,KAAKmD,SAASxM,EAAKqC,MAAOrC,EAAKN,KAAK,QACxDM,EAAK4J,WAAY5J,EAAK8M,OAAOpN,KAAM2C,IAG3C,CAAE6H,WAAYC,8CAAGC,SAAUC,WAAY,CAAChI,IAAOyH,GAEnD9J,EAAK+M,W,wBAGT,SAAW1K,GAA0B,IAAtByH,EAAqB,uDAAfT,KAAKF,SACtB,GAAgC,IAA5BE,KAAKoB,QAAQpI,GAAIkG,SAAgBc,KAAKoB,QAAQpI,GAAI2K,UAAtD,CACA,IAAMC,EAAS5D,KAAKoB,QAAQpI,GAAIyK,OAChCzD,KAAKY,UACD,CACIC,WAAYC,8CAAG2B,SACfzB,WAAY,CAAC,mWACN4C,EAAOvN,MADF,IACQ6K,SAAU0C,EAAOvN,KAAKkM,OAAQpB,SAAUyC,EAAOvN,KAAKsC,WAG5E,CAAEkI,WAAYC,8CAAG0B,SAAUxB,WAAY,CAAChI,IAAOyH,GAEnDT,KAAKoB,QAAQpI,GAAI0K,Y,wBAGrB,SAAW1K,GAA0B,IAAtByH,EAAqB,uDAAfT,KAAKF,SACtB,OAAIE,KAAKoB,QAAQpI,GAAI6K,SAAiB7D,KAAK8D,WAAW9K,EAAIyH,GACnDT,KAAKwD,WAAWxK,EAAIyH,K,oBAG/B,SAAOzH,EAAI+K,GACP/D,KAAKoB,QAAQpI,GAAIuH,SAASwD,GAC1B/D,KAAKoB,QAAQpI,GAAIgL,KAAK,W,oBAG1B,SAAOhL,EAAIiL,EAAKF,GACZ,IAAMrM,EAAQsI,KAAKoB,QAAQpI,GAAI3C,KAAK,SACpC2J,KAAKoB,QAAQpI,GAAI3C,KAAK,QAAtB,mWAAoCqB,GAApC,IAA2CO,OAAQgM,EAAIhM,OAAQV,MAAO0M,EAAI1M,SAC1EyI,KAAKkE,OAAOlL,EAAI+K,K,8BAGpB,WACI,MAAe,CAAC/D,KAAKL,cAAcnG,WAAW2K,QAAQ,KAAMnE,KAAKL,cAAcnG,WAAW4K,YAAY,MAA/FC,EAAP,KAAUC,EAAV,KACA,OAAOtE,KAAKL,cAAcnG,WAAWV,MAAMuL,EAAI,EAAGC,GAAGC,S,8BAGzD,WACI,MAAe,CAACvE,KAAKJ,cAAcpG,WAAW2K,QAAQ,KAAMnE,KAAKJ,cAAcpG,WAAW4K,YAAY,MAA/FC,EAAP,KAAUC,EAAV,KACA,OAAOtE,KAAKJ,cAAcpG,WAAWV,MAAMuL,EAAI,EAAGC,GAAGC,S,kCAGzD,SAAA1E,qBAAA,OAAwD,IAAjCF,cAAgC,MAAhCA,cAAeC,cAAiB,MAAjBA,cAElCI,KAAKL,cAAgB6E,KAAK7E,eAE1BK,KAAKJ,cAAgB4E,KAAK5E,iB,2BAG9B,WAAiB,IAAD,OAaZ,MAAO,CAZOI,KAAKC,GAAGC,EAAE,sBAAsB7G,KAAI,SAAC1C,GAAD,MAAW,CACzDmB,MAAOnB,EAAKN,KAAK,SACjBqB,MAAOf,EAAKN,KAAK,SACjB2C,GAAIrC,EAAKN,KAAK,UAEJ2J,KAAKC,GAAGC,EAAE,sBAAsB7G,KAAI,SAACqI,GAAD,MAAW,CACzD5J,MAAO4J,EAAKrL,KAAK,SACjBoO,YAAa,EAAKrD,QAAQ,EAAKsD,gBAAgBhD,EAAKa,SAASvJ,OAAO3C,KAAK,SACzEsO,YAAajD,EAAK/I,SAAStC,KAAK,SAChCqB,MAAOgK,EAAKrL,KAAK,SACjB2C,GAAI0I,EAAKrL,KAAK,a,2BAKtB,SAAcuO,EAAMC,EAAWvM,GAC3B,MAAuB0H,KAAK8E,gBAA5B,uLAAOC,EAAP,KAAczD,EAAd,KACA,IACI,IAAMwB,EAAU+B,EAAUD,EAAMG,EAAOzD,EAAOhJ,GAC9C,OAAIwK,QAA0BkC,IAAflC,EAAQE,SAAoCgC,IAAhBlC,EAAQmC,IAA0BnC,EACtE,CAAEE,IAAI,EAAOiC,IAAK,qDAC3B,MAAOvM,GACL,MAAO,CAAEsK,IAAI,EAAOiC,IAAI,8BAAD,OAAgCvM,EAAEoK,a,2BAIjE,SAAchL,EAAOJ,EAAOsB,EAAIV,GAC5B,GAAIU,EAAI,CACJ,IAAMrC,EAAOqJ,KAAKoB,QAAQpI,GAC1B,OAAOgH,KAAKkF,cAAc,CACtBpN,MAAOA,GAASnB,EAAKN,KAAK,SAC1BqB,MAAOA,GAASf,EAAKN,KAAK,SAC1B2C,MACDgH,KAAKL,cAAerH,GAE3B,OAAO0H,KAAKkF,cAAc,CAAEpN,QAAOJ,QAAOsB,MAAMgH,KAAKL,cAAerH,K,2BAGxE,SAAcR,EAAOJ,EAAOwJ,EAAUC,EAAUnI,EAAIV,GAChD,GAAIU,EAAI,CACJ,IAAM0I,EAAO1B,KAAKoB,QAAQpI,GAC1B,OAAOgH,KAAKkF,cAAc,CACtBpN,MAAOA,GAAS4J,EAAKrL,KAAK,SAC1BqB,MAAOA,GAASgK,EAAKrL,KAAK,SAC1BoO,YAAazE,KAAKoB,QAAQpB,KAAK0E,gBAAgBhD,EAAKa,SAASvJ,OAAO3C,KAAK,SACzEsO,YAAajD,EAAK/I,SAAStC,KAAK,SAChC2C,MACDgH,KAAKJ,cAAetH,GAE3B,OAAO0H,KAAKkF,cAAc,CACtBpN,QACAJ,QACA+M,YAAazE,KAAKoB,QAAQpB,KAAK0E,gBAAgBxD,IAAW7K,KAAK,SAC/DsO,YAAa3E,KAAKoB,QAAQD,GAAU9K,KAAK,SACzC2C,MACDgH,KAAKJ,cAAetH,O,gBA9RF6M,0CAkSd1F,sC,+NCnST0F,E,+JAGF,WACInF,KAAKC,GAAGmF,U,uBAGZ,SAAU1I,GACNsD,KAAKC,GAAGoF,eAAe,QACvBrF,KAAKsF,UAAY5I,EACjBsD,KAAKC,GAAGsF,GAAG,QAAQ,SAAC7M,GAAD,OAAOgE,EAAGlF,KAAKgO,MAAM,IAAM9M,EAAEC,OAAO8M,c,qBAG3D,WACIzF,KAAKC,GAAGyF,Q,qBAGZ,SAAQC,GACJ3F,KAAKC,GAAGwF,KAAKE,EAAI,O,qBAGrB,WACI,OAAOnO,KAAKgO,MAAuB,IAAjBxF,KAAKC,GAAGwF,U,sBAG9B,WAAY,IAAD,OACP,OAAkC,IAA9BzF,KAAKC,GAAG2F,WAAW1G,UAElB2G,OAAOC,QAAQ,oCACpB9F,KAAKC,GAAG2F,WAAW7G,SAAQ,SAACgH,GAAD,OAAQ,EAAKC,WAAWD,EAAG/M,KAAM,MAC5DgH,KAAKiG,UAAY,GACjBjG,KAAKC,GAAG+D,KAAK,mBACN,K,0BAGX,WACIhE,KAAKC,GAAG2F,WAAWlC,W,0BAGvB,WACI,qEACA1D,KAAK2C,WAAW,CAAErK,KAAMmG,IAAEzI,eAAgB2I,QAASnH,KAAKgO,MAAuB,IAAjBxF,KAAKC,GAAGwF,c,cCtB1E,WAAYzM,EAAIkN,EAASvD,EAAYwD,EAAYnI,GAAc,oBACvD2E,IAAY3C,KAAK2C,WAAaA,GAC9BwD,IAAYnG,KAAKmG,WAAaA,GACc,oBAArCC,IAAU,OAAQ,gBACzBA,IAAUC,IAAIC,KAE8B,oBAArCF,IAAU,OAAQ,gBACzBG,IAAYH,IAAWlG,IAAGsG,KAEgB,oBAAnCJ,IAAU,OAAQ,cACzBK,IAAUL,KAGdpG,KAAKC,GAAKmG,IAAU,2BAAKM,KAAN,IAAiBC,UAAWT,KAC/ClG,KAAKhH,GAAKA,EACVgH,KAAKhC,YAAcA,EACnBgC,KAAKC,GAAG+D,KAAK,kBACbhE,KAAK4G,SAAW5G,KAAKC,GAAGS,IACpB,CAAEC,MAAO,QAAStK,KAAM,CAAEiC,KAAM,QAAUuO,QAAS,CAAC,YAExD7G,KAAK8G,iBACL9G,KAAKC,GAAG+D,KAAK,kBACbhE,KAAK+G,e,gDAGT,WAAgB,IAAD,OACX/G,KAAKC,GAAGsG,YAAY,CAChBS,0BAA2B,kBAAM,GACjCC,SAFgB,SAEPtQ,EAAMY,GACXZ,EAAKN,KAAK,QAAV,2BAAwBM,EAAKN,KAAK,UAAlC,IAA4CkB,YAEhD2P,UALgB,SAKNvQ,EAAMsB,GACZtB,EAAKN,KAAK,QAAV,2BAAwBM,EAAKN,KAAK,UAAlC,IAA4C4B,aAEhDkP,eARgB,SAQDxQ,GAAQ,MAA6B,UAAtBA,EAAKN,KAAK,SACxC+Q,iBATgB,SASCzQ,GAAQ,MAA6B,UAAtBA,EAAKN,KAAK,WAG9C2J,KAAKC,GAAGwG,UAAU,CACdY,qBAAqB,EACrBC,UAAU,EACVC,SAAS,IAEbvH,KAAKC,GAAGqG,YAAY,CAChBkB,SAAS,EACTC,eAFgB,WAGZ,MAAO,QAEXC,YAAa,8CACbC,SAAU,SAACtD,EAAGC,EAAGsD,GAAQA,EAAElE,SAAU,EAAKmE,QAAQ,CAAE3G,SAAUmD,EAAErL,KAAMmI,SAAUmD,EAAEtL,Y,qBAI1F,SAAQ4B,GACJ,OAAOoF,KAAKC,GAAG6H,eAAelN,K,4BAGlC,SAAeA,GACX,OAAOoF,KAAKoB,QAAQxG,GAAGvE,KAAK,UAAY,mB,iBAG5C,YAEI,IADA4J,EACD,EADCA,GAAI0C,EACL,EADKA,WAAYwD,EACjB,EADiBA,WAAYnI,EAC7B,EAD6BA,YAExB2E,IAAY3C,KAAK2C,WAAaA,GAC9BwD,IAAYnG,KAAKmG,WAAaA,GAC9BlG,IAAID,KAAKC,GAAKA,GACdjC,IAAagC,KAAKhC,YAAcA,K,4BAGxC,SAAeA,GAAiC,IAApB+J,IAAmB,yDAC3C/H,KAAKhC,YAAcA,EACf+J,GACA/H,KAAK2C,WAAW,CACZrK,KAAMmG,IAAEzJ,oBACR2J,QAAS,CACL/F,MAAOoF,EACPC,QAAS+B,KAAKhH,GACdV,KAAM,iBAIlB0H,KAAKC,GAAG+D,KAAK,oB,yBAGjB,SAAY9F,GAA8B,IAApB6J,IAAmB,yDACrC/H,KAAK9B,SAAWA,EACZ6J,GACA/H,KAAK2C,WAAW,CACZrK,KAAMmG,IAAEzJ,oBACR2J,QAAS,CACL/F,MAAOsF,EACPD,QAAS+B,KAAKhH,GACdV,KAAM,cAIlB0H,KAAKC,GAAG+D,KAAK,oB,wCAGjB,WACI,IAEI1L,EAFE0P,EAAMhI,KAAKC,GAAGC,EAAE,aACtB,GAAmB,IAAf8H,EAAI9I,OAAgB,OAAOc,KAAK2C,WAAW,CAAErK,KAAMmG,IAAE7J,iBAEvB0D,EAA9B0P,EAAIC,OAAM,SAACvP,GAAD,OAAOA,EAAEmL,YAAkB,OAChCmE,EAAIC,OAAM,SAACvP,GAAD,OAAOA,EAAEwP,YAAkB,OAClC,MACZ,IAAMC,EAAMH,EAAI3O,KAAI,SAACX,GAAD,OAAOA,EAAErC,KAAK,SAClC,OAAO2J,KAAK2C,WAAW,CACnBrK,KAAMmG,IAAE5J,aACR8J,QAAS,CACLwJ,MAAK7P,Y,4BAKjB,WAAkB,IAAD,OACb0H,KAAKC,GAAGsF,GAAG,mBAAmB,kBAAM,EAAK6C,gCACzCpI,KAAKC,GAAGsF,GAAG,OAAQ,wBAAwB,SAAC7M,GACxCA,EAAEC,OAAOoG,SAAQ,SAACpI,GACdA,EAAK0R,QAAQ,WAAb,eAA8B1R,EAAK4J,mBAI3CP,KAAKC,GAAGsF,GAAG,2BAA2B,SAAC7M,EAAGJ,EAAM3B,GAC5CA,EAAK0R,QAAQ,SAAU1R,EAAKN,KAAK,SAAS4B,QAC1CtB,EAAK0R,QAAQ,QAAS1R,EAAKN,KAAK,SAASkB,OACzCZ,EAAK0R,QAAQ,WAAb,eAA8B1R,EAAK4J,gBAGvCP,KAAKC,GAAGsF,GAAG,oBAAoB,WAC3B,EAAKqB,SAASvB,eAAe,sBAAuB,EAAKuB,SAAS0B,SAAS,aAG/EtI,KAAKC,GAAGsF,GAAG,UAAU,SAACgD,GAAD,MAAyC,SAA/BA,EAAI5P,OAAO,GAAGtC,KAAK,QAAqB,EAAK4J,GAAG+D,KAAK,aAAe,KACnGhE,KAAKC,GAAGsF,GAAG,UAAU,SAACgD,GAAD,MAAyC,SAA/BA,EAAI5P,OAAO,GAAGtC,KAAK,QAAqB,EAAK4J,GAAG+D,KAAK,aAAe,KAEnGhE,KAAKC,GAAGsF,GAAG,aAAa,SAAC/K,GACjBA,EAAG7B,SAAW,EAAKsH,KACnB,EAAKA,GAAG+D,KAAK,aACb,EAAK/D,GAAGC,EAAE,cAAcwD,aAGhC1D,KAAKC,GAAGsF,GAAG,6BAA6B,WACpC,IAAMQ,EAAK,EAAK9F,GAAGC,EAAE,aAErB,OADkB,IAAd6F,EAAG7G,QAAiB6G,EAAG,GAAGmC,UAAU,EAAKjI,GAAG+D,KAAK,aAC9C+B,EAAG/B,KAAK,gBAEnBhE,KAAKC,GAAGsF,GAAG,YAAa,QAAQ,SAAC/K,GAC7BA,EAAG7B,OAAOqL,KAAK,gBAGnBhE,KAAKC,GAAGsF,GAAG,YAAa,QAAQ,SAAC/K,GACxB,EAAKoM,SAAS4B,SAAS,WAAW,EAAKvI,GAAG+D,KAAK,aACpD,IAAM+B,EAAKvL,EAAG7B,OACd,EAAKiO,SAASrG,SAASkI,EAAUC,iBAAiB3C,IAClD,EAAKa,SAASrB,GAAG,QAAQ,WACrB,IAAMoD,EAAK3G,IAAsBC,kBAC7B,EAAK2E,SAASrG,WAAYwF,EAAGxD,SAAShC,WAAYwF,EAAGpN,SAAS4H,YAElEwF,EAAG1P,KAAK,WAAY,CAAEsL,aAAcgH,EAAG/G,EAAGE,WAAY6G,EAAGzG,IACzD1H,EAAG7B,OAAOqL,KAAK,cAEnB,EAAK4C,SAASrB,GAAG,QAAQ,WACRQ,EACRsC,QAAQ,iBAAkBtC,EAAG1P,KAAK,gBAE3C,EAAKuQ,SAASrB,GAAG,YAAY,WACzB,IAAM5O,EAAOoP,EACb,EAAK6C,cAAcjS,EAAKqC,KAAMrC,EAAK0R,QAAQ,kBAAmBtC,EAAG1P,KAAK,gBAE1E,EAAKuQ,SAASiC,YAAY,e,8BAIlC,SAAiB7P,EAAI2P,GACjB3I,KAAKoB,QAAQpI,GAAI3C,KAAK,WAAYsS,K,0BAUtC,WACI3I,KAAKoI,+B,mBAGT,WACIpI,KAAK8I,eACL9I,KAAK+I,oB,+BAbT,SAAwBhD,GACpB,MAAqCA,EAAG1P,KAAK,YAArCyL,EAAR,EAAQA,WAAYH,EAApB,EAAoBA,aACdO,EAAI8G,WAAWlH,GACfF,EAAIoH,WAAWrH,GACrB,OAAOK,IAAsBiH,cAAc/G,EAAGN,EAAGmE,EAAGxD,SAAShC,WAAYwF,EAAGpN,SAAS4H,gB,MD7J9E4E,O,wHEjDf,IAAgB+D,EAOVjQ,EAAsB,CACxBiQ,WAAYrD,OAAOsD,KAAK,cACxBC,YAAavD,OAAOsD,KAAK,eAEzBE,OAXYH,EAWErD,OAAOsD,KAAK,cAVrBtD,OAAOyD,aAAaC,QAAQL,IAC7BrD,OAAOyD,aAAaE,QAAQN,EAAYrD,OAAOsD,KAAKhQ,KAAKsQ,UAAU,MAEhE,IAAIhI,IAAItI,KAAKC,MAAMyM,OAAO6D,KAAK7D,OAAOyD,aAAaC,QAAQL,OASlES,UANwB,WAOpB9D,OAAOyD,aAAaE,QAAQxJ,KAAKkJ,WAAYrD,OAAOsD,KAAKhQ,KAAKsQ,UAAUG,MAAMC,KAAK7J,KAAKqJ,WAG5FS,cAVwB,WAWfjE,OAAOyD,aAAaC,QAAQvJ,KAAKkJ,aAClCrD,OAAOyD,aAAaE,QAAQxJ,KAAKkJ,WAAYrD,OAAOsD,KAAKhQ,KAAKsQ,UAAU,OAIhFM,IAhBwB,SAgBpB/Q,GACA,OAAwC,OAApC6M,OAAOyD,aAAaC,QAAQvQ,GAAqB,KAC9CG,KAAKC,MAAMyM,OAAO6D,KAAK7D,OAAOyD,aAAaC,QAAQvQ,MAE9DgR,KApBwB,SAoBnBhR,EAAIiR,GACLjK,KAAKkK,SAASlR,GACd,IAAMmR,EAAiBhR,KAAKsQ,UAAUQ,GACtCpE,OAAOyD,aAAaE,QAAQxQ,EAAI6M,OAAOsD,KAAKgB,KAEhDzG,OAzBwB,SAyBjB1K,GACCgH,KAAKqJ,MAAMe,OAAOpR,IAAKgH,KAAK2J,YAChCL,aAAae,WAAWrR,IAE5BkR,SA7BwB,SA6BflR,GACDgH,KAAKqJ,MAAMxH,IAAI7I,KACnBgH,KAAKqJ,MAAM3I,IAAI1H,GACfgH,KAAK2J,cAETW,aAlCwB,WAmCpB,OAAOnR,KAAKC,MAAMyM,OAAO6D,KAAK7D,OAAOyD,aAAaC,QAAQvJ,KAAKkJ,eAEnEqB,WArCwB,SAqCbvR,GACP,IAAIgH,KAAKqJ,MAAMxH,IAAI7I,GAAnB,CACAgH,KAAKqJ,MAAM3I,IAAI1H,GACf,IAAMwR,EAAOrR,KAAKC,MAAMyM,OAAO6D,KAAK7D,OAAOyD,aAAaC,QAAQvJ,KAAKkJ,cACrEsB,EAAKC,QAAQzR,GACb6M,OAAOyD,aAAaE,QAAQxJ,KAAKkJ,WAAYrD,OAAOsD,KAAKhQ,KAAKsQ,UAAUe,OAE5EE,cA5CwB,WA6CpB,OAAOpB,aAAaC,QAAQvJ,KAAKoJ,cAAgB,IAErDuB,cA/CwB,SA+CVhN,GACV2L,aAAaE,QAAQxJ,KAAKoJ,YAAazL,IAE3CiN,WAlDwB,SAkDb5R,GACP6M,OAAOyD,aAAae,WAAWrR,IAEnCE,YArDwB,WAsDpB,OAAOoQ,aAAaC,QAAQ,aAAe,KAGpCtQ,O,gVChEf,IAAM+I,EAAwB,CAE1B6I,KAAM,SAACC,EAAGC,GAAJ,gBAAY,SAACD,EAAElQ,EAAImQ,EAAEnQ,EAAM,GAAf,SAAoBkQ,EAAE1K,EAAI2K,EAAE3K,EAAM,GAAM,KAE1D4K,OAAQ,SAACC,EAAGC,GAAJ,MAAW,CACftQ,EAAGqQ,EAAErQ,EAAIpD,KAAK2T,IAAID,GAAKD,EAAE7K,EAAI5I,KAAK4T,IAAIF,GACtC9K,EAAG6K,EAAErQ,EAAIpD,KAAK4T,IAAIF,GAAKD,EAAE7K,EAAI5I,KAAK2T,IAAID,KAG1CG,SAAU,SAACP,EAAGC,GAAJ,OAAaD,EAAElQ,GAAKmQ,EAAEnQ,GAAKkQ,EAAE1K,EAAI2K,EAAE3K,GAAO0K,EAAElQ,GAAKmQ,EAAEnQ,GAAKkQ,EAAE1K,EAAI2K,EAAE3K,EAAM5I,KAAK8T,GAAK,GAE1FC,UAX0B,SAWhBC,EAAMV,EAAGC,GACf,OAAQvT,KAAKiU,KAAKD,GAAQxL,KAAKqL,SAASP,EAAGC,GAAK,EAAIvT,KAAK8T,KAAO,EAAI9T,KAAK8T,KAG7ErC,cAf0B,SAeZ/G,EAAGN,EAAGkJ,EAAGC,GACnB,IAAMS,GAAQV,EAAE1K,EAAI2K,EAAE3K,IAAM0K,EAAElQ,EAAImQ,EAAEnQ,GAC9BsQ,EAAIlL,KAAKuL,UAAUC,EAAMV,EAAGC,GAE5BE,EAAI,CAAErQ,EADFoF,KAAK6K,KAAKC,EAAGC,GAAK7I,EACV9B,EAAGwB,GACrB,EAAiB5B,KAAKgL,OAAOC,EAAGC,GAAxBtQ,EAAR,EAAQA,EAAGwF,EAAX,EAAWA,EACX,MAAO,CAAExF,EAAGA,EAAIkQ,EAAElQ,EAAGwF,EAAGA,EAAI0K,EAAE1K,IAGlC6B,kBAxB0B,SAwBRyJ,EAAGZ,EAAGC,GACpB,IAAME,EAAI,CAAErQ,EAAG8Q,EAAE9Q,EAAIkQ,EAAElQ,EAAGwF,EAAGsL,EAAEtL,EAAI0K,EAAE1K,GAC/BoL,GAAQV,EAAE1K,EAAI2K,EAAE3K,IAAM0K,EAAElQ,EAAImQ,EAAEnQ,GAC9BsQ,EAAIlL,KAAKuL,UAAUC,EAAMV,EAAGC,GAClC,EAAiB/K,KAAKgL,OAAOC,GAAIC,GAAzBtQ,EAAR,EAAQA,EAER,MAAO,CAAEgH,EAFT,EAAWxB,EAEI8B,EAAGtH,EADRoF,KAAK6K,KAAKC,EAAGC,MAKhB/I,O,mNC1BP2J,EAAqBC,IAArBD,QAASE,EAAYD,IAAZC,QACXC,EAAQ,GAqDCC,EAnDE,SAAC,GAAgC,IAA9B5F,EAA6B,EAA7BA,WAAYxD,EAAiB,EAAjBA,WACtBqJ,EAAU7F,EAAWtI,iBAC3B,IAAKmO,EAAS,OAAO,6BACrB,IAAMC,EAAY9F,EAAWrI,UAC7B,OACI,8BACI,sBAAK/F,UAAU,YAAf,UACI,qBACIqC,KAAK,SACLC,SAAU,EACVtC,UAAU,oBACVuC,QAAS,kBAAM0R,EAAQE,aACvB3R,UAAW,SAACC,GAAD,MAAmB,MAAXA,EAAGjB,KAAgByS,EAAQE,aALlD,SAOI,cAAC,IAAD,MAGJ,qBACI9R,KAAK,SACLC,SAAU,EACVtC,UAAU,oBACVuC,QAAS,kBAAM0R,EAAQG,WACvB5R,UAAW,SAACC,GAAD,MAAmB,MAAXA,EAAGjB,KAAgByS,EAAQE,aALlD,SAOI,cAAC,IAAD,MAGJ,sBAAKnU,UAAU,sBAAf,UACKkU,EADL,OAIA,qBAAKlU,UAAU,SAAf,SACI,cAAC,IAAD,CACIJ,IAAK,IAAMgU,EACXlU,IAAK,IAAMoU,EACXC,MAAOA,EACPrT,SACI,SAACG,GACGoT,EAAQI,QAAQxT,GAChB+J,EAAW,CAAErK,KAAMmG,IAAEzI,eAAgB2I,QAAS/F,KAGtDyT,UAAU,EACVzT,MAAOqT,Y,iCCpDzBK,EAAc,SAACnG,GAAD,OAAgBA,EAAWtI,kBAEzC0O,EAAa,SAAChO,EAAOiO,GACvBA,EAAS,CACLlU,KAAMmG,IAAElK,uBACRmI,GAAI,SAAC5E,EAAOJ,GACR,IAAMoL,EAAUwJ,EAAY/N,GAAOkO,cAAc3U,EAAOJ,EAAO,KAAM,OAErE,OADIoL,EAAQE,IAAIsJ,EAAY/N,GAAOmO,QAAQ5U,EAAOJ,GAC3CoL,MAKb6J,EAAc,SAACpO,EAAOiO,GACxB,IAAMvJ,EAA4D,IAAxC1E,EAAMG,mBAAmByJ,IAAIjJ,OACjDuB,GAAM,IAAI5B,MAAOC,UACe,SAAlCP,EAAMG,mBAAmBpG,MACzBkU,EAAS,CACLlU,KAAMmG,IAAE/J,uBACRgI,GAAI,SAAC5E,EAAOJ,GACR,IAAMkV,EAAa,CAAE5J,IAAI,EAAMiC,IAAK,MAapC,OAZA1G,EAAMG,mBAAmByJ,IAAIpJ,SAAQ,SAAC/F,GAClC,IAAM8J,EAAUwJ,EAAY/N,GAAOkO,cAC/BxJ,EAAoBnL,EAAQ,KAAMJ,EAAOsB,EAAI,UAEjD4T,EAAW5J,GAAK4J,EAAW5J,IAAMF,EAAQE,GACzC4J,EAAW3H,IAAM2H,EAAW3H,KAAOnC,EAAQmC,OAE3C2H,EAAW5J,IACXzE,EAAMG,mBAAmByJ,IAAIpJ,SACzB,SAAC/F,GAAD,OAAQsT,EAAY/N,GAAOsO,WAAW7T,EAAItB,EAAOI,EAAOmL,EAAmBxC,MAG5EmM,GAEXpW,aAAcyM,EACdnL,MAAOwU,EAAY/N,GAAOuO,SAASvO,EAAMG,mBAAmByJ,IAAI,IAChEzQ,MAAO4U,EAAY/N,GAAO4E,SAAS5E,EAAMG,mBAAmByJ,IAAI,MAGlC,SAAlC5J,EAAMG,mBAAmBpG,MACzBkU,EAAS,CACLlU,KAAMmG,IAAEhK,uBACRiI,GAAI,SAAC5E,EAAOJ,GACR,IAAMkV,EAAa,CAAE5J,IAAI,EAAMiC,IAAK,MAapC,OAZA1G,EAAMG,mBAAmByJ,IAAIpJ,SAAQ,SAAC/F,GAClC,IAAM8J,EAAUwJ,EAAY/N,GAAOwE,cAC/BE,EAAoBnL,EAAQ,KAAMJ,EAAO,KAAM,KAAMsB,EAAI,UAE7D4T,EAAW5J,GAAK4J,EAAW5J,IAAMF,EAAQE,GACzC4J,EAAW3H,IAAM2H,EAAW3H,KAAOnC,EAAQmC,OAE3C2H,EAAW5J,IACXzE,EAAMG,mBAAmByJ,IAAIpJ,SACzB,SAAC/F,GAAD,OAAQsT,EAAY/N,GAAOwO,WAAW/T,EAAItB,EAAOI,EAAOmL,EAAmBxC,MAG5EmM,GAEXpW,aAAcyM,EACdnL,MAAOwU,EAAY/N,GAAOuO,SAASvO,EAAMG,mBAAmByJ,IAAI,IAChEzQ,MAAO4U,EAAY/N,GAAO4E,SAAS5E,EAAMG,mBAAmByJ,IAAI,OAKtEnC,EAAa,SAACzH,GAChB,IAAMkC,GAAM,IAAI5B,MAAOC,UACvBP,EAAMG,mBAAmByJ,IAAIpJ,SAAQ,SAAC/F,GAAD,OAAQsT,EAAY/N,GAAOyH,WAAWhN,EAAIyH,OAG7EuM,EAAc,SAACzO,EAAOiO,EAAUS,GAClCX,EAAY/N,GAAOyO,YAAYC,IAO7BC,EAAa,SAAC3O,EAAOqD,EAAGuL,GAC1Bb,EAAY/N,GAAO6O,WAAWD,IAG5BE,EAAW,SAAC9O,EAAOiO,EAAUc,GAC/B,GAAIA,EAAM,CACN,IAAMC,EAAK,IAAIC,WACTxP,EAAcsP,EAAK5R,KACU,YAA/B4R,EAAK5R,KAAK+R,MAAM,KAAKC,QACrBH,EAAGI,OAAS,SAAC/S,GACT4R,EAAS,CACLlU,KAAMmG,IAAErJ,UACRuJ,QAAS,CAAEX,cAAaG,QAASvD,EAAEjC,OAAOiV,WAGlDL,EAAGM,WAAWP,MAcpBQ,EAAa,SAACvP,EAAOiO,GACvBA,EAAS,CAAElU,KAAMmG,IAAEjJ,aAGjBuY,EAAW,SAACxP,GACd+N,EAAY/N,GAAOwP,YAUjBC,EAAO,SAACzP,GACN+N,EAAY/N,IAAQ+N,EAAY/N,GAAOyP,QAEzCC,EAAO,SAAC1P,GACV+N,EAAY/N,GAAO0P,QAGjBC,EAAiB,SAAC3P,EAAOiO,GAC3BA,EAAS,CAAElU,KAAMmG,IAAEhJ,gBAAiBkJ,SAAS,KAO3CjB,EAAc,SAACa,EAAOiO,GACxBA,EAAS,CAAElU,KAAMmG,IAAE7I,kBAAmB+I,SAAS,K,kBCjDpCwP,EAjFA,SAAC,GAAgC,IAA9BhI,EAA6B,EAA7BA,WAAYxD,EAAiB,EAAjBA,WACpByL,EAAW,SAACnP,EAAGvG,GACjBA,EAAE2V,kBAEGxI,OAAOC,QAAQ,mEACpB7M,IAAoByK,OAAOyC,EAAW3I,OAAOyB,GAAKkH,EAAW3I,OAAOyB,GAAGhB,QAAU,MACjF0E,EAAW,CAAErK,KAAMmG,IAAElJ,aAAcoJ,QAASM,MAE1CqP,EAAU,SAAC5V,GACbA,EAAE2V,kBACsB1L,EDkGnB,CACLrK,KAAMmG,IAAExI,uBACR0I,SAAS,KCjFb,OAjBA5E,IAAM1C,WAAU,WACZkX,YAAQ,gCAAgC,SAACC,GACrCA,EAAMC,iBACNC,SAAS5G,eAAe,aAAa6G,WAEzCJ,YAAQ,gCAAgC,SAACC,GACrCA,EAAMC,iBACN,IAAM1I,EAAK2I,SAASE,cAAc,2CAC9B7I,GAAIA,EAAG4I,WAEfJ,YAAQ,gCAAgC,SAACC,GACrCA,EAAMC,iBACN,IAAM1I,EAAK2I,SAASE,cAAc,4CAC9B7I,GAAIA,EAAG4I,aAEhB,IAGC,sBAAK5W,UAAU,UAAf,UACI,wBACIA,UAAU,MACVuC,QAASwT,EAAWe,KAAK,EAAM1I,EAAYxD,GAC3CrK,KAAK,SACLU,GAAG,YACH8V,WAAS,sCALb,SAOI,cAAC,IAAD,CAAO/T,KAAM,OAEhBoL,EAAW3I,OAAOnE,KAAI,SAAC0M,EAAI9G,GAAL,OACnB,sBAEIlH,UAAS,wBAAmBoO,EAAW1I,gBAAkBwB,EAAI,WAAa,QAC1E3E,QAAS,kBAAMqI,EAAW,CAAErK,KAAMmG,IAAEnJ,WAAYqJ,QAASM,KACzD1E,UAAW,SAACC,GAAD,MAAmB,MAAXA,EAAGjB,KAAeoJ,EAAW,CAAErK,KAAMmG,IAAEnJ,WAAYqJ,QAASM,KAC/E7E,KAAK,SACLC,SAAU,EACVrB,GAAE,cAASiG,GAPf,UASI,sBAAMlH,UAAU,WAAhB,SACKgO,EAAG/H,cAGPmI,EAAW1I,gBAAkBwB,EAC1B,wBACIlH,UAAU,eACVuC,QAASgU,EACThW,KAAK,SACLwW,WAAS,2CACTC,WAAS,aALb,SAOI,cAAC,IAAD,CAAQhU,KAAM,OAElB,6BACJ,wBACIhD,UAAU,gBACVuC,QAAS8T,EAASS,KAAK,EAAM5P,GAC7B3G,KAAK,SACLwW,WAAS,4CACTC,WAAS,aALb,SAOI,cAAC,IAAD,CAAShU,KAAM,OAEnB,cAAC,IAAD,CAAciU,MAAM,SAAS1W,KAAK,OAAO2W,OAAO,QAAQjW,GAAG,iBAhCtD+M,EAAG9H,gB,kGCAbiR,EArDA,SAAC,GAAD,IACbpX,EADa,EACbA,MAAOkB,EADM,EACNA,GAAImW,EADE,EACFA,KAAMC,EADJ,EACIA,KAAM7X,EADV,EACUA,MAAOU,EADjB,EACiBA,OAAQkE,EADzB,EACyBA,QAAShE,EADlC,EACkCA,MADlC,MAER,CACL+H,EAAG,CACDlH,MAEF3C,KAAM,CACJ,CACE6J,EAAG,CACD3G,IAAK,MAEP,cAAe,CACb,CACE,aAAc,CACZ,CACE2G,EAAG,CACDjI,SACAV,QACAqD,EAAGuU,EACH/O,EAAGgP,KAIT,SAAU,CACR,CACElP,EAAG,CACDrG,MA1BD,EACyCmC,gBA0BxCG,aAIN,gBAAiB,CACf,CACE+D,EAAG,CACDrG,MAlCD,EAC0DuC,YAkCzD7E,MAnCD,EACuE8E,eAsC5E,cAAe,CAACvE,GAChB,UAAW,CACT,CACEoI,EAAG,CACD5H,KAAMH,WCDPgG,EA1CC,SAAC,GAAD,IACd4G,EADc,EACdA,MAAOzD,EADO,EACPA,MAAOtI,EADA,EACAA,GAAIgF,EADJ,EACIA,YAAaqR,EADjB,EACiBA,cADjB,MAET,CACLC,QAAS,CACPpP,EAAG,CACDqP,MAAO,wCACP,YAAa,4CACb,qBAAsB,kGACtB,UAAW,qCAEbhW,IAAK,CACH,CACE2G,EAAG,CACDsP,IAAK,OACLxW,GAAI,KACJ,cAAe,iBAGnB,CACEkH,EAAG,CACDsP,IAAK,OACLxW,GAAI,MACJ,cAAe,kBAIrByW,MAAO,CACL,CACEvP,EAAG,CACDwP,YAAa,WACb1W,KACAgF,cACAE,SAhCM,EACgCA,UAiCxCvH,KAAMoO,EACNrD,KAAMJ,EACN+N,qBCmBOM,EAvDA,SAAC,GAAD,IACb3W,EADa,EACbA,GAAIlB,EADS,EACTA,MAAOyK,EADE,EACFA,OAAQ5J,EADN,EACMA,OAAQiX,EADd,EACcA,UAAWC,EADzB,EACyBA,UAAW9N,EADpC,EACoCA,UADpC,MAER,CACL7B,EAAG,CACDlH,KACAuJ,SACA5J,UAEFtC,KAAM,CACJ,CACE6J,EAAG,CACD3G,IAAK,OAEP,gBAAiB,CACf,CACE2G,EAAG,CACD4P,cAAe,8BAEjB,cAAe,CACb,CACE5P,EAAG,CACDrG,MAAO+V,EACPrY,MAAOsY,EACPvX,KAvBD,EAC+CA,QA0BpD,WAAY,CACV,CACE4H,EAAG,CACDqC,OAAQ,OACR5J,OAAQ,WAId,cAAe,CAACb,GAChB,SAAU,CACR,CACEoI,EAAG,CACD6P,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,OAEN,UAAW,CACT,CAAEhQ,EAAG6B,YCXNoO,EA7BC,SAACC,GACb,IAAMrL,EAAQqL,EAAErL,MAAM1L,KAAI,SAAC1C,GAAD,OAAWuY,EAAO,aACxCpX,MAAOnB,EAAKmB,MACZkB,GAAIrC,EAAKqC,GACTmW,KAAMxY,EAAK4J,SAAS3F,EACpBwU,KAAMzY,EAAK4J,SAASH,GACjBzJ,EAAKe,WAEN4J,EAAQ8O,EAAE9O,MAAMjI,KAAI,SAACgX,EAAKpR,GAAN,OAAY0Q,EAAO,CACzC3W,GAAIiG,EACJnH,MAAOuY,EAAIvY,MACXyK,OAAQ8N,EAAI9N,OACZ5J,OAAQ0X,EAAI1X,OACZiX,UAAWS,EAAI3Y,MAAMsE,gBACrB6T,UAAWQ,EAAI3Y,MAAMoE,UACrBiG,UAAWsO,EAAIhO,SAASN,UACxBzJ,KAAM+X,EAAI3Y,MAAMS,WAEdmY,EAAInS,EAAQ,CACd4G,QACAzD,QACAtD,YAAaoS,EAAEpS,YACfhF,GAAIoX,EAAEpX,GACNqW,cAAee,EAAEf,cACjBnR,SAAUkS,EAAElS,WAGhB,OADY,IAAIqS,IAAOC,SAAUC,YAAYH,I,gECuIlCI,G,kDA1JX,aAAuB,IAAD,mDAAPC,EAAO,yBAAPA,EAAO,uBAClB,+BAASA,KAEJC,eAAL,oBACK9P,KAAGG,UAAW,wCAAIvB,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKgN,QAAL,QAAgBhN,EAAhB,QAAsB,QADtD,eAEKoB,KAAG2B,UAAW,wCAAI/C,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKmI,QAAL,QAAgBnI,EAAhB,QAAsB,QAFtD,eAGKoB,KAAGoC,aAAc,wCAAIxD,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKmN,WAAL,QAAmBnN,EAAnB,QAAyB,QAH5D,eAIKoB,KAAGsC,aAAc,wCAAI1D,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKqN,WAAL,QAAmBrN,EAAnB,QAAyB,QAJ5D,eAKKoB,KAAGwC,aAAc,wCAAI5D,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKmR,WAAL,QAAmBnR,EAAnB,QAAyB,QAL5D,eAMKoB,KAAGC,UAAW,wCAAIrB,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKoE,WAAL,QAAmBpE,EAAnB,QAAyB,QANzD,eAOKoB,KAAG0B,UAAW,wCAAI9C,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKsG,WAAL,QAAmBtG,EAAnB,QAAyB,QAPzD,eAQKoB,KAAGgQ,SAAU,wCAAIpR,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKwE,OAAL,QAAexE,EAAf,QAAqB,QARpD,eASKoB,KAAGiQ,SAAU,wCAAIrR,EAAJ,yBAAIA,EAAJ,uBAAa,KAAKsR,OAAL,QAAetR,EAAf,QAAqB,QATpD,eAUKoB,KAAGmQ,WAAY,wBAAa,KAAKC,iBAAL,sBAVjC,GAaA,EAAKjL,UAAY,GACjB,EAAKkL,eAAiB,EAjBJ,E,kDAoBtB,WACInR,KAAKiG,UAAY,GACjBjG,KAAKmR,eAAiB,I,sBAG1B,WACInR,KAAK2C,WAAW,CAAErK,KAAMmG,IAAExJ,SAAU0J,QAAiC,IAAxBqB,KAAKmR,iBAClDnR,KAAK2C,WAAW,CAAErK,KAAMmG,IAAEvJ,SAAUyJ,QAASqB,KAAKmR,iBAAmBnR,KAAKiG,UAAU/G,W,2BAGxF,YAA2C,IAA3B2B,EAA0B,EAA1BA,WAAYG,EAAc,EAAdA,WACThB,KAAK4Q,cAAc/P,GAC5B,WAAN,cAAUG,M,+BAGd,SAAkBhI,EAAIoY,EAASC,GAC3B,IAAM5Q,GAAM,IAAI5B,MAAOC,UACvBkB,KAAKY,UACD,CAAEC,WAAYC,KAAGgQ,QAAS9P,WAAY,CAAChI,EAAIoY,EAASC,IACpD,CAAExQ,WAAYC,KAAGgQ,QAAS9P,WAAY,CAAChI,EAAIqY,EAAQD,IAAY3Q,K,gCAIvE,SAAmBzH,EAAIsY,EAASF,EAASG,EAAQF,GAC7C,IAAM5Q,GAAM,IAAI5B,MAAOC,UACvBkB,KAAKY,UACD,CAAEC,WAAYC,KAAGiQ,QAAS/P,WAAY,CAAChI,EAAIsY,EAASF,IACpD,CAAEvQ,WAAYC,KAAGiQ,QAAS/P,WAAY,CAAChI,EAAIuY,EAAQF,IAAW5Q,K,2BAItE,SAAczH,EAAIwY,EAAQC,GACtB,IAAMhR,GAAM,IAAI5B,MAAOC,UACvBkB,KAAKY,UACD,CAAEC,WAAYC,KAAGmQ,UAAWjQ,WAAY,CAAChI,EAAIwY,IAC7C,CAAE3Q,WAAYC,KAAGmQ,UAAWjQ,WAAY,CAAChI,EAAIyY,IAAUhR,K,uBAkB/D,SAAUiR,EAASC,EAAYlR,GAA+C,IAA1C9C,EAAyC,uDAA5BqC,KAAKmG,WAAWxI,WAC7D,GAAY,IAAR8C,EAAJ,CACAT,KAAKiG,UAAU2L,OAAO5R,KAAKmR,gBAE3B,IAAMU,EAAiBnB,EAAcoB,WAAWH,GAAYnY,WACtDkX,EAAcoB,WAAWH,GAAYnY,WACrCiH,EACA9C,EACNqC,KAAKiG,UAAU8L,KAAK,CAChBtR,MACAiR,UACAC,aACAhU,aACAqU,KAAMC,KAAI,GAAD,OACFJ,EADE,YACgB7R,KAAKiG,UAAU/G,OAASc,KAAKiG,UAAUiM,IAAI,GAAGF,KAAO,OAGlFhS,KAAKmR,gBAAkB,EACvBnR,KAAKmS,c,8BAGT,WACgC,IAAxBnS,KAAKmR,iBACLnR,KAAKmR,gBAAkB,EACvBnR,KAAKoS,cAAcpS,KAAKiG,UAAUjG,KAAKmR,gBAAgBO,SACvD1R,KAAKmS,c,8BAIb,WACQnS,KAAKmR,iBAAmBnR,KAAKiG,UAAU/G,SACvCc,KAAKoS,cAAcpS,KAAKiG,UAAUjG,KAAKmR,gBAAgBQ,YACvD3R,KAAKmR,gBAAkB,EACvBnR,KAAKmS,c,kBAIb,WACI,IAAIE,EAAS,KAEb,IAD4B,IAAxBrS,KAAKmR,iBAAsBkB,EAASrS,KAAKiG,UAAUjG,KAAKmR,eAAiB,GAAG1Q,KACjD,IAAxBT,KAAKmR,gBAAwBnR,KAAKiG,UAAUjG,KAAKmR,eAAiB,GAAG1Q,MAAQ4R,GAChFrS,KAAKmR,gBAAkB,EACvBnR,KAAKoS,cAAcpS,KAAKiG,UAAUjG,KAAKmR,gBAAgBO,SAE3D1R,KAAKmS,a,kBAGT,WACI,IAAIE,EAAS,KAEb,IADIrS,KAAKmR,iBAAmBnR,KAAKiG,UAAU/G,SAAQmT,EAASrS,KAAKiG,UAAUjG,KAAKmR,gBAAgB1Q,KACzFT,KAAKmR,iBAAmBnR,KAAKiG,UAAU/G,QAAUc,KAAKiG,UAAUjG,KAAKmR,gBAAgB1Q,MAAQ4R,GAChGrS,KAAKoS,cAAcpS,KAAKiG,UAAUjG,KAAKmR,gBAAgBQ,YACvD3R,KAAKmR,gBAAkB,EAE3BnR,KAAKmS,a,0BAGT,WACI,qEACAnS,KAAKmS,a,4BAGT,WAAkB,IAAD,OACb,uEACAnS,KAAKC,GAAGsF,GAAG,WAAY,wBAAwB,SAAC7M,GAC5CA,EAAEC,OAAOoG,SAAQ,SAACpI,GACd,EAAK2b,kBAAkB3b,EAAKqC,KAAMrC,EAAK0R,QAAQ,YAA/C,eAAiE1R,EAAK4J,mBAG9EP,KAAKC,GAAGsF,GAAG,yBAAyB,SAAC7M,EAAGJ,EAAM3B,GAC1C,EAAK4b,mBACD5b,EAAKqC,KACL,CAAEf,OAAQtB,EAAK0R,QAAQ,UAAW9Q,MAAOZ,EAAK0R,QAAQ,UACtD1R,EAAK0R,QAAQ,YACb,CAAEpQ,OAAQtB,EAAKN,KAAK,SAAS4B,OAAQV,MAAOZ,EAAKN,KAAK,SAASkB,OAJnE,eAKSZ,EAAK4J,mB,yBAzFtB,SAAkBiS,GACd,KAAMA,aAAeC,QAAS,OAAOD,EACrC,IAAIE,EAAI,GASR,OARIF,aAAe5I,MACf8I,EAAIF,EAAInZ,IAAIqX,EAAcoB,YAE1BW,OAAOE,KAAKH,GAAKI,OAAO7T,SAAQ,SAAC8T,GAC7BH,EAAEX,KAAF,WAAWc,EAAX,MACAH,EAAEX,KAAKrB,EAAcoB,WAAWU,EAAIK,QAGrCH,M,GA7EajT,MC8CbqT,G,WAlDX,WAAYN,GAAM,oBACdxS,KAAK+S,IAAM,CAACP,GACZxS,KAAKgT,Y,6CAGT,WAEI,IAFS,IAAD,OACFC,EAAU,GACPhU,EAAI,EAAGA,EAAIe,KAAK+S,IAAI7T,OAAQD,GAAK,EAClCe,KAAK+S,IAAI9T,GAAGiU,cAAgBtJ,MAAO5J,KAAK+S,IAAI9T,GAAGF,SAAQ,SAACoU,GAAD,OAAO,EAAKJ,IAAIhB,KAAKoB,MAC3EF,EAAQlB,KAAK/R,KAAK+S,IAAI9T,IAE/Be,KAAK+S,IAAME,I,eAGf,SAAEvH,GACE,OAAO,IAAIoH,EAAY9S,KAAK+S,IAAI1Z,KAAI,SAAC8Z,GAAD,OAAOA,EAAEzH,MAAIvM,QAAO,SAACgU,GAAD,OAAOA,Q,eAGnE,SAAEzH,GAGE,OAFA1L,KAAK+S,IAAM/S,KAAK+S,IAAI1Z,KAAI,SAAC8Z,GAAD,OAAOA,EAAEzH,MAAIvM,QAAO,SAACgU,GAAD,OAAOA,KACnDnT,KAAKgT,YACEhT,O,iBAGX,WACI,IAAM+S,EAAM,GAQZ,OAPA/S,KAAK+S,IAAIhU,SAAQ,SAACyT,GACdC,OAAOE,KAAKH,GAAKzT,SAAQ,SAACxF,GACtBwZ,EAAIhB,KAAKS,EAAIjZ,UAGrByG,KAAK+S,IAAMA,EACX/S,KAAKgT,YACEhT,O,wBAGX,SAAWhF,EAAGoY,GACV,IAAMC,EAAc,IAAIP,EAAY9S,KAAK+S,KAIzC,OAHA/X,EAAEyS,MAAM,KAAK1O,SACT,SAACuU,GAAD,MAA4B,MAAbA,EAAmBD,EAAYE,MAAQF,EAAYG,EAAEF,MAE9D,IAANF,EAAgBC,EAAYvI,IACtB,IAANsI,EAAgBC,EACbA,EAAYI,M,eAGvB,WAAM,OAAOzT,KAAK+S,M,eAElB,WAAM,OAAO/S,KAAK+S,IAAI,O,KC/CpBW,GAAe,SAAC9Y,EAAGmY,EAAKY,GAC1B,OAAIZ,EAAIa,SAAShZ,GAAWA,EACrB+Y,GAGLE,GAAY,SAACld,GACf,IAAM+U,EAAI,IAAIoH,GAAYnc,GAAMmd,WAAW,mBAAoB,GAC/D,MAAO,CACHhc,MAAO4T,EAAEoI,WAAW,kBAAoBpI,EAAEoI,WAAW,eACrD9a,GAAI,IAAI8Z,GAAYnc,GAAMmd,WAAW,QACrCvT,SAAU,CACN3F,EAAGoO,WAAW0C,EAAEoI,WAAW,mBAC3B1T,EAAG4I,WAAW0C,EAAEoI,WAAW,oBAE/Bpc,MAAO,CACHH,MAAOyR,WAAW0C,EAAEoI,WAAW,uBAC/B7b,OAAQ+Q,WAAW0C,EAAEoI,WAAW,wBAChC3X,QAASlB,SAASyQ,EAAEoI,WAAW,oBAAqB,KAAO,EAC3D3b,MAAOub,GAAahI,EAAEoI,WAAW,kBAAmB,CAAC,YAAa,WAAY,aAC9E9X,gBAAiB0P,EAAEoI,WAAW,kBAC9B1X,YAAasP,EAAEoI,WAAW,yBAC1BzX,YAAapB,SAASyQ,EAAEoI,WAAW,yBAA0B,OAKnEC,GAAY,SAACrS,GAAD,MAAW,CACzB5J,MAAO,IAAIgb,GAAYpR,GAAMoS,WAAW,yBAC5B,IAAIhB,GAAYpR,GAAMoS,WAAW,sBAC7CvR,OAAQ,IAAIuQ,GAAYpR,GAAMoS,WAAW,YACzCnb,OAAQ,IAAIma,GAAYpR,GAAMoS,WAAW,YACzCpc,MAAO,CACHsE,gBAAiB,IAAI8W,GAAYpR,GAAMoS,WAAW,8BAClDhY,UAAWkN,WAAW,IAAI8J,GAAYpR,GAAMoS,WAAW,+BACvD3b,MAAOub,GAAa,IAAIZ,GAAYpR,GAAMoS,WAAW,6BACjD,CAAC,SAAU,UAAW,UAE9BzR,SAAU,CACNN,UAAW,IAAI+Q,GAAYpR,GAAMoS,WAAW,8BAI9CE,GAAiB,SAAC,GAAD,IAAGnT,EAAH,EAAGA,WAAYG,EAAf,EAAeA,WAAf,MAAiC,CAAEH,WAAYA,EAAW,GAAIG,WAAYA,EAAW,KC1B7FiT,GAZA,SAACC,GAAD,OAAgB,IAAIC,SAAQ,SAACC,IACxC,IAAI7D,IAAO8D,QAASC,YAAYJ,GAAY,SAACjP,EAAKsP,GAC9C,IAAMC,EAAS,IAAI1B,GAAYyB,GACzBxP,EAAQyP,EAAOV,WAAW,qBAAsB,GAAGza,IAAIwa,IACvDvS,EAAQkT,EAAOV,WAAW,qBAAsB,GAAGza,IAAI0a,IAC7D,ED6Ca,SAACS,GAAD,OAAYA,EAAOV,WAAW,mBC7CLW,CAAaD,GAA3Cxb,EAAR,EAAQA,GAAIgF,EAAZ,EAAYA,YAAaE,EAAzB,EAAyBA,SACnBmR,EDkCa,SAACmF,GAAD,OAAYA,EAAOV,WAAW,8BAA+B,GACnFza,KAAI,gBACDsE,EADC,EACDA,WAAYgU,EADX,EACWA,WAAYD,EADvB,EACuBA,QAASjR,EADhC,EACgCA,IADhC,MAEE,CACH9C,WAAYA,EAAW,GACvBgU,WAAYqC,GAAcrC,EAAW,IACrCD,QAASsC,GAActC,EAAQ,IAC/BjR,IAAKA,EAAI,OCzCaiU,CAAmBF,GACzCJ,EAAQ,CACJpb,KAAIgF,cAAasD,QAAOyD,QAAOsK,gBAAenR,oBCZ3CyW,G,yJCKX,SAAIC,GACA,IAAQ1W,EAAa0W,EAAb1W,SACR,2DAAU0W,GACN1W,IACA8B,KAAK6U,YAAY3W,GACjB8B,KAAK2C,WAAW,CAAErK,KAAMmG,IAAE3I,sBAAuB6I,QAASmW,QAAQ9U,KAAK9B,e,0BAsD/E,WACI,qEACA8B,KAAK2C,WAAW,CAAErK,KAAMmG,IAAE3I,sBAAuB6I,QAASmW,QAAQ9U,KAAK9B,gB,qDC1D3E,aAAsB,IAAD,iDAANwB,EAAM,yBAANA,EAAM,uBACjB,+BAASA,KACJqV,mBAAqB,KAFT,E,kDAKrB,WAAkB,IAAD,OACb,uEACA/U,KAAKC,GAAGsF,GAAG,6BAA8B,sBAAsB,kBAAM,EAAKyP,sBAC1EhV,KAAKC,GAAGsF,GAAG,kBAAmB,sBAAsB,kBAAM,EAAKyP,sBAC/DhV,KAAKC,GAAGsF,GAAG,wCAAwC,kBAAM,EAAKyP,wB,yBAGlE,SAAY/H,GACRjN,KAAKC,GAAG+D,KAAK,aACbhE,KAAKC,GAAGC,EAAE,cAAcwD,SACT,QAAXuJ,GAAkBgI,iBAAOjV,KAAKC,GAAGiV,IAAI,CAAEC,MAAM,IAArB,UAAiCnV,KAAKoV,UAAtC,qBACb,QAAXnI,GAAkBgI,iBAAOjV,KAAKC,GAAGoV,IAAI,CAAEF,MAAM,IAArB,UAAiCnV,KAAKoV,UAAtC,uB,+BAGhC,SAAkBE,GACd,MAA6C,UAAtCtV,KAAKoB,QAAQkU,GAAQjf,KAAK,U,+BAGrC,SAAkBkf,GACd,MAA6C,UAAtCvV,KAAKoB,QAAQmU,GAAQlf,KAAK,U,6BAIrC,SAAgBif,GACZ,OAAOA,I,0BAWX,WAAgB,IAAD,OACL7F,EAAQ,CACV1K,MAAO,GACPzD,MAAO,GACP+N,cAAe,GACfrR,YAAagC,KAAKhC,YAClBhF,GAAIgH,KAAKhH,GACTkF,SAAU8B,KAAK9B,UAoCnB,OAlCA8B,KAAKC,GAAG8E,QAAQhG,SAAQ,SAACpI,GACrB,GAAI,EAAK6e,kBAAkB7e,EAAKqC,MAAO,CACnC,IAAMyc,EAAM9e,EAAK8M,OACXiS,EAAW,CACb5d,MAAO2d,EAAIpf,KAAKyB,MAChBkB,GAAIyc,EAAIpf,KAAK2C,GACbuH,SAAUkV,EAAIlV,SACd7I,MAAO,IAEXge,EAAShe,MAAQ,EAAKyL,SAASxM,EAAKqC,MACpCyW,EAAM1K,MAAMgN,KAAK2D,OAGzB1V,KAAKC,GAAGqB,QAAQvC,SAAQ,SAAC2C,GACrB,GAAI,EAAKiU,kBAAkBjU,EAAK1I,MAAO,CACnC,IAAM4c,EAAWlU,EAAK+B,OAAOpN,KAC7Buf,EAASrT,OAAS,EAAKmC,gBAAgBhD,EAAKa,SAASvJ,MACrD4c,EAASle,MAAQ,EAAKyL,SAASzB,EAAK1I,MACpC4c,EAASvT,SAASN,UAAYC,IAAsBiH,cAChD2M,EAASvT,SAASP,WAAY8T,EAASvT,SAASV,aAChDD,EAAKa,SAAShC,WAAYmB,EAAK/I,SAAS4H,YAE5CkP,EAAMnO,MAAMyQ,KAAK6D,OAGzBnG,EAAMJ,cAAgBrP,KAAKiG,UAAU5M,KAAI,gBACrCoH,EADqC,EACrCA,IAAKiR,EADgC,EAChCA,QAASC,EADuB,EACvBA,WAAYhU,EADW,EACXA,WAAYqU,EADD,EACCA,KADD,MAElC,CACHvR,MACA9C,aACA+T,QAASmE,EAAcC,gBAAgBpE,GACvCC,WAAYkE,EAAcC,gBAAgBnE,GAC1CK,WAEGvC,I,qBAGX,WACI,MAAM,GAAN,OAAUzP,KAAKhC,e,wBAGnB,SAAWmP,GACP,IAAM4I,EAAMC,EAAehW,KAAKiW,gBAC1BC,GAAQ,IAAIC,aAAcC,OAAOL,GACjCM,EAAO,IAAIC,KAAK,CAACJ,GAAQ,CAAE5d,KAAM,mCACvC2c,iBAAOoB,EAAD,UAAUlJ,GAAQ,UAAOnN,KAAKoV,UAAZ,gBAAlB,e,wBAGV,WACI,OAAOY,EAAehW,KAAKiW,kB,sBAG/B,SAASM,GAAU,IAAD,OACdA,EAAQxR,MAAMhG,SAAQ,SAACpI,GACnB,EAAK+V,QAAQ/V,EAAKmB,MAAOnB,EAAKe,MAAO,QAASf,EAAK4J,SAAU,GAAK5J,EAAKqC,GAAI,MAE/Eud,EAAQjV,MAAMvC,SAAQ,SAAC2C,GACnB,EAAKmG,QAAL,2BAAkBnG,GAAlB,IAAwBR,SAAUQ,EAAKa,OAAQpB,SAAUO,EAAK/I,SAAU,MAE5E4d,EAAQlH,cAActQ,SAAQ,YAEvB,IADH2S,EACE,EADFA,QAASC,EACP,EADOA,WAAYlR,EACnB,EADmBA,IAAK9C,EACxB,EADwBA,WAE1B,EAAKiD,UAAUiV,EAAcW,YAAY9E,GAAUmE,EAAcW,YAAY7E,GAAalR,EAAK9C,MAEnGqC,KAAKyW,eAAeF,EAAQvY,aAC5BgC,KAAK6U,YAAY7U,KAAK9B,UAAYqY,EAAQrY,Y,8BAG9C,WAAoB,IAAD,OACiB,OAA5B8B,KAAK+U,oBAA6B2B,aAAa1W,KAAK+U,oBACxD/U,KAAK+U,mBAAqB4B,YAAW,kBAAM1d,IAAoB+Q,KAAK,EAAKhR,GAAI,EAAKid,kBAAiB,O,wBAGvG,SAAW9X,GAAU,IAAD,OAChByY,GAAczY,GAAS0Y,MAAK,SAACC,GACzB7d,IAAoB+Q,KAAK,EAAKhR,GAAI8d,GAClC,EAAKC,iC,+BAIb,WACI9d,IAAoB2R,WAAW5K,KAAKhH,M,uCAGxC,WACIgH,KAAKoF,QACL,IAAM6E,EAAehR,IAAoB8Q,IAAI/J,KAAKhH,IAClD,QAAKiR,IACLjK,KAAKgX,SAAS/M,IACP,K,4BAGX,WACI,OAAOpE,OAAOsD,KAAKhQ,KAAKsQ,UAAUzJ,KAAKiW,oB,8BA9G3C,YAAoD,IAA3BpV,EAA0B,EAA1BA,WAAYG,EAAc,EAAdA,WACjC,MAAO,CAAEH,aAAYG,WAAY6E,OAAOsD,KAAKhQ,KAAKsQ,UAAUzI,O,yBAGhE,YAAgD,IAA3BH,EAA0B,EAA1BA,WAAYG,EAAc,EAAdA,WAC7B,MAAO,CAAEH,aAAYG,WAAY7H,KAAKC,MAAMyM,OAAO6D,KAAK1I,S,GAxCpC0P,KCPtBuG,GAAgB,CAClBC,MADkB,SACZC,EAAIC,GACN,IAAMC,GAAKF,EAAG/W,EAAIgX,EAAGhX,IAAM+W,EAAGvc,EAAIwc,EAAGxc,GAErC,MAAO,CAACyc,EADEF,EAAG/W,EAAIiX,EAAIF,EAAGvc,IAG5B0c,QANkB,SAMVC,EAAItM,EAAG/I,EAAGsV,GACd,GAAID,EAAG3c,IAAMqQ,EAAErQ,EAAG,MAAO,CAACqQ,EAAErQ,EAAGqQ,EAAErQ,GACjC,IAAMwc,EAAK,CAAExc,EAAGqQ,EAAErQ,EAAI2c,EAAG3c,EAAGwF,EAAG6K,EAAE7K,EAAImX,EAAGnX,GACxC,EAAeJ,KAAKkX,MAAM,CAAEtc,EAAG,EAAGwF,EAAG,GAAKgX,GAA1C,mBAAOC,EAAP,KAAUzP,EAAV,KAEMkD,EAAK,SAAA5I,EAAK,GAAL,SAASmV,EAAK,GAAd,SAAkBG,EAAK,GAC5BzM,EAAI,WAAI7I,EAAK,GAAImV,EAAIzP,EACrB6P,EAAI,SAAAvV,EAAK,IAAK,SAAA0F,EAAK,GAAL,SAAS4P,EAAK,IAC5BE,EAAI,SAAA3M,EAAK,GAAI,EAAID,EAAI2M,EAG3B,MAAO,GAFM1M,EAAD,SAAK2M,EAAK,MAAQ,EAAI5M,GAAKyM,EAAG3c,IAC7BmQ,EAAA,KAAD,IAAK2M,EAAK,MAAQ,EAAI5M,GAAKyM,EAAG3c,IAG9C+c,QAnBkB,SAmBVF,EAAGxM,EAAG/I,EAAGsV,EAAGI,EAAIC,GACpB,GAAID,IAAOC,EAAI,MAAO,CAACJ,EAAErX,EAAIoX,EAAGC,EAAErX,EAAIoX,GACtC,MAAexX,KAAKkX,MAAMO,EAAGxM,GAA7B,mBAAOoM,EAAP,KAAUzP,EAAV,KACA,MAAO,CAACyP,EAAIO,EAAKhQ,EAAGyP,EAAIQ,EAAKjQ,IAEjCiD,KAxBkB,SAwBbC,EAAGC,GACJ,OAAO,KAAP,IAAQ,SAACD,EAAElQ,EAAImQ,EAAEnQ,EAAM,GAAf,SAAoBkQ,EAAE1K,EAAI2K,EAAE3K,EAAM,GAAM,KAEpD0X,kBA3BkB,SA2BAL,EAAGxM,EAAG/I,EAAGsV,GACvB,MAAiBxX,KAAKsX,QAAQG,EAAGxM,EAAG/I,EAAGsV,GAAvC,mBAAOI,EAAP,KAAWC,EAAX,KACA,EAAiB7X,KAAK2X,QAAQF,EAAGxM,EAAG/I,EAAGsV,EAAGI,EAAIC,GAA9C,mBAAOE,EAAP,KAAWC,EAAX,KACA,EAAiB,CAAChY,KAAK6K,KAAKI,EAAG,CAAErQ,EAAGgd,EAAIxX,EAAG2X,IAAO/X,KAAK6K,KAAKI,EAAG,CAAErQ,EAAGid,EAAIzX,EAAG4X,KAC3E,OADA,UACoB,CAAEpd,EAAGgd,EAAIxX,EAAG2X,GACzB,CAAEnd,EAAGid,EAAIzX,EAAG4X,IAEvBC,MAlCkB,SAkCZL,EAAIG,EAAIF,EAAIG,GACd,OAAQJ,EAAKC,IAAOE,EAAKC,IAG7BE,QAtCkB,SAsCVT,EAAGxM,EAAG/I,EAAGsV,GACb,MAAiB,CAAC,CAACC,EAAE7c,EAAIsH,EAAGuV,EAAErX,EAAIoX,GAAI,CAACC,EAAE7c,EAAIsH,EAAGuV,EAAErX,EAAIoX,IACjDne,KAAI,mCAAEuB,EAAF,KAAKwF,EAAL,YAAcqX,EAAE7c,EAAIA,IAAMqQ,EAAE7K,EAAIA,IAAMqX,EAAErX,EAAIA,IAAM6K,EAAErQ,EAAIA,GAAM,KADvE,mBAAOud,EAAP,KAAWC,EAAX,KAEA,OAAID,IAAOC,EAAW,EACjBD,GAAOC,GACPD,GAAMC,EAAW,EAClBD,GAAMC,EAAW,GACb,EAHe,GAM3BC,eAhDkB,SAgDHZ,EAAGxM,EAAG/I,EAAGsV,GACpB,MAAexX,KAAKkX,MAAMjM,EAAGwM,GAA7B,mBAAOJ,EAAP,KAAUzP,EAAV,KACI8P,EAAI,CACJ,CAACD,EAAE7c,EAAIsH,EAAGuV,EAAErX,GACZ,CAACqX,EAAE7c,EAAG6c,EAAErX,EAAIoX,GACZ,CAACC,EAAE7c,EAAIsH,EAAGuV,EAAErX,GACZ,CAACqX,EAAE7c,EAAG6c,EAAErX,EAAIoX,IAEZhgB,KAAK8gB,IAAIjB,KAAOkB,MAChBb,EAAI,CACA,CAACD,EAAE7c,EAAIsH,EAAGmV,GAAKI,EAAE7c,EAAIsH,GAAK0F,GAC1B,EAAE6P,EAAErX,EAAIoX,EAAI5P,GAAKyP,EAAGI,EAAErX,EAAIoX,GAC1B,CAACC,EAAE7c,EAAIsH,EAAGmV,GAAKI,EAAE7c,EAAIsH,GAAK0F,GAC1B,EAAE6P,EAAErX,EAAIoX,EAAI5P,GAAKyP,EAAGI,EAAErX,EAAIoX,KAGlC,kBAAeE,EAAE1X,KAAKkY,QAAQT,EAAGxM,EAAG/I,EAAGsV,IAAvC,GACA,MAAO,CAAE5c,EADT,KACYwF,EADZ,OAGJ2J,IAnEkB,SAmEd0N,EAAGxM,EAAG/I,EAAGsV,EAAGlf,GACZ,MAAa,cAATA,EAA6B2e,GAAcoB,eAAeZ,EAAGxM,EAAG/I,EAAGsV,GAChEP,GAAca,kBAAkBL,EAAGxM,EAAG/I,EAAGsV,KAKzCP,MAAf,ICxEeuB,G,oKCIX,WACI,uEACAxY,KAAKC,GAAGsF,GAAG,kBAAmB,sBAAsB,SAACgD,GACjDA,EAAI5P,OAAO4K,iBAAiBkV,eAAe,wBAAwB1Z,SAAQ,SAAC2Z,GACxEA,EAASnY,SAASoY,EAAcC,eAAeF,UAGvD1Y,KAAKC,GAAGsF,GAAG,WAAW,SAACgD,GACnB,IAAMmQ,EAAWnQ,EAAI5P,OAAO4J,SAC5BmW,EAASnY,SAASoY,EAAcC,eAAeF,S,yBA0BvD,SAAYG,GACR,OAAO7Y,KAAKoB,QAAQyX,GAAYC,WAAW3Z,OAAO,QAAQ,K,yBAG9D,SAAYuZ,GAER,OADAA,EAASK,cACF/Y,O,iCAGX,SAAoBoC,EAAU3B,GAC1B,IAAMiY,EAAW1Y,KAAKoB,QAAQgB,EAASlB,UACjC8X,EAAE,0FACD5W,GADC,IAEJtK,MAAO4gB,EAASriB,KAAK,aACrBqB,MAAOghB,EAASriB,KAAK,eACtBoK,GAEH,OADAiY,EAASnY,SAASoY,EAAcC,eAAeF,IACxCM,I,oCAGX,SAAuB5W,EAAU3B,GAC7B,IAAQS,EAA8BkB,EAA9BlB,SAAUC,EAAoBiB,EAApBjB,SAAUzJ,EAAU0K,EAAV1K,MAC5B,EAAiC,CAACwJ,EAAUC,GAAU9H,IAAI2G,KAAKoB,QAAQyN,KAAK7O,OAA5E,mBAAOiZ,EAAP,KAAmBC,EAAnB,KACMC,EAAkBF,EAAW5iB,KAAK,SAClC+iB,EAAcC,GAChBJ,EAAW1Y,WACX2Y,EAAW3Y,WACX4Y,EAAgB5hB,MAAQ,EACxB4hB,EAAgBlhB,OAAS,EACzBkhB,EAAgBhhB,OAEdugB,EAAQ,+DAAiB,GAAI,CAAE1c,gBAAiBtE,EAAMsE,iBACxD,UAAWod,EAAa,CAAExW,UAAWR,EAAStK,MAAO+K,UAAWnL,QAASsN,EAAWvE,GAYxF,OAXAiY,EAASY,YACT,+DAAc,CACVpY,WACAC,SAAUuX,EAAS1f,KACnBtB,MAAM,2BACCA,GADF,IAED,qBAAsB,SAE1BY,KAAM,WACPmI,GACHT,KAAKuZ,YAAYb,EAAUO,GACpBjZ,KAAKwZ,oBAAL,2BAA8BpX,GAA9B,IAAwClB,SAAUwX,EAAS1f,OAAQyH,K,2BAG9E,SAAczH,EAAIoJ,EAAU3B,GACxBT,KAAKY,UACD,CAAEC,WAAYC,KAAG0B,SAAUxB,WAAY,CAAChI,IACxC,CACI6H,WAAYC,KAAG2B,SACfzB,WAAY,CAAC,2BAAKoB,GAAN,IAAgBlB,SAAUlB,KAAK0E,gBAAgBtC,EAASlB,UAAWlI,SAEnFyH,K,qBAIR,SAAQ2B,GAAiC,IAMjCV,EANgC,OAAtB+X,EAAsB,uDAAfzZ,KAAKF,SACpBW,EAAM,EACJS,EAA8BkB,EAA9BlB,SAAUC,EAAoBiB,EAApBjB,SAAUrJ,EAAUsK,EAAVtK,MAC5B,EAAiC,CAACoJ,EAAUC,GAAU9H,IAAI2G,KAAKoB,QAAQyN,KAAK7O,OAA5E,mBAAOiZ,EAAP,KAAmBC,EAAnB,KACMQ,EAAYT,EAAWU,SAAS,QAAQxa,QAAO,SAACxI,GAAD,OAAUmB,GAASnB,EAAKN,KAAK,eAAiByB,KAGnG,MAAgC,UAA5BohB,EAAW7iB,KAAK,UACY,YAA5B4iB,EAAW5iB,KAAK,QAAuBqL,EAAO1B,KAAKwZ,oBAAoBpX,EAAU3B,GAC5EiZ,EAAUxa,OAAQwC,EAAO1B,KAAKwZ,oBAAL,2BAA8BpX,GAA9B,IAAwClB,SAAUwY,EAAU,GAAG1gB,OAAQyH,GAChG3I,GAASA,EAAMoH,OAAQwC,EAAO1B,KAAK4Z,uBAAuBxX,EAAU3B,GAEzET,KAAK2C,WAAW,CACZrK,KAAMmG,IAAEjK,uBACRkI,GAAI,SAACkG,EAAWC,GACZ,IAAMC,EAAU,EAAKC,cAAcH,EAAWC,EAAW3B,EAAUC,EAAU,KAAM,OAGnF,OAFI2B,EAAQE,KAAItB,EAAO,EAAKmG,QAAL,2BAAkBzF,GAAlB,IAA4BtK,MAAO8K,EAAWlL,MAAOmL,IAAapC,IACrFiB,GAAM,EAAKmY,cAAcnY,EAAK1I,KAAxB,2BAAmCoJ,GAAnC,IAA6CtK,MAAO8K,EAAWlL,MAAOmL,IAAa4W,GACtF3W,KAIfpB,GAAM1B,KAAK6Z,cAAcnY,EAAK1I,KAAMoJ,EAAUqX,IAfF/X,I,wBAmBpD,SAAW1I,EAAItB,EAAOI,EAAOmL,GAAyC,IAAD,OAArBxC,EAAqB,uDAAfT,KAAKF,SACvDE,KAAKY,UACD,CACIC,WAAYC,KAAGsC,YACfpC,WAAY,CAAChI,EAAIgH,KAAKmD,SAASnK,GAAKgH,KAAKoB,QAAQpI,GAAI3C,KAAK,SAAU4M,IAExE,CAAEpC,WAAYC,KAAGsC,YAAapC,WAAY,CAAChI,EAAItB,EAAOI,EAAOmL,IAC7DxC,GAEJ,IAAMqZ,EAAe9Z,KAAKoB,QAAQpI,GAAIuJ,SAClCU,GAAmBjD,KAAK6Q,WAAWiJ,EAAazjB,KAAK,MAAO,YAAayB,EAAO,GACpFkI,KAAK6Q,WAAWiJ,EAAazjB,KAAK,MAAO,YAAaqB,EAAO,GAC7DsI,KAAK6M,WAAWiN,EAAazjB,KAAK,MAAO,CAAE2F,gBAAiBtE,EAAMsE,iBAAmB,IAAI,EAAO,GAEhG8d,EACKH,SAAS,QACT5a,SAAQ,SAAC2C,GAAD,mBAAC,gDAA0BA,EAAKrL,KAAK,MAAOqB,EAAOI,EAAOmL,EAAmB,Q,wBAG9F,SAAWjK,GAA0B,IAAD,OAArByH,EAAqB,uDAAfT,KAAKF,SAChBiG,EAAK/F,KAAKoB,QAAQpI,GACxB,GAAI+M,EAAGlC,SAAU,CACb,GAAIkC,EAAGpC,UAAW,OAClBoC,EAAG4T,SAAS,wBACPpW,eAAe,sBACfxE,SAAQ,SAAC2C,GAAD,OAAU,EAAKsE,WAAWtE,EAAK1I,KAAMyH,MAClDsF,EAAGxC,eAAe,sBACbxE,SAAQ,SAAC2C,GAAD,OAAU,EAAKsE,WAAWtE,EAAK1I,KAAMyH,MAElD,IAAM9J,EAAOqJ,KAAKoB,QAAQpI,GAC1BgH,KAAKY,UACD,CACIC,WAAYC,KAAGG,SACfD,WAAY,CACRrK,EAAKN,KAAK,SAAU2J,KAAKmD,SAASxM,EAAKqC,MAAOrC,EAAKN,KAAK,QACxDM,EAAK4J,WAAY5J,EAAK8M,OAAOpN,KAAM2C,IAG3C,CAAE6H,WAAYC,KAAGC,SAAUC,WAAY,CAAChI,IAAOyH,GAEnD,kEAAiBzH,EAAI,OAClB,CACH,IAAKgH,KAAKoB,QAAQpI,GAAIkG,QAAU6G,EAAGpC,UAAW,OAC9C,IAAMC,EAAS5D,KAAKoB,QAAQpI,GAAIyK,OAAOpN,KACvC2J,KAAKY,UACD,CACIC,WAAYC,KAAG2B,SACfzB,WAAY,CAAC,2BACN4C,GADK,IACG1C,SAAUlB,KAAK0E,gBAAgBd,EAAOrB,QAASpB,SAAUyC,EAAOjL,WAGnF,CAAEkI,WAAYC,KAAG0B,SAAUxB,WAAY,CAAChI,IAAOyH,GAEnD,IAAMqZ,EAAe/T,EAAGxD,SACxB,kEAAiBvJ,EAAI,GACjB8gB,GAAqD,IAAnCA,EAAaH,WAAWza,QAAcc,KAAK8D,WAAWgW,EAAa9gB,KAAM,M,6BAIvG,SAAgBsc,GACZ,MAA0C,UAAtCtV,KAAKoB,QAAQkU,GAAQjf,KAAK,SACuB,IAAjD2J,KAAKoB,QAAQkU,GAAQwD,SAAS,QAAQ5Z,OADgBoW,EAEnDtV,KAAKoB,QAAQkU,GAAQwD,SAAS,QAAQ,GAAG9f,O,kCAGpD,SAAqB+gB,EAAIC,GAAK,IAAD,OACzB,EAAiB,CAACD,EAAIC,GACjB3gB,KAAI,SAAC4gB,GAAD,OAAO,EAAK7Y,QAAQ,EAAKsD,gBAAgBuV,OAC7C5gB,KAAI,SAACqZ,GAAD,OAAOA,EAAEiH,SAAS,wBAAwBO,MAAMxH,MAFzD,mBAAOyH,EAAP,KAAWC,EAAX,KAGA,OAAOD,EAAG9Y,UAAU+Y,K,2BAGxB,WAAiB,IAAD,OACNrV,EAAQ/E,KAAKC,GAAGC,EAAE,sBAAsB7G,KAAI,SAAC1C,GAAD,MAAW,CACzDmB,MAAOnB,EAAKN,KAAK,SACjBqB,MAAOf,EAAKN,KAAK,SACjB2C,GAAIrC,EAAKN,KAAK,UAEZiL,EAAQ,GAad,OAZAtB,KAAKC,GAAGC,EAAE,sBAAsBnB,SAAQ,SAAC2C,GACrC,IAAM5J,EAAQ4J,EAAKrL,KAAK,SAClBoO,EAAc,EAAKrD,QAAQ,EAAKsD,gBAAgBhD,EAAKa,SAASvJ,OAAO3C,KAAK,SAC1EsO,EAAcjD,EAAK/I,SAAStC,KAAK,SACjCqB,EAAQgK,EAAKrL,KAAK,SAClB2C,EAAK0I,EAAKrL,KAAK,MAChBiL,EAAMxJ,GAIJwJ,EAAMxJ,GAAO6M,YAAYoN,KAAKpN,GAHjCrD,EAAMxJ,GAAS,CACX6M,YAAa,CAACA,GAAcF,cAAazL,KAAIlB,QAAOJ,YAIzD,CAACqN,EAAO0N,OAAO4H,OAAO/Y,O,6BArMjC,SAAsBoX,GAClB,IAAM4B,EAAU5B,EAASI,SAAS,QAAQ,GACpCyB,EAAkB,CAAE3f,EAAG,EAAGwF,EAAG,GAC7Boa,EAAW,IAAI/Y,IAQrB,OAPAiX,EAASiB,SAAS,sBACb5a,SAAQ,SAAC2C,GAAD,OAAU8Y,EAAS9Z,IAAIvH,KAAKsQ,UAAUkP,EAAcjQ,iBAAiBhH,QAClF8Y,EAASzb,SAAQ,SAAC0b,GACd,IAAM1W,EAAM5K,KAAKC,MAAMqhB,GACvBF,EAAgB3f,GAAKmJ,EAAInJ,EACzB2f,EAAgBna,GAAK2D,EAAI3D,KAEP,IAAlBoa,EAASzf,KAAmB2d,EAASnY,YACzCga,EAAgB3f,GAAK4f,EAASzf,KAC9Bwf,EAAgBna,GAAKoa,EAASzf,KACvBse,GACHiB,EAAQ/Z,WAAYga,EACpBD,EAAQjkB,KAAK,SAASkB,MAAQ,EAC9B+iB,EAAQjkB,KAAK,SAAS4B,OAAS,EAC/BqiB,EAAQjkB,KAAK,SAAS8B,Y,GAhCNsQ,ICyDbiS,OAxDf,YAEI,IADA3U,EACD,EADCA,GAAII,EACL,EADKA,WAAYxD,EACjB,EADiBA,WAAY1E,EAC7B,EAD6BA,QAASC,EACtC,EADsCA,SAAUC,EAChD,EADgDA,QAASH,EACzD,EADyDA,YAAa2c,EACtE,EADsEA,kBAAmBC,EACzF,EADyFA,OAAQC,EACjG,EADiGA,OAEhG,EAAgC9jB,mBAAS,MAAzC,mBAAOsH,EAAP,KAAiByc,EAAjB,KACM1iB,EAAM2iB,mBACNC,EAAkB,SAAC9U,GACrB,IAAM+U,EAAU/U,EAChB+U,EAAQvjB,MAAMH,MAAd,UAAyBojB,EAAkB/iB,QAAQC,YAAc,EAAjE,MACAojB,EAAQvjB,MAAMO,OAAd,UAA0B0iB,EAAkB/iB,QAAQsjB,aAAe,EAAnE,OAgBJ7jB,qBAAU,WACFujB,GAAUC,GAAU3c,EACpB2H,OAAOsV,QAAQC,UAAU,KAAM,KAAMC,IAAKC,KAAKC,kBAAwB,IAAKrd,IACrE0c,GAAUC,GAAU5c,GAC3B4H,OAAOsV,QAAQC,UAAU,KAAM,KAAMC,IAAKC,KAAKC,kBAAwB,IAAKtd,MAEjF,CAAC2c,EAAQ1c,EAAU2c,EAAQ5c,IAC9B5G,qBAAU,kBAAMgH,GAAYA,EAASmd,IAAI,CAAErV,iBAAe,CAAC9H,EAAU8H,IACrE9O,qBAAU,kBAAMujB,GAAUvc,GAAYA,EAASod,iBAAgB,CAACb,GAAUvc,IAC1EhH,qBAAU,WACFujB,GAAUvc,GAAUsE,EAAW,CAAErK,KAAMmG,IAAE1I,iBAAkB4I,QAASN,MACzE,CAACuc,GAAUvc,IAEdhH,qBAAU,WACFe,EAAIR,UACJojB,EAAgB5iB,EAAIR,SACpBiO,OAAO6V,iBAAiB,UAAU,kBAAMV,EAAgB5iB,EAAIR,YAC5DkjB,EA9BmB,WACvB,IAAM9O,EAAU,IAAI2P,GAChB1d,EAAS7F,EAAIR,QAAS+K,EAAYwD,EAAYnI,ECnBvC,mkBAoBA,iTDQX,OAPIC,GAAS+N,EAAQ+K,4BACjB7Y,IACA8N,EAAQwP,IAAI,CAAEtd,aACd8N,EAAQ4P,uBAERzd,GAAS6N,EAAQ6P,WAAW1d,GAChC6N,EAAQyP,eACDzP,EAmBS8P,OAEjB,CAAC1jB,IAEJ,IAAQY,EAAO+M,EAAP/M,GAER,OACI,qBACItB,MAAO,CAAEqkB,OAAQ,EAAGrhB,QAASkgB,EAAS,QAAU,QAEhD7iB,UAAU,gBACVK,IAAKA,GAFAY,IE4BFgjB,GA3EG,SAACrL,GACf,IAAMgK,EAAoB5gB,IAAMghB,SACxBpY,EAA2BgO,EAA3BhO,WAAYwD,EAAewK,EAAfxK,WACpB,EAAkDpM,IAAMhD,UAAS,GAAjE,mBAAOklB,EAAP,KAA0BC,EAA1B,KACA,EAA0CniB,IAAMhD,UAAS,GAAzD,mBAAOolB,EAAP,KAAsBC,EAAtB,KAsCA,OApCA/kB,qBAAU,WACN,IAAMglB,EAAapjB,IAAoBqR,eAAejR,KAAI,SAAC4E,GAAD,MAAc,CACpEA,cAEJ0E,EAAW,CACPrK,KAAMmG,IAAEpJ,eACRsJ,QAAS0d,IAEbH,GAAqB,KACtB,IAEH7kB,qBAAU,WACN,GAAK4kB,EAAL,CACA,IAAMK,EAAkB7J,OAAO8J,YAAY,IAAIC,gBAAgB3W,OAAO4W,SAASC,QAAQC,WAAW3d,EAClG,GAAIsd,EAAiB,CACjB,IAAMrS,EAAe9Q,KAAKC,MAAMyM,OAAO6D,KAAK4S,IACtCM,GAAM,IAAI/d,MAAOC,UAAUtF,WACjCP,IAAoBsR,WAAWqS,GAC/B3jB,IAAoB+Q,KAAK4S,EAAK3S,GAC9BpE,OAAOsV,QAAQ0B,aAAa,GAAInO,SAAS/R,MAAOkJ,OAAO4W,SAASK,UAChEna,EAAW,CAAErK,KAAMmG,IAAErJ,UAAWuJ,QAAS,CAAEV,QAAS2e,KAExD,IAAMG,EAAWlX,OAAO4W,SAASK,SAASrP,MAAM,KAC1CuP,EAAgBD,EAAS5Y,QAAQ,KACjC8Y,EAAeF,EAAS5Y,QAAQ,KACtC,IAAuB,IAAnB6Y,GAAwBA,EAAgB,EAAID,EAAS7d,OAAQ,CAC7D,IAAMhB,EAAW6e,EAASC,EAAgB,GAC1Cra,EAAW,CAAErK,KAAMmG,IAAErJ,UAAWuJ,QAAS,CAAET,cAE/C,IAAsB,IAAlB+e,GAAuBA,EAAe,EAAIF,EAAS7d,OAAQ,CAC3D,IAAMjB,EAAU8e,EAASE,EAAe,GACxCta,EAAW,CAAErK,KAAMmG,IAAErJ,UAAWuJ,QAAS,CAAEV,aAE/Cme,GAAiB,MAClB,CAACH,IAGA,sBACIvkB,MAAO,CACHwlB,KAAM,EACNC,cAAe,SACfziB,QAAS,OACTnD,MAAO,QALf,UAQI,cAAC,EAAD,CAAQ4O,WAAYA,EAAYxD,WAAYA,IAC5C,sBAAKjL,MAAO,CAAEwlB,KAAM,EAAGziB,WAAY,SAAW1C,UAAU,kBAAkBK,IAAKuiB,EAA/E,UACKxU,EAAW3I,OAAOnE,KAAI,SAAC0M,EAAI9G,GAAL,OACnB,cAAC,GAAD,CACI8G,GAAIA,EACJ9G,EAAGA,EACHkH,WAAYA,EACZwU,kBAAmBA,EACnBhY,WAAYA,EAEZiY,OAAQ3b,IAAMkH,EAAW1I,cACzBQ,QAAS8H,EAAG9H,QACZC,SAAU6H,EAAG7H,SACbC,QAAS4H,EAAG5H,QACZH,YAAa+H,EAAG/H,YAChB6c,OAAQsB,GANHpW,EAAG9H,YAShB,cAAC,EAAD,CAAU0E,WAAYA,EAAYwD,WAAYA,W,qCC1E9DiX,KAAWC,cAAc,SAEzB,IAgDeC,GAhDD,SAAC,GAER,IADHC,EACE,EADFA,WAAY/gB,EACV,EADUA,UAAWG,EACrB,EADqBA,MAAO6gB,EAC5B,EAD4BA,SAE9B,EAAgCzmB,mBAAS,IAAzC,mBAAO0mB,EAAP,KAAiBC,EAAjB,KACA,EAA4B3mB,mBAASyF,GAArC,mBAAOmhB,EAAP,KAAeC,EAAf,KACA,EAAwB7mB,mBAAS,MAAjC,mBAAO8mB,EAAP,KAAaC,EAAb,KAmBA,OAlBAzmB,qBAAU,YACY,IAAdmF,GACAohB,GAAU,GACVF,EAAY,WACZhH,aAAamH,GACbC,EAAQnH,YAAW,WACfiH,GAAU,GACVF,EAAY,MACb,OAEHA,EAAY,WACZhH,aAAamH,GACbC,EAAQnH,YAAW,WACfiH,GAAU,KACX,SAER,CAACphB,IAECmhB,EAED,cAAC,KAAD,CACIA,OAAQA,EACRI,aAAa,yBACbC,eAAgBT,EAChBxlB,UAAU,QACVkmB,iBAAgB,kBAAaR,GALjC,SAOI,sBAAK1lB,UAAS,wBAAmB0lB,GAAjC,UACI,sBAAK1lB,UAAU,eAAf,UACI,qBAAKA,UAAU,iBAAf,SAAiC4E,IACjC,yBAAQrE,KAAK,SAASP,UAAU,QAAQuC,QAASijB,EAAjD,UACKA,EAAa,sBAAMW,cAAY,OAAlB,kBAAoC,GAClD,sBAAMnmB,UAAU,UAAhB,yBAGR,qBAAKA,UAAU,aAAf,SACKylB,SAlBG,ICeTW,GAzCG,SAAC,GAAgC,IAA9BZ,EAA6B,EAA7BA,WAAYpX,EAAiB,EAAjBA,WAC7B,EAAwBpP,mBAAS,IAAjC,mBAAOV,EAAP,KAAaC,EAAb,KACA,EAAwCS,mBAAS,IAAjD,mBAAOqnB,EAAP,KAAqBC,EAArB,KACQ5hB,EAA4B0J,EAA5B1J,aAAcD,EAAc2J,EAAd3J,UAElBE,EACAD,EADAC,GAAIC,EACJF,EADIE,MAAOC,EACXH,EADWG,WAAYC,EACvBJ,EADuBI,SAAUC,EACjCL,EADiCK,aAAcC,EAC/CN,EAD+CM,aAAcvG,EAC7DiG,EAD6DjG,aAGjEa,qBAAU,WACNgnB,EAAgB,MACjB,CAAC7hB,IAEJnF,qBAAU,WACNf,EAAQ,CAAEwB,MAAOiF,GAAgB,GAAIrF,MAAOoF,IAC5CuhB,EAAgB,MACjB,CAACthB,EAAcD,IAYlB,OACI,cAACwhB,GAAD,CAAaf,WAAYA,EAAY/gB,UAAWA,EAAWG,MAAOA,EAAlE,SACI,uBAAM3E,SAZC,SAACU,GACZA,EAAE+V,iBACF,IAAM3L,EAAUpG,EAAGrG,EAAKyB,MAAOzB,EAAKqB,OAChCoL,EAAQE,IACRqb,EAAgB,IAChB/nB,EAAQ,CAAEwB,MAAOiF,GAAgB,GAAIrF,MAAOoF,IAC5CygB,KACGc,EAAgBvb,EAAQmC,MAK3B,UACI,sBAAKlN,UAAU,qBAAf,UACI,cAAC8E,EAAD,CAAUxG,KAAMA,EAAMC,QAASA,EAASE,aAAcA,IACrD4nB,EAAe,qBAAKrmB,UAAU,MAAf,SAAsBqmB,IAAsB,gCAEhE,qBAAKrmB,UAAU,eAAf,SACI,wBAAQO,KAAK,SAASP,UAAU,kBAAhC,SAAmD6E,Y,SCsHxD2hB,GA7IK,SAAChgB,GAAD,MAAW,CAC3B,CACIjG,KAAM,SACNkmB,KAAM,OACNC,KAAMC,KACNlgB,OAAQ+N,EACRqO,QAAQ,EACR+D,OAAQ,UAEZ,CAAErmB,KAAM,QACR,CACIA,KAAM,cACNkmB,KAAM,OACNC,KAAMG,KACNpgB,OAAQ6O,EACRuN,QAAQ,EACR+D,OAAQ,UAEZ,CACIrmB,KAAM,OACNkmB,KAAM,OACNC,KAAMI,KACNrgB,OAAQ,SAACxD,EAAG4G,GAAJ,MAAU,CACd,CAAEkd,GAAI,kBAAMvgB,EAAMV,kBAAoBU,EAAMV,iBAAiBkhB,gBAAgBrjB,KAAM,kBACnF,CAAEojB,GAAI,kBAAM5R,EAAWlS,IAAOU,KAAM,QACpC,CAAEojB,GAAI,kBAAM5R,EAAWlS,EAAG4G,EAAGod,OAAO,gBAAgBtjB,KAAM,aAI9Dkf,QAAQ,GAEZ,CACItiB,KAAM,SACNkmB,KAAM,QACNC,KAAMQ,KACNzgB,OAAQuP,EACR6M,QAAQ,EACR+D,OAAQ,kBAEZ,CAAErmB,KAAM,QACR,CACIA,KAAM,SACNkmB,KAAM,OACNC,KAAMS,KACN1gB,OAAQwP,EACR4M,OAAQrc,EAAMjB,YACdqhB,OAAQ,UAEZ,CACIrmB,KAAM,SACNkmB,KAAM,OACNC,KAAMU,KACN3gB,OAAQyP,EACR2M,OAAQrc,EAAMhB,YACdohB,OAAQ,uBAEZ,CAAErmB,KAAM,QACR,CACIA,KAAM,SACNkmB,KAAM,OACNC,KAAMW,KACN5gB,OAAQmO,EACRiO,OAASrc,EAAMnB,aAAiD,QAAlCmB,EAAMG,mBAAmBpG,KACvDqmB,OAAQ,UAEZ,CACIrmB,KAAM,SACNkmB,KAAM,SACNC,KAAMY,KACN7gB,OAAQwH,EACR4U,OAAQrc,EAAMnB,YACduhB,OAAQ,8BAEZ,CAAErmB,KAAM,QACR,CACIA,KAAM,SACNkmB,KAAM,UACNC,KAAMa,KACN9gB,OAAQd,EACRkd,QAAQ,GAEZ,CAAEtiB,KAAM,QA+BR,CAAEA,KAAM,SASR,CACIA,KAAM,SACNkmB,KAAM,QACNC,KAAMc,KACN/gB,OAAQ0P,EACR0M,QAAQ,GAEZ,CACItiB,KAAM,OACNkmB,KAAM,SACNC,KAAMe,KACNhhB,OAAQ,SAACxD,EAAG4G,GAAJ,MAAU,CACd,CAAEkd,GAAI,kBAAM9R,EAAYhS,EAAG4G,EAAG,QAAQlG,KAAM,OAC5C,CAAEojB,GAAI,kBAAM9R,EAAYhS,EAAG4G,EAAG,QAAQlG,KAAM,SAEhDkf,QAAQ,GAEZ,CAAEtiB,KAAM,U,mCCtJZ,SAASmnB,GAAT,GAEI,IADAC,EACD,EADCA,KAAMlB,EACP,EADOA,KAAMhgB,EACb,EADaA,OAAQoc,EACrB,EADqBA,OAAQvgB,EAC7B,EAD6BA,SAAUskB,EACvC,EADuCA,OAEtC,OACI,cAAC,KAAD,CAAMgB,WACF,cAAC,KAAD,UACI,cAAC,GAAD,CACID,OAAMlB,OAAMhgB,SAAQoc,SAAQvgB,WAAUskB,aAHlD,SASKngB,IAASnF,KAAI,gBAAGylB,EAAH,EAAGA,GAAIpjB,EAAP,EAAOA,KAAP,OAAkB,cAAC,KAAD,CAAUpB,QAASwkB,EAAnB,SAAmCpjB,GAAPA,QAKxE,IAAMkkB,GAAe,SAAC,GAAD,IACjBF,EADiB,EACjBA,KAAMlB,EADW,EACXA,KAAM5D,EADK,EACLA,OAAQvgB,EADH,EACGA,SAAUskB,EADb,EACaA,OAAQxY,EADrB,EACqBA,WADrB,OAGjB,cAAC,GAAD,CACIuZ,OAAMlB,OAAM5D,SAAQvgB,WAAUmE,OAAQ,kBAAM2H,EAAW9G,QAAQzH,QAAQ+W,SAASgQ,YAKlFkB,GAAW,SAAC,GAAD,IACbrB,EADa,EACbA,KAAMhgB,EADO,EACPA,OAAQoc,EADD,EACCA,OAAQvgB,EADT,EACSA,SADT,OAGb,sBACID,KAAK,SACLC,SAAUA,EACVtC,UAAS,eAAU6iB,EAAS,SAAW,IACvCtgB,QAASkE,EACTjE,UAAW,SAACC,GAAD,MAAmB,MAAXA,EAAGjB,KAAeiF,KALzC,UAOI,cAAC,KAAD,CACI/F,SAAU+F,EACV5C,QAASgf,EACT7iB,UAAU,iBAEd,8BACKymB,QAKPsB,GAAe,SAAC,GAAD,IACjBJ,EADiB,EACjBA,KAAMlB,EADW,EACXA,KAAMhgB,EADK,EACLA,OAAQoc,EADH,EACGA,OAAQvgB,EADX,EACWA,SAAUskB,EADrB,EACqBA,OADrB,OAGjB,sBACIvkB,KAAK,SACLpB,GAAE,iBAAYqB,GACdA,SAAUA,EACVtC,UAAS,eAAU6iB,EAAS,SAAW,IACvCtgB,QAAS,kBAAOsgB,GAAUpc,KAC1BjE,UAAW,SAACC,GAAD,OAAQogB,GAAqB,MAAXpgB,EAAGjB,KAAeiF,KAC/CsQ,WAAU6P,EAASA,EAAOlR,MAAM,KAAK,GAAK,GAP9C,UASI,qBAAK1V,UAAU,OAAf,SAAsB,cAAC2nB,EAAD,CAAM3kB,KAAK,SACjC,qBAAKrD,MAAO,CAAEqoB,SAAU,IAAxB,SAA+BvB,QAYjCwB,GAAO,kBAAM,qBAAKjoB,UAAU,cAC5BkoB,GAAO,kBAAM,qBAAKloB,UAAU,cAC5BmoB,GAAQ,kBAAM,qBAAKnoB,UAAU,WChCpBooB,I,cA3CO,WAClB,IAAM1pB,EAAWskB,mBACjB,EAAoChkB,oBAAS,GAA7C,mBAAOqpB,EAAP,KAAmBC,EAAnB,KACAhpB,qBAAU,WAAQZ,EAASmB,QAAQ0oB,SAAWF,IAAe,CAACA,IAC9D,IAAMG,EAAO,WACTF,GAAc,GACd5pB,EAASmB,QAAQhB,SAEfoT,EAAO,WACTqW,GAAc,IAElB,OACI,sBAAKtoB,UAAU,2BAAf,UACI,uBAAOA,UAAU,YAAYuoB,UAAQ,EAACloB,IAAK3B,IAEvC2pB,EAEQ,qBACIroB,UAAU,YACVqC,KAAK,SACLG,UAAWgmB,EACXjmB,QAASimB,EACTlmB,SAAU,EALd,SAOI,cAAC,IAAD,CAAQU,KAAK,SAIjB,qBACIhD,UAAU,YACVqC,KAAK,SACLG,UAAWyP,EACX1P,QAAS0P,EACT3P,SAAU,EALd,SAOI,cAAC,IAAD,CAAQU,KAAK,cCRnCylB,GAAS,SAAC,GAAgC,IAA9Bra,EAA6B,EAA7BA,WAAYxD,EAAiB,EAAjBA,WACpB8d,EAAUlC,GAAYpY,GAK5B,OAJApM,IAAM1C,WAAU,YArBD,SAACopB,GAChB,IAAI9N,EAAO,GACLtZ,EAAM,GACZonB,EAAQ1hB,SAAQ,SAACP,EAAQS,GACjBT,EAAOmgB,QACPngB,EAAOmgB,OAAOlR,MAAM,KAAK1O,SAAQ,SAACxF,GAC9B,CAACA,EAAKA,EAAImnB,QAAQ,OAAQ,YAAY3hB,SAAQ,SAAC8T,GAC3CF,GAAI,UAAOE,EAAP,KACJxZ,EAAIwZ,GAAKnE,SAAS5G,eAAT,iBAAkC7I,EAAI,aAK/DsP,YAAQoE,GAAM,SAACnE,EAAOmS,GAClBnS,EAAMC,iBACNpV,EAAIsnB,EAAQC,UAAUjS,WAOtBkS,CAAWJ,KACZ,IAGC,yBAAQ1oB,UAAU,SAAlB,UACI,yBAASA,UAAU,kBAAnB,SAEQoO,EAAWtI,iBAAX,UACIsI,EAAWtI,iBAAiBG,YADhC,qBAEsB,KAG9B,yBAASjG,UAAU,UAAnB,SAEQ0oB,EAAQpnB,KAAI,WAET4F,GAAO,IADNuf,EACK,EADLA,KAAM5D,EACD,EADCA,OAAQpc,EACT,EADSA,OAAQigB,EACjB,EADiBA,KAAMnmB,EACvB,EADuBA,KAEtBqY,EAAQ,CACV6N,OACA5D,SACAvgB,SAAU4E,EAAI,EACd1F,IAAKilB,EACLhgB,OAAQ,SAAC9F,GAAD,OAAO8F,EAAO2H,EAAYxD,EAAYjK,IAC9CgnB,KAAMjB,EACNE,OARC,EAD6BA,QAWlC,OAAQrmB,GACR,IAAK,OAAQ,OAAO,cAAC,GAAD,wBAAkB2G,KACtC,IAAK,QAAS,OAAO,cAAC,GAAD,wBAAmBA,KACxC,IAAK,SAAU,OAAO,cAAC,GAAD,eAAc0R,IACpC,IAAK,OAAQ,OAAO,cAAC8O,GAAD,eAAc9O,IAClC,IAAK,cAAe,OAAO,cAAC,GAAD,2BAAkBA,GAAlB,IAAyBxK,WAAYA,KAChE,IAAK,SAAU,OAAO,cAAC,GAAD,eAAkBwK,IACxC,IAAK,gBAAiB,OAAO,cAAC,GAAD,CAAexK,WAAYA,IACxD,QAAS,OAAO,mCAK5B,cAAC,GAAD,QC+CG2a,I,OAlHQ,SAAC,GAAgC,IAA9B3a,EAA6B,EAA7BA,WAAYxD,EAAiB,EAAjBA,WAC5Boe,EAAW5a,EAAW3I,OAAO2I,EAAW1I,eAC9C,EAAsC1G,mBAAS,IAA/C,mBAAOiH,EAAP,KAAoByY,EAApB,KACA,EAAoC1f,mBAAS,IAA7C,mBAAO4G,EAAP,KAAmBgN,EAAnB,KACA,EAAgC5T,mBAAS,IAAzC,mBAAOmH,EAAP,KAAiB2W,EAAjB,KACMpe,EAAWC,uBAAY,SAACC,GAAD,OAAUA,GAAQA,EAAKC,UAAS,IACvDuG,EAAgBgJ,EAAWhJ,eAA8C,IAA7BgJ,EAAW3I,OAAO0B,OAC9DhC,EAAmBiJ,EAAWjJ,kBAAqB6jB,IAAaA,EAAS/iB,YAEzEgjB,EAAoB,SAAC3c,GACvBsG,EAActG,GACd1B,EAAW,CACPrK,KAAMmG,IAAE5I,WACR8I,QAAS0F,KAIjBhN,qBAAU,WACF8O,EAAWjJ,kBAAoB6jB,EAC/BtK,EAAesK,EAAS/iB,aACrByY,EAAe,MACvB,CAACtQ,EAAWxI,WAAYwI,EAAWjJ,iBAAkB6jB,IACxD1pB,qBAAU,WACN,GAAI8O,EAAWxI,WAAYgN,EAAcxE,EAAWxI,gBAC/C,CACD,IAAMsjB,EAAchoB,IAAoByR,gBACxCsW,EAAkBC,MAEvB,IAEH,IAWMC,EAAe,WACjB/a,EAAW9G,QAAQzH,QAAQ+W,SAOzBwS,EAAiB,WACnBxe,EAAW,CAAErK,KAAMmG,IAAErJ,UAAWuJ,QAAS,CAAET,eAEzCkjB,EAAc,kBAChB,qCACI,qBAAKrpB,UAAU,YACf,uBACIS,YAAY,kCACZI,MAAOsF,EACPzF,SAAU,SAACC,GAAD,OAAOmc,EAAYnc,EAAEC,OAAOC,QACtCb,UAAU,iBAEd,wBACIO,KAAK,SACLP,UAAU,oBACVuC,QAAS6mB,EAHb,8BAQA,qBAAKppB,UAAU,YACf,wBACIO,KAAK,SACLP,UAAU,oBACVuC,QAAS4mB,EAHb,iDAWR,OACI,cAAC,GAAD,CACI1kB,UAAWW,GAAiBD,EAC5BqgB,WAAYpX,EAAWjJ,kBAAoBiJ,EAAWhJ,cAvC3C,WACXgJ,EAAWhJ,cAAewF,EAAW,CAAErK,KAAMmG,IAAEvI,oBAAqByI,SAAS,IACxEwH,EAAWjJ,kBAAkByF,EAAW,CAAErK,KAAMmG,IAAExI,uBAAwB0I,SAAS,KAqCL,KACnFhC,MAAM,kBAHV,SAKI,uBAAM5E,UAAU,eAAeC,SAzDxB,SAACU,GACZA,EAAE+V,iBACEtR,EAAewF,EAAW,CAAErK,KAAMmG,IAAErJ,UAAWuJ,QAAS,CAAEX,iBACrDd,IACLiJ,EAAWtI,iBAAiB4Y,eAAezY,GAC3C2E,EAAW,CAAErK,KAAMmG,IAAExI,uBAAwB0I,SAAS,KAE1DqiB,EAAkBrjB,GAClB1E,IAAoB0R,cAAchN,IAiD9B,UACI,iDACA,uBACIvF,IAAK3B,EACL+B,YAAY,oBACZD,UAAQ,EACRK,MAAOoF,EACPvF,SAAU,SAACC,GAAD,OAAO+d,EAAe/d,EAAEC,OAAOC,UAE7C,0CACA,uBACIJ,YAAY,qBACZI,MAAO+E,EACPlF,SAAU,SAACC,GAAD,OAAOiS,EAAcjS,EAAEC,OAAOC,QACxCL,UAAQ,IAEZ,qBAAKR,UAAU,SAAf,SACI,wBAAQO,KAAK,SAASP,UAAU,kBAAhC,oBAEJ,qBAAKA,UAAU,SAAf,SACKoF,GAAiB,cAACikB,EAAD,aCtEvBC,I,OAtCI,SAAC,GAAgC,IAA9Blb,EAA6B,EAA7BA,WAAYxD,EAAiB,EAAjBA,WAC9B,EAA8C5L,mBAAS,IAAvD,mBAAOuqB,EAAP,KAAwBC,EAAxB,KACA,EAAgCxqB,mBAAS,QAAzC,mBAAOyqB,EAAP,KAAiBC,EAAjB,KACMC,EAAOvb,EAAWnJ,YAAcmJ,EAAWtI,iBACjDxG,qBAAU,WACFqqB,IACAH,EAAmBpb,EAAWtI,iBAAiB8jB,kBAC/CF,EAAY,WAEjB,CAACC,IAEJ,IAGME,EAAI,UAAM/b,OAAO4W,SAASoF,SAAtB,aAAmChc,OAAO4W,SAASqF,MAAnD,OAA0Djc,OAAO4W,SAASK,SAA1E,cAAwFwE,GASlG,OACI,cAAC,GAAD,CACI9kB,UAAW2J,EAAWnJ,WACtBL,MAAM,iBACN4gB,WAhBW,WACf5a,EAAW,CAAErK,KAAMmG,IAAEhJ,gBAAiBkJ,SAAS,KAY/C,SAKI,sBAAK5G,UAAU,cAAf,UACI,uBAAOuoB,UAAQ,EAACvoB,UAAU,SAASa,MAAOgpB,IAC1C,wBAAQtnB,QAhBP,WACTynB,UAAUC,UAAUC,UAAUL,GAAM/K,MAAK,WACrC4K,EAAY,WACZ/S,SAASwT,uBAAuB,UAAU,GAAGtrB,QAC7C8X,SAASwT,uBAAuB,UAAU,GAAGC,aAYlB7pB,KAAK,SAASP,UAAU,UAA/C,SAA0DypB,WCoB3DY,I,cArDE,SAAC,GAEX,IAEcpnB,EAHjBqnB,EACE,EADFA,IAAKC,EACH,EADGA,KAAM1pB,EACT,EADSA,MAAOH,EAChB,EADgBA,SAAUR,EAC1B,EAD0BA,OAAQsqB,EAClC,EADkCA,UAE9B9rB,EAAWsD,IAAMjD,YAKvB,OACI,sBACIiB,UAAU,YACVuC,QAAS,kBAAM7D,EAASmB,QAAQhB,SAChC2D,UAAW,kBAAM9D,EAASmB,QAAQhB,SAClCwD,KAAK,UACLC,SAAU,EALd,UAOKkoB,EAEO,qBAAKxqB,UAAU,SAAf,UAdCiD,EAeYunB,EAfNvnB,EAAEyS,MAAM,MAAMpU,KAAI,SAACX,EAAGuG,GACzC,OAAIA,EAAI,EAAU,+BAAc,4BAAIvG,KAAPA,GACtB,+BAAeA,GAAJA,SAeN,wBACR,uBACC2pB,EAEO,0BACItqB,UAAU,eACVa,MAAOypB,EACP/B,UAAQ,EACRkC,WAAW,UAEf,wBACR,0BACIzqB,UAAU,gBACVyqB,WAAW,QACL5pB,QAAOH,WACbgqB,oBAAkB,QAClB/qB,MAAO,CAAEO,SAAQV,MAAO,QACxBa,IAAK3B,IAER6rB,EAEO,0BACIvqB,UAAU,gBACVuoB,UAAQ,EACR1nB,MAAO0pB,EACPE,WAAW,UAEf,6BCoBLE,GAhEO,SAAC,GAAgC,IAA9Bvc,EAA6B,EAA7BA,WAAYxD,EAAiB,EAAjBA,WACjC,EAA0C5L,mBAAS,IAAnD,mBAAO4I,EAAP,KAAsBgjB,EAAtB,KACA,EAA0C5rB,mBAAS,IAAnD,mBAAO6I,EAAP,KAAsBgjB,EAAtB,KACA,EAAwC7rB,mBAAS,IAAjD,mBAAOqnB,EAAP,KAAqBC,EAArB,KACAhnB,qBAAU,WACF8O,EAAWtI,mBACX8kB,EAAiBxc,EAAWtI,iBAAiBglB,oBAC7CD,EAAiBzc,EAAWtI,iBAAiBilB,uBAElD,CAAC3c,EAAWtI,mBAgBf,OACI,cAAC,GAAD,CACIrB,UAAW2J,EAAWlJ,cACtBsgB,WAjBM,kBAAM5a,EAAW,CAAErK,KAAMmG,IAAE/I,kBAAmBiJ,SAAS,KAkB7DhC,MAAM,WAHV,SAKI,sBAAK5E,UAAU,oBAAf,UACI,gCACI,gDACA,cAAC,GAAD,CACIsqB,IAAI,oDACJC,KAAK,IACL1pB,MAAO+G,EACPlH,SAAU,SAACC,GAAD,OAAOiqB,EAAiBjqB,EAAEC,OAAOC,QAC3CX,OAAQ,IACRsqB,UXbC,iXWgBT,gCACI,iDACA,cAAC,GAAD,CACIF,IAAI,oDACJC,KAAK,IACL1pB,MAAOgH,EACPnH,SAAU,SAACC,GAAD,OAAOkqB,EAAiBlqB,EAAEC,OAAOC,QAC3CX,OAAQ,IACRsqB,UXjBC,8ZWoBT,qBAAKxqB,UAAU,QAAf,SAAwBqmB,IAExB,qBAAKrmB,UAAU,SAAf,SACI,wBAAQO,KAAK,SAASP,UAAU,kBAAkBuC,QA7CnD,WACX,IACI6L,EAAWtI,iBAAiBgC,qBAAqB,CAC7CF,cAAc,gCAAD,OAAkCA,EAAlC,KACbC,cAAc,gCAAD,OAAkCA,EAAlC,OAEjB+C,EAAW,CAAErK,KAAMmG,IAAE/I,kBAAmBiJ,SAAS,IACjD0f,EAAgB,IAClB,MAAO3lB,GACL2lB,EAAgB3lB,EAAEoK,WAoCV,0BCELigB,I,OA5DH,SAAC,GAA+B,EAA7B5c,WAA8B,IAAlBxD,EAAiB,EAAjBA,WACjBtD,EAAUtF,IAAMghB,SAsCtB,OApCA1jB,qBAAU,WACNsL,EAAW,CAAErK,KAAMmG,IAAE9I,aAAcgJ,QAASU,IAC5C,IAAMqM,EAAIgD,SAASsU,qBAAqB,QAAQ,GAC1Cpb,EAAI8G,SAASwT,uBAAuB,kBAAkB,GACxDe,EAAK,EACTvX,EAAEgQ,iBAAiB,aAAa,SAAChjB,GAC7BA,EAAE+V,iBAES,KADXwU,GAAM,IACQrb,EAAEsb,UAAUxf,OAAO,aAErCgI,EAAEgQ,iBAAiB,aAAa,SAAChjB,GAC7BA,EAAE+V,iBAES,KADXwU,GAAM,IACQrb,EAAEsb,UAAUxiB,IAAI,aAGlCgL,EAAEgQ,iBAAiB,YAAY,SAAChjB,GAC5BA,EAAE+V,oBAEN,CAAC,UAAW,WAAY,QAAQ1P,SAAQ,SAACokB,GACrCzX,EAAEgQ,iBAAiByH,GAAW,SAACzqB,GAC3BA,EAAE+V,iBACFwU,EAAK,EACLrb,EAAEsb,UAAUxiB,IAAI,gBAIxBgL,EAAEgQ,iBAAiB,QAAQ,SAAChjB,GACxBA,EAAE+V,iBACFpP,EAAQzH,QAAQgB,MAAQ,KACY,IAAhCF,EAAE0qB,aAAaC,MAAMnkB,QACuC,YAAzDxG,EAAE0qB,aAAaC,MAAM,GAAG3nB,KAAK+R,MAAM,KAAK3U,OAAO,GAAG,IACrDuU,EAASlH,EAAYxD,EAAY,CAAEhK,OAAQD,EAAE0qB,oBAGtD,IAEC,qBAAKrrB,UAAU,wBAAf,SACI,sBAAKA,UAAU,QAAf,UACI,cAAC,KAAD,CAAcgD,KAAM,IAAKrD,MAAO,CAAEmC,MAAO,aACzC,gCACI,uBACIvB,KAAK,OACLF,IAAKiH,EACL/E,QAAS,SAAC5B,GAAQA,EAAEC,OAAOC,MAAQ,MACnClB,MAAO,CAAEgD,QAAS,QAClB4oB,OAAO,WACP7qB,SAAU,SAACC,GAAD,OAAO2U,EAASlH,EAAYxD,EAAYjK,MAEtD,sBAAMX,UAAU,QAAhB,oBACA,oBAAIA,UAAU,OAAd,sDCmHLwrB,I,OAvKM,SAAC,GAAgC,IAAD,EAA7Bpd,EAA6B,EAA7BA,WAAYxD,EAAiB,EAAjBA,WAChC,EAAgC5L,mBAAS,GAAzC,mBAAOysB,EAAP,KAAiBC,EAAjB,KACA,EAAsC1sB,mBAAS,IAA/C,mBAAO2sB,EAAP,KAAoBC,EAApB,KACA,EAAsC5sB,mBAAS,IAA/C,mBAAO6sB,EAAP,KAAoBC,EAApB,KACMpD,EAAU,CACZ3f,KAAGG,SAAUH,KAAG2B,SAChB3B,KAAGoC,YAAapC,KAAGsC,YACnBtC,KAAGC,SAAUD,KAAG0B,SAChB1B,KAAGiQ,QAASjQ,KAAGmQ,UAAWnQ,KAAGgQ,SAOjC,EAAwC/Z,mBALhB,WACpB,IAAM+sB,EAAM,GAEZ,OADArD,EAAQ1hB,SAAQ,SAACP,GAAaslB,EAAItlB,IAAU,KACrCslB,EAEsCC,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAiB,SAACtpB,GACpB,OAAIuL,EAAWtI,iBACJsI,EAAWtI,iBAAiBqmB,eAAetpB,GAE/C,IAEXvD,qBAAU,WACF8O,EAAWtI,mBACX8lB,EAAe,YACRxd,EAAWtI,iBAAiBoI,UAC1BnN,QAAQqrB,UAAU9qB,KAAI,SAACmF,EAAQS,GAAT,mBAAC,eAAoBT,GAArB,IAA6BS,WAE5DwkB,EACItd,EAAWtI,iBAAiBoI,UAAU/G,OACpCiH,EAAWtI,iBAAiBsT,mBAGvC,CAAChL,EAAWzI,YAAayI,EAAW3I,OAAQ2I,EAAWtI,iBAAkB2lB,IAE5E,IAkBMY,GAAmB,oBACpBtjB,KAAGG,SAAW,iBADM,eAEpBH,KAAG2B,SAAW,gBAFM,eAGpB3B,KAAGoC,YAAc,eAHG,eAIpBpC,KAAGsC,YAAc,eAJG,eAKpBtC,KAAGC,SAAW,gBALM,eAMpBD,KAAG0B,SAAW,gBANM,eAOpB1B,KAAGgQ,QAAU,iBAPO,eAQpBhQ,KAAGiQ,QAAU,uBARO,eASpBjQ,KAAGmQ,UAAY,YATK,GA2BnBoT,EAAY,SAAC5jB,EAAKsV,EAAKpY,EAAY2mB,EAAOtS,GAC5C,IAAMuS,EAAK,IAAI1lB,KAAK5D,SAASwF,EAAK,KAC5B+jB,EAAOD,EAAGE,qBACVC,EAAOH,EAAGI,qBAuBhB,OArBI,qCACI,6BAEQL,IAAUd,EAAW,YACjB,wBAAQzrB,UAAU,SAASO,KAAK,SAASgC,QAAS,kBAxBrD,SAACgqB,GAElB,GAAIze,OAAOC,QAAQ,+CAAgD,CAE/D,IADA,IAAI8e,EAAepB,EACZc,EAAQM,GACXze,EAAWtI,iBAAiBgnB,mBAC5BD,GAAgB,EAEpB,KAAON,EAAQM,GACXze,EAAWtI,iBAAiBinB,mBAC5BF,GAAgB,EAEpBnB,EAAYmB,IAY4DG,CAAaT,IAArE,yBAMZ,uCAAQE,EAAR,YAAgBE,KAChB,mCAEI,sCAAO/mB,KAFX,OAKA,oBAAIjG,MAAO,CAAEstB,WAAY,KAAzB,SAAiCjP,IACjC,oBAAIre,MAAO,CAAEstB,WAAY,KAAzB,SAAiChT,QAOvCwE,EAAc,SAAC,GAAD,IAChB7E,EADgB,EAChBA,WAAYlR,EADI,EACJA,IAAKxB,EADD,EACCA,EAAGtB,EADJ,EACIA,WAAYqU,EADhB,EACgBA,KADhB,OAEdqS,EACF5jB,EA7EoB,SAACkR,GACrB,IAAMsT,EAAMtT,EAAW3Q,WACvB,OAAQ2Q,EAAW9Q,YACnB,KAAKC,KAAGG,SAAU,MAAM,qBAAN,OAA4BgkB,EAAI,IAClD,KAAKnkB,KAAG2B,SAAU,MAAM,oBAAN,OACdyhB,EAAee,EAAI,GAAGjsB,IADR,oBAENkrB,EAAee,EAAI,GAAG/jB,UAFhB,gBAEiCgjB,EAAee,EAAI,GAAG9jB,WACzE,KAAKL,KAAGoC,YAAa,MAAM,2BAAN,OAAkCghB,EAAee,EAAI,IAArD,SACrB,KAAKnkB,KAAGsC,YAAa,MAAM,gBAAN,OAAuB8gB,EAAee,EAAI,KAC/D,KAAKnkB,KAAGC,SAAU,MAAM,iBAAN,OAAwBmjB,EAAee,EAAI,KAC7D,KAAKnkB,KAAG0B,SAAU,MAAM,iBAAN,OAAwB0hB,EAAee,EAAI,KAC7D,KAAKnkB,KAAGgQ,QAAS,MAAM,cAAN,OAAqBoT,EAAee,EAAI,IAAxC,cACjB,KAAKnkB,KAAGiQ,QAAS,MAAM,6BAAN,OAAoCmT,EAAee,EAAI,KACxE,KAAKnkB,KAAGmQ,UAAW,MAAM,+BAAN,OAAsCiT,EAAee,EAAI,KAC5E,QAAS,MAAO,IA+DXnP,CAAgBnE,GAAahU,EAAYsB,EAAG+S,IAGrD3a,qBAAU,WACNwsB,EAAeH,EAAYvkB,QAAO,SAACX,GAAD,OAAYwlB,EAAaxlB,EAAOmT,WAAW9Q,eAAaxH,IAAImd,MAC/F,CAACwN,EAAcN,IAGlB,OACI,cAAC,GAAD,CACIlnB,UAAW2J,EAAWzI,YACtB6f,WAJM,kBAAM5a,EAAW,CAAErK,KAAMmG,IAAE7I,kBAAmB+I,SAAS,KAK7DhC,MAAM,UAHV,SAKI,sBAAK5E,UAAU,iBAAf,UACI,qCACI,6CAEI0oB,EAAQpnB,KAAI,SAACmF,GAAD,OACR,wBAAO7C,QAAS6C,EAAQzG,UAAU,kBAAlC,UACI,uBACIO,KAAK,WACLoD,KAAK,SACLE,QAASooB,EAAaxlB,GACtB/F,SAAU,kBAAMwrB,EAAgB,2BACzBD,GADwB,mBAE1BxlB,GAAUwlB,EAAaxlB,SAG/B4lB,EAAoB5lB,KAVgCA,SAerE,qBAAKzG,UAAU,YAAf,SACI,uBAAOL,MAAO,CAAEwtB,cAAe,UAA/B,SACI,gCACKtB,EAAYvqB,KAAI,SAACme,EAAGvY,GAAJ,OACb,oBACIlH,UAAS,uBAAkBkH,IAAMukB,EAAW,SAAW,IAD3D,SAKKhM,GAFIvY,mB,qBC1B1BkmB,I,OA5HU,SAAC,GAA+B,EAA7Bhf,WAA8B,IAAlBxD,EAAiB,EAAjBA,WAC9BtD,EAAUtF,IAAMghB,SAEtB1jB,qBAAU,WACNsL,EAAW,CAAErK,KAAMmG,IAAE9I,aAAcgJ,QAASU,MAC7C,IAEH,MAAkCtI,mBAAS,IAA3C,mBAAOquB,EAAP,KAAkBC,EAAlB,KAyBAhuB,qBAAU,WAKNwO,OAAOyD,aAAaE,QAAQ,WAAYrQ,KAAKsQ,UAAU2b,MACxD,CAACA,IAoDJ,OACI,gCACI,uBACI9sB,KAAK,OACLF,IAAKiH,EACL/E,QAAS,SAAC5B,GAAQA,EAAEC,OAAOC,MAAQ,MACnCH,SAAU,SAACC,GACP2sB,GAAa,SAAC9mB,GACV,IAAK,IAAIU,EAAI,EAAGA,EAAIvG,EAAEC,OAAO0qB,MAAMnkB,OAAQD,GAAK,EAC5CV,EAAQA,EAAM+mB,OAAO,CAAC,CAClB/rB,IAAKb,EAAEC,OAAO0qB,MAAMpkB,GAAGvD,KACvB6pB,SAAU7sB,EAAEC,OAAO0qB,MAAMpkB,GAAGumB,iBAC5BzqB,KAAMrC,EAAEC,OAAO0qB,MAAMpkB,GAAGlE,KACxByE,QAAS9G,EAAEC,OAAO0qB,MAAMpkB,MAGhC,OAAOV,KAEXsH,OAAOyD,aAAaE,QAAQ,WAAYrQ,KAAKsQ,UAAU2b,KAE3DK,WAAS,EACTC,gBAAgB,SAEpB,cAAC,KAAD,CACIrC,MAAO+B,EACPO,aAhCa,SAACtvB,G/BOT,IAAQmW,EAAUc,E+BNY,YAAvCjX,EAAKmJ,QAAQ9D,KAAK+R,MAAM,KAAKC,MAAqBL,EAASlH,EAAYxD,EAAYtM,EAAKmJ,U/BMvEgN,E+BJQ7J,G/BIE2K,E+BJUjX,EAAKmJ,U/BM9CgN,EAAS,CACLlU,KAAMmG,IAAEtI,cACRwI,QAAS,CAAEY,MAAM,EAAMC,QAAS8N,O+BsB5BsY,eAAgB,kBAAM,a,8DCzDvBC,I,4BA5DO,SAAC,GAAgC,IAA9B1f,EAA6B,EAA7BA,WAAYxD,EAAiB,EAAjBA,WACjC,EAAkC5L,mBAAS,IAA3C,mBAAO+uB,EAAP,KAAkBC,EAAlB,KACA,EAAgChvB,mBAAS,IAAzC,mBAAOoW,EAAP,KAAiB6Y,EAAjB,KAFkD,8CAKlD,uBAAA3hB,EAAA,sDAOI1B,EAAW,CAAErK,KAAMmG,IAAEtI,cAAewI,QAAS,CAAEY,MAAM,KAPzD,4CALkD,sBA0BlD,OAXAlI,qBAAU,WACN,GAAI8O,EAAW3G,QAAS,CACpBwmB,EAAY7f,EAAW3G,QAAQ9D,MAC/B,IAAM6R,EAAK,IAAIC,WACfD,EAAGI,OAAS,SAAC/S,GACTmrB,EAAanrB,EAAEjC,OAAOiV,SAE1BL,EAAGM,WAAW1H,EAAW3G,YAE9B,CAAC2G,EAAW3G,UAGX,cAAC,GAAD,CACIhD,UAAW2J,EAAW7G,cACtBie,WA1BM,kBAAM5a,EAAW,CAAErK,KAAMmG,IAAEtI,cAAewI,QAAS,CAAEY,MAAM,MA2BjE5C,MAAOwQ,EAHX,SAKI,sBAAKpV,UAAU,sBAAf,UACI,qBACIL,MAAO,CACHuuB,UAAW,SAFnB,SAKI,cAAC,KAAD,CACIrtB,MAAOktB,EACPI,cAAe,SAACxtB,GAAD,OAAOqtB,EAAartB,IACnCytB,UAAW,SAACC,GAAD,OAAUD,qBAAUC,EAAMC,aAAUC,KAC/CjuB,QAAS,GACTX,MAAO,CACH6uB,WAAY,UACZxG,SAAU,GACVkG,UAAW,QACXO,SAAU,OACVC,OAAQ,uBAIpB,qBAAK1uB,UAAU,SAAf,SACI,wBAAQO,KAAK,SAASP,UAAU,kBAAkBuC,QArDhB,2CAqDlC,2BCpBLyoB,GA5BH,WACR,MAAiC2D,qBAAWpoB,IAAS/B,KAArD,mBAAO4J,EAAP,KAAmBxD,EAAnB,KACA,OACI,sBAAK5K,UAAU,YAAf,UACI,cAAC,GAAD,CAAgBoO,WAAYA,EAAYxD,WAAYA,IACpD,cAAC,GAAD,CAAYwD,WAAYA,EAAYxD,WAAYA,IAChD,cAACgkB,GAAD,CAAexgB,WAAYA,EAAYxD,WAAYA,IACnD,cAACikB,GAAD,CAAczgB,WAAYA,EAAYxD,WAAYA,IAClD,cAACkkB,GAAD,CAAe1gB,WAAYA,EAAYxD,WAAYA,IACnD,cAACmkB,GAAD,CACIvJ,WAAY,kBAAM5a,EAAW,CAAErK,KAAMmG,IAAE9J,eACvCwR,WAAYA,IAEhB,cAAC,GAAD,CAAcxD,WAAYA,IAC1B,cAAC,GAAD,CAAQwD,WAAYA,EAAYxD,WAAYA,IAC5C,0BAAS5K,UAAU,OAAOL,MAAO,CAAEgD,QAAS,OAAQqsB,SAAU,UAA9D,UACI,qBAAKrvB,MAAO,CAAEwlB,KAAM,IAApB,SACI,cAAC,GAAD,CAAkBva,WAAYA,MAElC,qBAAK5K,UAAU,QAAQL,MAAO,CAAEgD,QAAS,OAAQqsB,SAAU,UAA3D,SACI,cAACC,GAAD,CAAgBrkB,WAAYA,EAAYwD,WAAYA,SAG5D,cAAC,IAAD,CAAc6I,MAAM,SAAS1W,KAAK,OAAO2W,OAAO,cCzBxC6F,QACW,cAA7BjP,OAAO4W,SAASwK,UAEe,UAA7BphB,OAAO4W,SAASwK,UAEhBphB,OAAO4W,SAASwK,SAASC,MAAM,2DClBnC,IAceC,GAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,8BAAqBxQ,MAAK,YAEnB,IADHyQ,EACE,EADFA,OAAQC,EACN,EADMA,OAAQC,EACd,EADcA,OAAQC,EACtB,EADsBA,OAAQC,EAC9B,EAD8BA,QAEhCJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFpBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJnZ,SAAS5G,eAAe,SFqHtB,kBAAmBia,WACrBA,UAAU+F,cAAcC,MACrBlR,MAAK,SAACmR,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAMrlB,YEhH5BqkB,M,4CCqFezvB,EA3GD,CACV,CACI2wB,SAAU,IACV3wB,MAAO,CACH4wB,eAAgB,MAGxB,CACID,SAAU,uBACV3wB,MAAO,CACH6e,QAAS,cACTwF,OAAQ,IACRxkB,MAAO,oBACPU,OAAQ,qBACRE,MAAO,oBACPgE,QAAS,sBACTH,gBAAiB,8BACjBI,YAAa,0BACbC,YAAa,0BACbksB,WAAY,SACZC,WAAY,WAGpB,CACIH,SAAU,uBACV3wB,MAAO,CACHH,MAAO,EACPU,OAAQ,EACR+D,gBAAiB,8BACjB+f,OAAQ,MAIhB,CACIsM,SAAU,OACV3wB,MAAO,CACH+wB,WAAY,SACZC,iBAAkB,aAG1B,CACIL,SAAU,uBACV3wB,MAAO,CACHH,MAAO,wBACPqY,UAAW,8BACX+Y,iBAAkB,8BAClBF,WAAY,WACZG,iBAAkB,8BAClBC,eAAgB,4BAChBC,cAAe,gBACfC,UAAW,sBAGnB,CACIV,SAAU,cACV3wB,MAAO,CACHI,MAAO,cACPkxB,iBAAkB,aAClBjN,OAAQ,IACRkN,sBAAuB,EACvBpvB,MAAO,OACPqvB,oBAAqB,OACrBC,oBAAqB,iBACrBC,gBAAiB,OACjBC,gBAAiB,EACjBC,kBAAmB,IAG3B,CACIjB,SAAU,UACV3wB,MAAO,CACHgD,QAAS,SAGjB,CACI2tB,SAAU,+BACV3wB,MAAO,CACHO,OAAQ,GACRV,MAAO,GACP4E,QAAS,GACTE,YAAa,EACbktB,cAAe,KAGvB,CACIlB,SAAU,oBACV3wB,MAAO,CACHsE,gBAAiB,YAGzB,CACIqsB,SAAU,aACV3wB,MAAO,CACHsE,gBAAiB,YAGzB,CACIqsB,SAAU,YACV3wB,MAAO,CACH8xB,aAAc,OACdlB,eAAgB,GAChBmB,eAAgB,KCnGtBC,EAAU,CACZhyB,MAAM,YAAKA,GACXiyB,gBAAgB,EAChBC,oBAAoB,EACpBje,QAAS,IACTE,QAAS,GAGE6d,O,+BCVA,KACXzoB,SAAU,WACVwB,SAAU,WACVS,YAAa,cACbE,YAAa,cACbE,YAAa,cACbvC,SAAU,WACVyB,SAAU,WACVsO,QAAS,UACTC,QAAS,UACTE,UAAW,e","file":"static/js/main.ec318909.chunk.js","sourcesContent":["const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n    SET_FILE_REF: 'SET_FILE_REF',\n    SET_HISTORY_MODAL: 'SET_HISTORY_MODAL',\n    SET_AUTHOR: 'SET_AUTHOR',\n    IS_WORKFLOW_ON_SERVER: 'IS_WORKFLOW_ON_SERVER',\n    SET_CUR_INSTANCE: 'SET_CUR_INSTANCE',\n    SET_ZOOM_LEVEL: 'SET_ZOOM_LEVEL',\n    SET_EDIT_DETAILS_MODAL: 'SET_EDIT_DETAILS_MODAL',\n    SET_NEW_GRAPH_MODAL: 'SET_NEW_GRAPH_MODAL',\n    EDIT_TEXTFILE: 'EDIT_TEXTFILE',\n};\n\nexport default zealit(actionType);\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\n// import ColorBox from './ColorBox';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet] = useState(false);\n    const [labelName, setLabelName] = useState('');\n    const [labelFile, setLabelFile] = useState('');\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                {/* <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div /> */}\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <>\n                        <input\n                            className=\"nodeLabel\"\n                            ref={inputRef}\n                            type=\"text\"\n                            required\n                            label=\"Node Label\"\n                            placeholder=\"Enter Node Label\"\n                            onChange={(e) => {\n                                setLabelName(e.target.value);\n                                if (labelFile) setData({ ...data, label: e.target.value + labelFile });\n                            }}\n                        />\n\n                        <input\n                            className=\"nodeLabelFile\"\n                            type=\"text\"\n                            required\n                            label=\"Node Label file\"\n                            placeholder=\"Select file\"\n                            onChange={(e) => {\n                                setLabelFile(e.target.value);\n                                if (labelName) {\n                                    let lname = labelName;\n                                    if (labelName.slice(-1) !== ':') {\n                                        setLabelName(`${labelName}:`);\n                                        lname += ':';\n                                    }\n                                    setData({ ...data, label: lname + e.target.value });\n                                }\n                            }}\n                            list=\"files\"\n                        />\n                        <datalist id=\"files\">\n                            {\n                                localStorageManager.getFileList()\n                                    // eslint-disable-next-line max-len, jsx-a11y/control-has-associated-label\n                                    ? JSON.parse(localStorageManager.getFileList()).map((item) => <option value={`${item.key.toString()}`} />)\n                                    : ''\n                            }\n                        </datalist>\n                    </>\n                ) : ''}\n                {/* <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                /> */}\n\n                {/* <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                /> */}\n\n                {/* <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                /> */}\n\n                {/* <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                /> */}\n\n                {/* <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                /> */}\n                {/* <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                /> */}\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nconst colors = {\n    light: [\n        '#FFCC00', '#ea80fc', '#ff4081', '#ff5252', '#82b1ff', '#b388ff', '#64ffda', '#40c4ff', '#90a4ae', '#a1887f',\n    ],\n    dark: [\n        '#000000', '#f44336', '#9c27b0', '#7c4dff', '#1565c0', '#009688', '#ff6d00', '#827717', '#607d8b', '#000000',\n    ],\n};\n\nconst ColorBox = ({ color, setColor, type }) => {\n    const [visible, setVisible] = React.useState(false);\n    React.useEffect(() => {\n        if (!color) setColor(colors[type][Math.floor(Math.random() * 10)]);\n    }, []);\n    return (\n        <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"color-box-par\"\n            onClick={() => !visible && setVisible(true)}\n            onKeyDown={(ev) => ev.key === ' ' && (!visible && setVisible(true))}\n        >\n            <div className=\"color-box\" style={{ background: color || '#000' }} />\n            <div\n                className=\"color-picker\"\n                style={{\n                    display: visible ? 'block' : 'none',\n                }}\n            >\n                {/* eslint-disable-next-line */}\n                <div role=\"button\" className=\"overlay\" onClick={() => setVisible(false)}></div>\n                <TwitterPicker\n                    colors={colors[type]}\n                    color={color || '#000'}\n                    onChangeComplete={(x) => setColor(x.hex)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ColorBox;\n","import React, { useCallback } from 'react';\nimport ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const RadioBtn = ({ name, shape }) => (\n        <label htmlFor=\"ellipse\">\n            <input\n                type=\"radio\"\n                name=\"shape\"\n                value={shape}\n                checked={data.style.shape === shape}\n                onChange={() => setStyle({ shape })}\n            />\n            {name}\n        </label>\n    );\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{\n                        borderBottomWidth: data.style.thickness,\n                        borderBottomColor: data.style.backgroundColor,\n                        borderBottomStyle: data.style.shape,\n                    }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"span-rest edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                <div> Shape</div>\n                <div className=\"span-rest hascheckbox\">\n                    <div><RadioBtn name=\"Solid\" shape=\"solid\" /></div>\n                    <div><RadioBtn name=\"Dotted\" shape=\"dotted\" /></div>\n                    <div><RadioBtn name=\"Dashed\" shape=\"dashed\" /></div>\n                </div>\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n    shape: 'solid',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    shareModal: false,\n    settingsModal: false,\n    editDetailsModal: false,\n    newGraphModal: false,\n\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    graphs: [],\n    curGraphIndex: 0,\n    viewHistory: false,\n    authorName: '',\n    isWorkflowOnServer: false,\n    curGraphInstance: null,\n    zoomLevel: 100,\n};\n\nconst initialGraphState = {\n    projectName: '',\n    graphID: null,\n    serverID: null,\n    graphML: null,\n\n    component: null,\n    instance: null,\n    id: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        let foundi = -1;\n        const graphID = action.payload.graphID || new Date().getTime().toString();\n        state.graphs.forEach((g, i) => {\n            if ((g.graphID && g.graphID === graphID) || (g.serverID && g.serverID === action.payload.serverID)) {\n                foundi = i;\n            }\n        });\n        if (foundi !== -1) {\n            return { ...state, newGraphModal: false, curGraphIndex: foundi };\n        }\n        return {\n            ...state,\n            newGraphModal: false,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    projectName: action.payload.projectName,\n                    graphID,\n                    serverID: action.payload.serverID,\n                    graphML: action.payload.graphML,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.SET_CUR_INSTANCE: {\n        return { ...state, curGraphInstance: action.payload };\n    }\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n\n    case T.NEW_GRAPH: return { ...state, newGraphModal: true };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => (\n            g.graphID === action.payload.graphID ? { ...g, [action.payload.type]: action.payload.value }\n                : g\n        ));\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    case T.SET_FILE_REF: {\n        return { ...state, fileRef: action.payload };\n    }\n\n    case T.SET_HISTORY_MODAL: {\n        return { ...state, viewHistory: action.payload };\n    }\n\n    case T.SET_AUTHOR: {\n        return { ...state, authorName: action.payload };\n    }\n\n    case T.IS_WORKFLOW_ON_SERVER: {\n        return { ...state, isWorkflowOnServer: action.payload };\n    }\n    case T.SET_ZOOM_LEVEL: {\n        return { ...state, zoomLevel: action.payload };\n    }\n    case T.SET_EDIT_DETAILS_MODAL: {\n        return { ...state, editDetailsModal: action.payload };\n    }\n    case T.SET_NEW_GRAPH_MODAL: {\n        return { ...state, newGraphModal: action.payload };\n    }\n\n    case T.EDIT_TEXTFILE: {\n        return { ...state, textFileModal: action.payload.show, fileObj: action.payload.fileObj };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n","import BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\nimport GraphCanvas from './2-canvas';\n\nclass GraphComponent extends GraphCanvas {\n    getTid;\n\n    nodeValidator;\n\n    edgeValidator;\n\n    addAction;\n\n    getRealSourceId;\n\n    constructor(...args) {\n        super(...args);\n        const [,,,,, nodeValidator, edgeValidator] = args;\n        this.setEdgeNodeValidator({ nodeValidator, edgeValidator });\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(),\n        data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    getEdgesBetweenNodes(sourceID, targetID) {\n        return this.getById(sourceID).edgesWith(this.getById(targetID));\n    }\n\n    getBendingD(sourceID, targetID) {\n        const edges = this.getEdgesBetweenNodes(sourceID, targetID);\n        const dists = new Set();\n        edges.forEach((edge) => {\n            if (targetID === edge.target().id()) dists.add(edge.data('bendData').bendDistance);\n            else dists.add(-edge.data('bendData').bendDistance);\n        });\n        for (let d = 0; ;d += 20) {\n            if (!dists.has(d)) return d;\n            if (!dists.has(-d)) return -d;\n        }\n    }\n\n    parseBendinDW({\n        sourceID, targetID, type, bendWeight, bendDistance, bendPoint,\n    }) {\n        if (type !== 'ordin') return { bendDistance: 0, bendWeight: 0 };\n        if (bendDistance && bendWeight) return { bendDistance, bendWeight };\n        if (bendPoint) {\n            const { x, y } = bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceID).position(), this.getById(targetID).position(),\n            );\n            return { bendDistance: d, bendWeight: w };\n        }\n        return { bendDistance: this.getBendingD(sourceID, targetID), bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(edgeData, tid = this.getTid()) {\n        const { type = 'ordin' } = edgeData;\n        const bendData = this.parseBendinDW({ ...edgeData, ...edgeData.bendData });\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                ...edgeData, source: edgeData.sourceID, target: edgeData.targetID, type, bendData,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [{ ...edgeData, id: edge.id() }] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(edgeData, tid = this.getTid()) {\n        if ((edgeData.type && edgeData.type !== 'ordin') || edgeData.label) {\n            return this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle,\n                    edgeData.targetID, edgeData.targetID, null, 'New');\n                if (message.ok) this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{\n                    ...jsonEd.data, sourceID: jsonEd.data.source, targetID: jsonEd.data.target,\n                }],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            targetLabel: edge.target().data('label'),\n            style: edge.data('style'),\n            id: edge.data('id'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator, type) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges, type);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style, id, type) {\n        if (id) {\n            const node = this.getById(id);\n            return this.validiateComp({\n                label: label || node.data('label'),\n                style: style || node.data('style'),\n                id,\n            }, this.nodeValidator, type);\n        }\n        return this.validiateComp({ label, style, id }, this.nodeValidator, type);\n    }\n\n    validiateEdge(label, style, sourceID, targetID, id, type) {\n        if (id) {\n            const edge = this.getById(id);\n            return this.validiateComp({\n                label: label || edge.data('label'),\n                style: style || edge.data('style'),\n                sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n                targetLabel: edge.target().data('label'),\n                id,\n            }, this.edgeValidator, type);\n        }\n        return this.validiateComp({\n            label,\n            style,\n            sourceLabel: this.getById(this.getRealSourceId(sourceID)).data('label'),\n            targetLabel: this.getById(targetID).data('label'),\n            id,\n        }, this.edgeValidator, type);\n    }\n}\n\nexport default GraphComponent;\n","// import GraphUndoRedo from './graph-undo-redo';\nimport Core from './1-core';\nimport { actionType as T } from '../../reducer';\n\nclass GraphCanvas extends Core {\n    setZoomUI;\n\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), 0));\n        this.actionArr = [];\n        this.cy.emit('graph-modified');\n        return true;\n    }\n\n    resetAllComp() {\n        this.cy.elements().remove();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.SET_ZOOM_LEVEL, payload: Math.round(this.cy.zoom() * 100) });\n    }\n}\n\nexport default GraphCanvas;\n","import cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from '../../config/cytoscape-options';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport { actionType as T } from '../../reducer';\n\nclass CoreGraph {\n    dispatcher;\n\n    superState;\n\n    id;\n\n    projectName;\n\n    cy;\n\n    bendNode;\n\n    constructor(id, element, dispatcher, superState, projectName) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        // if (cy) this.cy = cy;\n        this.cy = cytoscape({ ...cyOptions, container: element });\n        this.id = id;\n        this.projectName = projectName;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.regesterEvents();\n        this.cy.emit('graph-modified');\n        this.initizialize();\n    }\n\n    initizialize() {\n        this.cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        this.cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        this.cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); this.addEdge({ sourceID: a.id(), targetID: b.id() }); },\n        });\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    getLabelFromID(x) {\n        return this.getById(x).data('label') || '**Deleted El**';\n    }\n\n    set({\n        cy, dispatcher, superState, projectName,\n    }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        if (projectName) this.projectName = projectName;\n    }\n\n    setProjectName(projectName, shouldEmit = true) {\n        this.projectName = projectName;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: projectName,\n                    graphID: this.id,\n                    type: 'projectName',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    setServerID(serverID, shouldEmit = true) {\n        this.serverID = serverID;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: serverID,\n                    graphID: this.id,\n                    type: 'serverID',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    regesterEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag grab dragfree'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CoreGraph.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('bendData', { bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.on('grab', () => {\n                const node = el;\n                node.scratch('bendDistWeight', el.data('bendData'));\n            });\n            this.bendNode.on('dragfree', () => {\n                const node = el;\n                this.addBendChange(node.id(), node.scratch('bendDistWeight'), el.data('bendData'));\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    setBendWightDist(id, DW) {\n        this.getById(id).data('bendData', DW);\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('bendData');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        this.selectDeselectEventHandler();\n    }\n\n    reset() {\n        this.resetAllComp();\n        this.resetAllAction();\n    }\n}\n\nexport default CoreGraph;\n","const getSet = (ALL_GRAPHS) => {\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: window.btoa('ALL_GRAPHS'),\n    AUTHOR_NAME: window.btoa('AUTHOR_NAME'),\n\n    allgs: getSet(window.btoa('ALL_GRAPHS')),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n    getAuthorName() {\n        return localStorage.getItem(this.AUTHOR_NAME) || '';\n    },\n    setAuthorName(authorName) {\n        localStorage.setItem(this.AUTHOR_NAME, authorName);\n    },\n    clearGraph(id) {\n        window.localStorage.removeItem(id);\n    },\n    getFileList() {\n        return localStorage.getItem('fileList') || '';\n    },\n};\nexport default localStorageManager;\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","import Slider from 'rc-slider';\nimport React from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\nimport { actionType as T } from '../reducer';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState, dispatcher }) => {\n    const myGraph = superState.curGraphInstance;\n    if (!myGraph) return <></>;\n    const zoomValue = superState.zoomLevel;\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => {\n                                myGraph.setZoom(value);\n                                dispatcher({ type: T.SET_ZOOM_LEVEL, payload: value });\n                            }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","import { actionType as T } from '../reducer';\n\nconst getGraphFun = (superState) => superState.curGraphInstance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style, null, 'New');\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateNode(\n                        shouldUpdateLabel ? label : null, style, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateEdge(\n                        shouldUpdateLabel ? label : null, style, null, null, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\n// TODO\n// const saveLocal = (state, d) => {\n// };\n\nconst saveAction = (state, d, fileName) => {\n    getGraphFun(state).saveToDisk(fileName);\n};\n\nconst readFile = (state, setState, file) => {\n    if (file) {\n        const fr = new FileReader();\n        const projectName = file.name;\n        if (file.name.split('.').pop() === 'graphml') {\n            fr.onload = (x) => {\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: { projectName, graphML: x.target.result },\n                });\n            };\n            fr.readAsText(file);\n        }\n    }\n};\n\nconst readTextFile = (state, setState, file) => {\n    if (file) {\n        setState({\n            type: T.EDIT_TEXTFILE,\n            payload: { show: true, fileObj: file },\n        });\n    }\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_EDIT_DETAILS_MODAL,\n        payload: true,\n    });\n};\n\nconst undo = (state) => {\n    if (getGraphFun(state)) getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nconst viewHistory = (state, setState) => {\n    setState({ type: T.SET_HISTORY_MODAL, payload: true });\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, readTextFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal, viewHistory,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].graphID : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.graphID}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.projectName}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, actionHistory, serverID,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          serverID,\n        },\n        node: nodes,\n        edge: edges,\n        actionHistory,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint, type,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n                type,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.bendData.bendPoint,\n        type: edg.style.shape,\n    }));\n    const X = graphML({\n        nodes,\n        edges,\n        projectName: G.projectName,\n        id: G.id,\n        actionHistory: G.actionHistory,\n        serverID: G.serverID,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import md5 from 'md5';\nimport GraphComponent from './3-component';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\n\nclass GraphUndoRedo extends GraphComponent {\n    static methodsMapped\n\n    actionArr\n\n    curActionIndex\n\n    constructor(...props) {\n        super(...props);\n\n        this.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => this.addNode(...args, 0),\n            [GA.ADD_EDGE]: (...args) => this.addEdge(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => this.updateNode(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => this.updateEdge(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => this.updateData(...args, 0),\n            [GA.DEL_NODE]: (...args) => this.deleteNode(...args, 0),\n            [GA.DEL_EDGE]: (...args) => this.deleteElem(...args, 0),\n            [GA.SET_POS]: (...args) => this.setPos(...args, 0),\n            [GA.SET_DIM]: (...args) => this.setDim(...args, 0),\n            [GA.SET_BENDW]: (...args) => this.setBendWightDist(...args),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    resetAllAction() {\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    informUI() {\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    performAction({ actionName, parameters }) {\n        const action = this.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos, curPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos, prevPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addBendChange(id, prevDW, curDW) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_BENDW, parameters: [id, prevDW] },\n            { actionName: GA.SET_BENDW, parameters: [id, curDW] }, tid,\n        );\n    }\n\n    static sequencify(obj) {\n        if (!(obj instanceof Object)) return obj;\n        let r = [];\n        if (obj instanceof Array) {\n            r = obj.map(GraphUndoRedo.sequencify);\n        } else {\n            Object.keys(obj).sort().forEach((k) => {\n                r.push(`:${k}:`);\n                r.push(GraphUndoRedo.sequencify(obj[k]));\n            });\n        }\n        return r;\n    }\n\n    addAction(inverse, equivalent, tid, authorName = this.superState.authorName) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n\n        const actionIdentity = GraphUndoRedo.sequencify(equivalent).toString()\n            + GraphUndoRedo.sequencify(equivalent).toString()\n            + tid\n            + authorName;\n        this.actionArr.push({\n            tid,\n            inverse,\n            equivalent,\n            authorName,\n            hash: md5(\n                `${actionIdentity}|${this.actionArr.length ? this.actionArr.at(-1).hash : ''}`,\n            ),\n        });\n        this.curActionIndex += 1;\n        this.informUI();\n    }\n\n    undoSingleAction() {\n        if (this.curActionIndex !== 0) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n            this.informUI();\n        }\n    }\n\n    redoSingleAction() {\n        if (this.curActionIndex !== this.actionArr.length) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n            this.informUI();\n        }\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.informUI();\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.informUI();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.informUI();\n    }\n\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('dragfree', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n    }\n}\n\nexport default GraphUndoRedo;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst mapByDefault = (x, arr, def) => {\n    if (arr.includes(x)) return x;\n    return def;\n};\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: mapByDefault(p.parseProps('y:Shape.$.type'), ['rectangle', 'ellipse'], 'rectangle'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        shape: mapByDefault(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.type'),\n            ['dashed', 'dotted'], 'solid'),\n    },\n    bendData: {\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseActionML = (({ actionName, parameters }) => ({ actionName: actionName[0], parameters: parameters[0] }));\n\nconst parseActionHistory = (grahML) => grahML.parseProps('graphml.graph.actionHistory', 1)\n    .map(({\n        authorName, equivalent, inverse, tid,\n    }) => ({\n        authorName: authorName[0],\n        equivalent: parseActionML(equivalent[0]),\n        inverse: parseActionML(inverse[0]),\n        tid: tid[0],\n    }));\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n};\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n} from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, serverID } = parseDetails(grahML);\n        const actionHistory = parseActionHistory(grahML);\n        resolve({\n            id, projectName, edges, nodes, actionHistory, serverID,\n        });\n    });\n});\nexport default parser;\n","import GraphServer from './6-server';\n\nexport default GraphServer;\n","import { actionType as T } from '../../reducer';\nimport GraphLoadSave from './5-load-save';\n// import {\n//     postGraph, updateGraph, forceUpdateGraph, getGraph, getGraphWithHashCheck,\n// } from '../../serverCon/crud_http';\n\nclass GraphServer extends GraphLoadSave {\n    set(config) {\n        const { serverID } = config;\n        super.set(config);\n        if (serverID) {\n            this.setServerID(serverID);\n            this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n        }\n    }\n    // Not being immplemented in version 1\n    // pushToServer() {\n    //     if (this.serverID) {\n    //         updateGraph(this.serverID, this.getGraphML()).then(() => {\n\n    //         });\n    //     } else {\n    //         postGraph(this.getGraphML()).then((serverID) => {\n    //             this.set({ serverID });\n    //             this.cy.emit('graph-modified');\n    //         });\n    //     }\n    // }\n\n    // forcePushToServer() {\n    //     if (this.serverID) {\n    //         forceUpdateGraph(this.serverID, this.getGraphML()).then(() => {\n\n    //         });\n    //     } else {\n    //         postGraph(this.getGraphML()).then((serverID) => {\n    //             this.set({ serverID });\n    //         });\n    //     }\n    // }\n\n    // forcePullFromServer() {\n    //     if (this.serverID) {\n    //         getGraph(this.serverID).then((graphXML) => {\n    //             this.setGraphML(graphXML);\n    //         });\n    //     } else {\n    //         // eslint-disable-next-line no-alert\n    //         alert('Not on server');\n    //     }\n    // }\n\n    // pullFromServer() {\n    //     if (this.actionArr.length === 0) { this.forcePullFromServer(); return; }\n    //     if (this.serverID) {\n    //         getGraphWithHashCheck(this.serverID, this.actionArr.at(-1).hash).then((graphXML) => {\n    //             this.setGraphML(graphXML);\n    //         }).catch(() => {\n\n    //         });\n    //     } else {\n    //         // eslint-disable-next-line no-alert\n    //         alert('Not on server');\n    //     }\n    // }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n    }\n}\n\nexport default GraphServer;\n","import { saveAs } from 'file-saver';\nimport localStorageManager from '../local-storage-manager';\nimport graphmlBuilder from '../graphml/builder';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GraphUndoRedo from './4-undo-redo';\nimport graphMLParser from '../graphml/parser';\n\nclass GraphLoadSave extends GraphUndoRedo {\n    autoSaveIntervalId\n\n    constructor(...args) {\n        super(...args);\n        this.autoSaveIntervalId = null;\n    }\n\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('nodeediting.resizeend graph-modified', () => this.saveLocalStorage());\n    }\n\n    downloadImg(format) {\n        this.cy.emit('hide-bend');\n        this.cy.$('.eh-handle').remove();\n        if (format === 'PNG') saveAs(this.cy.png({ full: true }), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.jpg({ full: true }), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    static stringifyAction({ actionName, parameters }) {\n        return { actionName, parameters: window.btoa(JSON.stringify(parameters)) };\n    }\n\n    static parseAction({ actionName, parameters }) {\n        return { actionName, parameters: JSON.parse(window.atob(parameters)) };\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [],\n            edges: [],\n            actionHistory: [],\n            projectName: this.projectName,\n            id: this.id,\n            serverID: this.serverID,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                    style: {},\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const edgeJson = edge.json().data;\n                edgeJson.source = this.getRealSourceId(edge.source().id());\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.bendData.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.bendData.bendWeight, edgeJson.bendData.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        graph.actionHistory = this.actionArr.map(({\n            tid, inverse, equivalent, authorName, hash,\n        }) => ({\n            tid,\n            authorName,\n            inverse: GraphLoadSave.stringifyAction(inverse),\n            equivalent: GraphLoadSave.stringifyAction(equivalent),\n            hash,\n        }));\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectName}`;\n    }\n\n    saveToDisk(fileName) {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, `${fileName || `${this.getName()}-DHGWorkflow`}.graphml`);\n    }\n\n    getGraphML() {\n        return graphmlBuilder(this.jsonifyGraph());\n    }\n\n    loadJson(content) {\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, { }, node.id, 0);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge({ ...edge, sourceID: edge.source, targetID: edge.target }, 0);\n        });\n        content.actionHistory.forEach(({\n            inverse, equivalent, tid, authorName,\n        }) => {\n            this.addAction(GraphLoadSave.parseAction(inverse), GraphLoadSave.parseAction(equivalent), tid, authorName);\n        });\n        this.setProjectName(content.projectName);\n        this.setServerID(this.serverID || content.serverID);\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveIntervalId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    setGraphML(graphML) {\n        graphMLParser(graphML).then((graphObject) => {\n            localStorageManager.save(this.id, graphObject);\n            this.loadGraphFromLocalStorage();\n        });\n    }\n\n    resetLocalStorage() {\n        localStorageManager.clearGraph(this.id);\n    }\n\n    loadGraphFromLocalStorage() {\n        this.reset();\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return window.btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n}\n\nexport default GraphLoadSave;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './graph-core';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\nimport GA from './graph-actions';\n\nclass TailoredGraph extends CoreGraph {\n    regesterEvents() {\n        super.regesterEvents();\n        this.cy.on('drag data moved', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TailoredGraph.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(edgeData, tid) {\n        const juncNode = this.getById(edgeData.sourceID);\n        const ed = super.addEdge({\n            ...edgeData,\n            label: juncNode.data('edgeLabel'),\n            style: juncNode.data('edgeStyle'),\n        }, tid);\n        juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(edgeData, tid) {\n        const { sourceID, targetID, style } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: edgeData.label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdge({\n            sourceID,\n            targetID: juncNode.id(),\n            style: {\n                ...style,\n                'target-arrow-shape': 'none',\n            },\n            type: 'special',\n        }, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNode.id() }, tid);\n    }\n\n    addEdgeAction(id, edgeData, tid) {\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [id] },\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{ ...edgeData, sourceID: this.getRealSourceId(edgeData.sourceID), id }],\n            },\n            tid,\n        );\n    }\n\n    addEdge(edgeData, tidd = this.getTid()) {\n        const tid = 0;\n        const { sourceID, targetID, label } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const juncNodes = sourceNode.outgoers('node').filter((node) => label && node.data('edgeLabel') === label);\n\n        let edge;\n        if (targetNode.data('type') !== 'ordin') return edge; // Don't Add Node\n        if (sourceNode.data('type') === 'special') edge = this.addEdgeWithJuncNode(edgeData, tid);\n        else if (juncNodes.length) edge = this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNodes[0].id() }, tid);\n        else if (label && label.length) edge = this.addEdgeWithoutJuncNode(edgeData, tid);\n        else {\n            this.dispatcher({\n                type: T.Model_Open_Create_Edge,\n                cb: (edgeLabel, edgeStyle) => {\n                    const message = this.validiateEdge(edgeLabel, edgeStyle, sourceID, targetID, null, 'New');\n                    if (message.ok) edge = this.addEdge({ ...edgeData, label: edgeLabel, style: edgeStyle }, tid);\n                    if (edge) this.addEdgeAction(edge.id(), { ...edgeData, label: edgeLabel, style: edgeStyle }, tidd);\n                    return message;\n                },\n            });\n        }\n        if (edge) this.addEdgeAction(edge.id(), edgeData, tidd);\n        return edge;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, 0);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, 0);\n        this.updateNode(junctionNode.data('id'), { backgroundColor: style.backgroundColor }, '', false, 0);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, 0));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node[type=\"special\"]')\n                .connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n            el.connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n\n            const node = this.getById(id);\n            this.addAction(\n                {\n                    actionName: GA.ADD_NODE,\n                    parameters: [\n                        node.data('label'), this.getStyle(node.id()), node.data('type'),\n                        node.position(), node.json().data, id,\n                    ],\n                },\n                { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n            );\n            super.deleteNode(id, 0);\n        } else {\n            if (!this.getById(id).length || el.removed()) return;\n            const jsonEd = this.getById(id).json().data;\n            this.addAction(\n                {\n                    actionName: GA.ADD_EDGE,\n                    parameters: [{\n                        ...jsonEd, sourceID: this.getRealSourceId(jsonEd.source), targetID: jsonEd.target,\n                    }],\n                },\n                { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n            );\n            const junctionNode = el.source();\n            super.deleteEdge(id, 0);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), 0);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    getEdgesBetweenNodes(n1, n2) {\n        const [c1, c2] = [n1, n2]\n            .map((n) => this.getById(this.getRealSourceId(n)))\n            .map((r) => r.outgoers('node[type=\"special\"]').union(r));\n        return c1.edgesWith(c2);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = {};\n        this.cy.$('edge[type=\"ordin\"]').forEach((edge) => {\n            const label = edge.data('label');\n            const sourceLabel = this.getById(this.getRealSourceId(edge.source().id())).data('label');\n            const targetLabel = edge.target().data('label');\n            const style = edge.data('style');\n            const id = edge.data('id');\n            if (!edges[label]) {\n                edges[label] = {\n                    targetLabel: [targetLabel], sourceLabel, id, label, style,\n                };\n            } else edges[label].targetLabel.push(targetLabel);\n        });\n        return [nodes, Object.values(edges)];\n    }\n}\n\nexport default TailoredGraph;\n","import React, { useEffect, useRef, useState } from 'react';\nimport path from 'path';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\nimport MyGraph from './graph-builder';\nimport { actionType as T } from './reducer';\n\nfunction Graph({\n    el, superState, dispatcher, graphID, serverID, graphML, projectName, graphContainerRef, active, loaded,\n}) {\n    const [instance, setInstance] = useState(null);\n    const ref = useRef();\n    const setContainerDim = (element) => {\n        const elToAss = element;\n        elToAss.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n        elToAss.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n    };\n\n    const initialiseNewGraph = () => {\n        const myGraph = new MyGraph(\n            graphID, ref.current, dispatcher, superState, projectName, nodeValidator, edgeValidator,\n        );\n        if (graphID) myGraph.loadGraphFromLocalStorage();\n        if (serverID) {\n            myGraph.set({ serverID });\n            myGraph.forcePullFromServer();\n        }\n        if (graphML) myGraph.setGraphML(graphML);\n        myGraph.setCurStatus();\n        return myGraph;\n    };\n    useEffect(() => {\n        if (active && loaded && serverID) {\n            window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 's', serverID));\n        } else if (active && loaded && graphID) {\n            window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 'l', graphID));\n        }\n    }, [active, serverID, loaded, graphID]);\n    useEffect(() => instance && instance.set({ superState }), [instance, superState]);\n    useEffect(() => active && instance && instance.setCurStatus(), [active && instance]);\n    useEffect(() => {\n        if (active && instance) dispatcher({ type: T.SET_CUR_INSTANCE, payload: instance });\n    }, [active && instance]);\n\n    useEffect(() => {\n        if (ref.current) {\n            setContainerDim(ref.current);\n            window.addEventListener('resize', () => setContainerDim(ref.current));\n            setInstance(initialiseNewGraph());\n        }\n    }, [ref]);\n\n    const { id } = el;\n\n    return (\n        <div\n            style={{ zIndex: 1, display: active ? 'block' : 'none' }}\n            key={id}\n            className=\"graph-element\"\n            ref={ref}\n        />\n    );\n}\nexport default Graph;\n","const nodeValidator = `(node, nodes, edges) => {\n    var regex = /^[A-za-z0-9]+:[A-Za-z0-9.]+$/;\n    let message = { ok: true, err: null };\n    if (!regex.test(node.label)) {\n        message = {\n            ok: false,\n            err: 'Node with incorrect label.',\n        }\n        return message;\n    }\n    nodes.forEach((n) => {\n        if (n.id !== node.id && n.label.split(':')[0] === node.label.split(':')[0]) {\n            message = {\n                ok: false,\n                err: 'Node with same label exists.',\n            };\n        }\n    });\n    return message;\n    }`;\nconst edgeValidator = `(edge, nodes, edges) => {\nlet message = { ok: true, err: null };\nedges.forEach((e) => {\n    if (e.label === edge.label && e.sourceLabel !== edge.sourceLabel) {\n        message = {\n            ok: false,\n            err: 'Edge with same label exists.',\n        };\n    }\n});\nreturn message;\n}`;\n\n/* eslint-disable max-len */\nconst nodeValidatorFormat = `Takes **\\`node\\`** details under validation, existing **\\`nodes\\`**, existing **\\`edges\\`** and **\\`type\\`**\n\n**Node:** { label: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n\nconst edgeValidatorFormat = `Takes **\\`edge\\`** details under validation, existing **\\`nodes\\`** and existing **\\`edges\\`** and **\\`type\\`**\n\n**Edge:** { label: String, sourceLabel: String, targetLabel: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n/* eslint-enable max-len */\n\nexport {\n    nodeValidator, edgeValidator, nodeValidatorFormat, edgeValidatorFormat,\n};\n","import React, { useEffect } from 'react';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graphWorkspace.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport Graph from './GraphArea';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.useRef();\n    const { dispatcher, superState } = props;\n    const [loadedFromStorage, setLoadedFromStorage] = React.useState(false);\n    const [loadedFromURL, setLoadedFromURL] = React.useState(false);\n\n    useEffect(() => {\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphID) => ({\n            graphID,\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n        setLoadedFromStorage(true);\n    }, []);\n\n    useEffect(() => {\n        if (!loadedFromStorage) return;\n        const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n        if (graphFromParams) {\n            const graphContent = JSON.parse(window.atob(graphFromParams));\n            const gid = new Date().getTime().toString();\n            localStorageManager.addToFront(gid);\n            localStorageManager.save(gid, graphContent);\n            window.history.replaceState({}, document.title, window.location.pathname);\n            dispatcher({ type: T.ADD_GRAPH, payload: { graphID: gid } });\n        }\n        const urlParms = window.location.pathname.split('/');\n        const serverIDIndex = urlParms.indexOf('s');\n        const localIDIndex = urlParms.indexOf('l');\n        if (serverIDIndex !== -1 && serverIDIndex + 1 < urlParms.length) {\n            const serverID = urlParms[serverIDIndex + 1];\n            dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n        }\n        if (localIDIndex !== -1 && localIDIndex + 1 < urlParms.length) {\n            const graphID = urlParms[localIDIndex + 1];\n            dispatcher({ type: T.ADD_GRAPH, payload: { graphID } });\n        }\n        setLoadedFromURL(true);\n    }, [loadedFromStorage]);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <Graph\n                        el={el}\n                        i={i}\n                        superState={superState}\n                        graphContainerRef={graphContainerRef}\n                        dispatcher={dispatcher}\n                        key={el.graphID}\n                        active={i === superState.curGraphIndex}\n                        graphID={el.graphID}\n                        serverID={el.serverID}\n                        graphML={el.graphML}\n                        projectName={el.projectName}\n                        loaded={loadedFromURL}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setErrorMessage('');\n    }, [ModelOpen]);\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","/* eslint-disable no-alert */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare, FaHistory,\n    // FaRegSun,\n} from 'react-icons/fa';\n\n// import {\n//     FiChevronDown, FiChevronsDown, FiChevronsUp, FiChevronUp,\n// } from 'react-icons/fi';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction,\n    readFile, clearAll, undo, redo, openShareModal, viewHistory,\n    // openSettingModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'menu',\n        text: 'Save',\n        icon: FaSave,\n        action: (s, d) => [\n            { fn: () => state.curGraphInstance && state.curGraphInstance.pushToServer(), name: 'Save on Server' },\n            { fn: () => saveAction(s, d), name: 'Save' },\n            { fn: () => saveAction(s, d, prompt('File Name:')), name: 'Save As' },\n            // TODO\n            // { fn: () => saveLocal(s, d), name: 'Save Local' },\n        ],\n        active: true,\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: clearAll,\n        active: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'History',\n        icon: FaHistory,\n        action: viewHistory,\n        active: true,\n    },\n    { type: 'vsep' },\n    // Not being implemented in version 1\n    // {\n    //     type: 'action',\n    //     text: 'Push',\n    //     icon: FiChevronUp,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.pushToServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Pull',\n    //     icon: FiChevronDown,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.pullFromServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Force Push',\n    //     icon: FiChevronsUp,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.forcePushToServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Force Pull',\n    //     icon: FiChevronsDown,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.forcePullFromServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // { type: 'vsep' },\n    { type: 'space' },\n    // Not being implemented in version 1\n    // {\n    //     type: 'action',\n    //     text: 'Settings',\n    //     icon: FaRegSun,\n    //     action: openSettingModal,\n    //     active: true,\n    // },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n    },\n    {\n        type: 'menu',\n        text: 'Export',\n        icon: FaDownload,\n        action: (s, d) => [\n            { fn: () => downloadImg(s, d, 'JPG'), name: 'JPG' },\n            { fn: () => downloadImg(s, d, 'PNG'), name: 'PNG' },\n        ],\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            {action().map(({ fn, name }) => <MenuItem onClick={fn} key={name}>{name}</MenuItem>)}\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, active, tabIndex, hotkey, superState,\n}) => (\n    <ActionButton {...{\n        Icon, text, active, tabIndex, action: () => superState.fileRef.current.click(), hotkey,\n    }}\n    />\n);\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n    >\n        <div className=\"icon\"><Icon size=\"25\" /></div>\n        <div style={{ fontSize: 16 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { MdEdit, MdDone } from 'react-icons/md';\nimport './serverActions.css';\n\nconst ServerActions = () => {\n    const inputRef = useRef();\n    const [isReadOnly, setIsReadOnly] = useState(true);\n    useEffect(() => { inputRef.current.readOnly = isReadOnly; }, [isReadOnly]);\n    const edit = () => {\n        setIsReadOnly(false);\n        inputRef.current.focus();\n    };\n    const save = () => {\n        setIsReadOnly(true);\n    };\n    return (\n        <div className=\"server-actions-container\">\n            <input className=\"server-id\" readOnly ref={inputRef} />\n            {\n                isReadOnly\n                    ? (\n                        <div\n                            className=\"edit-icon\"\n                            role=\"button\"\n                            onKeyDown={edit}\n                            onClick={edit}\n                            tabIndex={0}\n                        >\n                            <MdEdit size=\"25\" />\n                        </div>\n                    )\n                    : (\n                        <div\n                            className=\"edit-icon\"\n                            role=\"button\"\n                            onKeyDown={save}\n                            onClick={save}\n                            tabIndex={0}\n                        >\n                            <MdDone size=\"25\" />\n                        </div>\n                    )\n            }\n        </div>\n    );\n};\n\nexport default ServerActions;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\nimport ServerActions from './serverActions/ServerActions';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ superState, dispatcher }) => {\n    const actions = toolbarList(superState);\n    React.useEffect(() => {\n        setHotKeys(actions, superState, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    superState.curGraphInstance ? `${\n                        superState.curGraphInstance.projectName\n                    } - concore Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(superState, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} superState={superState} />;\n                        case 'action': return <ActionButton {...props} />;\n                        case 'serverActions': return <ServerActions superState={superState} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('');\n    const [authorName, setAuthorName] = useState('');\n    const [serverID, setServerID] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const newGraphModal = superState.newGraphModal || superState.graphs.length === 0;\n    const editDetailsModal = superState.editDetailsModal || (curGraph && !curGraph.projectName);\n\n    const setProjAuthorName = (a) => {\n        setAuthorName(a);\n        dispatcher({\n            type: T.SET_AUTHOR,\n            payload: a,\n        });\n    };\n\n    useEffect(() => {\n        if (superState.editDetailsModal && curGraph) {\n            setProjectName(curGraph.projectName);\n        } else setProjectName('');\n    }, [superState.authorName, superState.editDetailsModal, curGraph]);\n    useEffect(() => {\n        if (superState.authorName) setAuthorName(superState.authorName);\n        else {\n            const authorNameE = localStorageManager.getAuthorName();\n            setProjAuthorName(authorNameE);\n        }\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (newGraphModal) dispatcher({ type: T.ADD_GRAPH, payload: { projectName } });\n        else if (editDetailsModal) {\n            superState.curGraphInstance.setProjectName(projectName);\n            dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n        }\n        setProjAuthorName(authorName);\n        localStorageManager.setAuthorName(authorName);\n    };\n\n    const openExisting = () => {\n        superState.fileRef.current.click();\n    };\n\n    const closeModal = () => {\n        if (superState.newGraphModal) dispatcher({ type: T.SET_NEW_GRAPH_MODAL, payload: false });\n        else if (superState.editDetailsModal) dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n    };\n    const loadFromServer = () => {\n        dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n    };\n    const NewWrokflow = () => (\n        <>\n            <div className=\"divider\" />\n            <input\n                placeholder=\"Enter the Server ID of Workflow\"\n                value={serverID}\n                onChange={(e) => setServerID(e.target.value)}\n                className=\"serverIDText\"\n            />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={loadFromServer}\n            >\n                Load From Server\n\n            </button>\n            <div className=\"divider\" />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={openExisting}\n            >\n                Open Existing From GraphML File\n\n            </button>\n        </>\n    );\n\n    return (\n        <Modal\n            ModelOpen={newGraphModal || editDetailsModal}\n            closeModal={superState.editDetailsModal || superState.newGraphModal ? closeModal : null}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={authorName}\n                    onChange={(e) => setAuthorName(e.target.value)}\n                    required\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                </div>\n                <div className=\"expand\">\n                    {newGraphModal && <NewWrokflow />}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal && superState.curGraphInstance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.curGraphInstance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height, docString,\n}) => {\n    const inputRef = React.createRef();\n    const parseMD = (s) => s.split('**').map((e, i) => {\n        if (i % 2) return <span key={e}><b>{e}</b></span>;\n        return <span key={e}>{e}</span>;\n    });\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            {docString\n                ? (\n                    <div className=\"docStr\">\n                        {parseMD(docString)}\n                    </div>\n                ) : <div />}\n            <br />\n            {pre\n                ? (\n                    <textarea\n                        className=\"preTextField\"\n                        value={pre}\n                        readOnly\n                        spellCheck=\"false\"\n                    />\n                ) : <div />}\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height, width: '90vw' }}\n                ref={inputRef}\n            />\n            {post\n                ? (\n                    <textarea\n                        className=\"postTextField\"\n                        readOnly\n                        value={post}\n                        spellCheck=\"false\"\n                    />\n                ) : <div />}\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\nimport { nodeValidatorFormat, edgeValidatorFormat } from '../../config/defaultValidators';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setNodeValidator(superState.curGraphInstance.getNodeValidator());\n            setEdgeValidator(superState.curGraphInstance.getEdgeValidator());\n        }\n    }, [superState.curGraphInstance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        try {\n            superState.curGraphInstance.setEdgeNodeValidator({\n                nodeValidator: `(node, nodes, edges, type)=>{${nodeValidator}}`,\n                edgeValidator: `(edge, nodes, edges, type)=>{${edgeValidator}}`,\n            });\n            dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n            setErrorMessage('');\n        } catch (e) {\n            setErrorMessage(e.message);\n        }\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={200}\n                        docString={nodeValidatorFormat}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={200}\n                        docString={edgeValidatorFormat}\n                    />\n                </div>\n                <div className=\"error\">{errorMessage}</div>\n\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useEffect } from 'react';\nimport { FaFileImport } from 'react-icons/fa';\nimport './file-drag-drop.css';\nimport { actionType as T } from '../reducer';\nimport { readFile } from '../toolbarActions/toolbarFunctions';\n\nconst app = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n\n    useEffect(() => {\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n        const p = document.getElementsByTagName('body')[0];\n        const c = document.getElementsByClassName('drag-drop-area')[0];\n        let cc = 0;\n        p.addEventListener('dragenter', (e) => {\n            e.preventDefault();\n            cc += 1;\n            if (cc === 1) c.classList.remove('hidden');\n        });\n        p.addEventListener('dragleave', (e) => {\n            e.preventDefault();\n            cc -= 1;\n            if (cc === 0) c.classList.add('hidden');\n        });\n\n        p.addEventListener('dragover', (e) => {\n            e.preventDefault();\n        });\n        ['dragend', 'dragexit', 'drop'].forEach((dragEvent) => {\n            p.addEventListener(dragEvent, (e) => {\n                e.preventDefault();\n                cc = 0;\n                c.classList.add('hidden');\n            });\n        });\n\n        p.addEventListener('drop', (e) => {\n            e.preventDefault();\n            fileRef.current.value = null;\n            if (e.dataTransfer.files.length === 1\n                && e.dataTransfer.files[0].name.split('.').slice(-1)[0] === 'graphml') {\n                readFile(superState, dispatcher, { target: e.dataTransfer });\n            }\n        });\n    }, []);\n    return (\n        <div className=\"drag-drop-area hidden\">\n            <div className=\"inner\">\n                <FaFileImport size={100} style={{ color: '#1e88e5' }} />\n                <div>\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e)}\n                    />\n                    <span className=\"arrow\">&#10230;</span>\n                    <h1 className=\"text\">Drop the File anywhere to open</h1>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default app;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport GA from '../../graph-builder/graph-actions';\nimport './history.css';\n\nconst HistoryModal = ({ superState, dispatcher }) => {\n    const [curState, setcurState] = useState(0);\n    const [historyList, setHistoryList] = useState([]);\n    const [historyView, setHistoryView] = useState([]);\n    const actions = [\n        GA.ADD_NODE, GA.ADD_EDGE,\n        GA.UPDATE_NODE, GA.UPDATE_EDGE,\n        GA.DEL_NODE, GA.DEL_EDGE,\n        GA.SET_DIM, GA.SET_BENDW, GA.SET_POS,\n    ];\n    const mapActionToTrue = () => {\n        const res = {};\n        actions.forEach((action) => { res[action] = true; });\n        return res;\n    };\n    const [filterAction, setFilterAction] = useState(mapActionToTrue());\n\n    const getLabelFromID = (x) => {\n        if (superState.curGraphInstance) {\n            return superState.curGraphInstance.getLabelFromID(x);\n        }\n        return '';\n    };\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setHistoryList([\n                ...superState.curGraphInstance.actionArr\n                    .slice().reverse().map((action, i) => ({ ...action, i })),\n            ]);\n            setcurState(\n                superState.curGraphInstance.actionArr.length\n                - superState.curGraphInstance.curActionIndex,\n            );\n        }\n    }, [superState.viewHistory, superState.graphs, superState.curGraphInstance, curState]);\n\n    const stringifyAction = (equivalent) => {\n        const par = equivalent.parameters;\n        switch (equivalent.actionName) {\n        case GA.ADD_NODE: return `Created new Node: ${par[0]}`;\n        case GA.ADD_EDGE: return `Created new Edge ${\n            getLabelFromID(par[0].id)\n        } between ${getLabelFromID(par[0].sourceID)} and ${getLabelFromID(par[0].targetID)}`;\n        case GA.UPDATE_NODE: return `Updated Label/Style for ${getLabelFromID(par[0])} node`;\n        case GA.UPDATE_EDGE: return `Updated Edge ${getLabelFromID(par[0])}`;\n        case GA.DEL_NODE: return `Deleted Node: ${getLabelFromID(par[0])}`;\n        case GA.DEL_EDGE: return `Deleted Edge: ${getLabelFromID(par[0])}`;\n        case GA.SET_POS: return `Moved node ${getLabelFromID(par[0])} on canvas`;\n        case GA.SET_DIM: return `Changed dimension of node ${getLabelFromID(par[0])}`;\n        case GA.SET_BENDW: return `Modified Bend Point of node ${getLabelFromID(par[0])}`;\n        default: return '';\n        }\n    };\n\n    const stringifyActionType = {\n        [GA.ADD_NODE]: 'NodeAddition:',\n        [GA.ADD_EDGE]: 'EdgeAddition',\n        [GA.UPDATE_NODE]: 'NodeUpdates',\n        [GA.UPDATE_EDGE]: 'EdgeUpdates',\n        [GA.DEL_NODE]: 'NodeDeletion',\n        [GA.DEL_EDGE]: 'EdgeDeletion',\n        [GA.SET_POS]: 'NodePosChange',\n        [GA.SET_DIM]: 'NodeDimensionChange',\n        [GA.SET_BENDW]: 'EdgeBend',\n    };\n\n    const restoreState = (index) => {\n        // eslint-disable-next-line no-alert\n        if (window.confirm('Are you sure to restore the selected state?')) {\n            let tempCurState = curState;\n            while (index > tempCurState) {\n                superState.curGraphInstance.undoSingleAction();\n                tempCurState += 1;\n            }\n            while (index < tempCurState) {\n                superState.curGraphInstance.redoSingleAction();\n                tempCurState -= 1;\n            }\n            setcurState(tempCurState);\n        }\n    };\n    const prefixTid = (tid, str, authorName, index, hash) => {\n        const DT = new Date(parseInt(tid, 10));\n        const date = DT.toLocaleDateString();\n        const time = DT.toLocaleTimeString();\n        const c = (\n            <>\n                <td>\n                    {\n                        index === curState ? '[Current]' : (\n                            <button className=\"a-link\" type=\"button\" onClick={() => restoreState(index)}>\n                                [Restore]\n                            </button>\n                        )\n                    }\n                </td>\n                <td>{`${date}-${time}`}</td>\n                <td>\n                    [\n                    <b>{`${authorName}`}</b>\n                    ]\n                </td>\n                <td style={{ fontWeight: 100 }}>{str}</td>\n                <td style={{ fontWeight: 100 }}>{hash}</td>\n            </>\n        );\n        // if (index === curState) return <u>{c}</u>;\n        return c;\n    };\n\n    const parseAction = ({\n        equivalent, tid, i, authorName, hash,\n    }) => prefixTid(\n        tid, stringifyAction(equivalent), authorName, i, hash,\n    );\n\n    useEffect(() => {\n        setHistoryView(historyList.filter((action) => filterAction[action.equivalent.actionName]).map(parseAction));\n    }, [filterAction, historyList]);\n\n    const close = () => dispatcher({ type: T.SET_HISTORY_MODAL, payload: false });\n    return (\n        <Modal\n            ModelOpen={superState.viewHistory}\n            closeModal={close}\n            title=\"History\"\n        >\n            <div className=\"hist-container\">\n                <fieldset>\n                    <legend>Filters</legend>\n                    {\n                        actions.map((action) => (\n                            <label htmlFor={action} className=\"filter_checkbox\" key={action}>\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"filter\"\n                                    checked={filterAction[action]}\n                                    onChange={() => setFilterAction({\n                                        ...filterAction,\n                                        [action]: !filterAction[action],\n                                    })}\n                                />\n                                {stringifyActionType[action]}\n                            </label>\n                        ))\n                    }\n                </fieldset>\n                <div className=\"hist-list\">\n                    <table style={{ listStyleType: 'circle' }}>\n                        <tbody>\n                            {historyView.map((h, i) => (\n                                <tr\n                                    className={`hist-element ${i === curState ? 'active' : ''}`}\n                                    // eslint-disable-next-line react/no-array-index-key\n                                    key={i}\n                                >\n                                    {h}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default HistoryModal;\n","/* eslint-disable object-shorthand */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/state-in-constructor */\nimport React, { useEffect, useState } from 'react';\nimport FileBrowser from 'react-keyed-file-browser';\nimport { readFile, readTextFile } from '../toolbarActions/toolbarFunctions';\nimport { actionType as T } from '../reducer';\nimport './fileBrowser.css';\n\nconst LocalFileBrowser = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n\n    useEffect(() => {\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n    }, []);\n\n    const [fileState, setFileState] = useState([]);\n    // const [fileState, setFileState] = useState(() => {\n    //     let files = [];\n    //     files = [];\n    //     // if (window.localStorage.getItem('fileList')) {\n    //     //     files = JSON.parse(window.localStorage.getItem('fileList'));\n    //     //     console.log(files);\n    //     //     return files;\n    //     // }\n    //     return { files };\n    //     // files: [\n    //     // {\n    //     //     key: '/home/emory/Desktop/github',\n    //     //     modified: +Moment().subtract(1, 'hours'),\n    //     //     size: 1.5 * 1024 * 1024,\n    //     // },\n    //     // {\n    //     //     key: '/concore/demo/sample2.graphml',\n    //     //     modified: +Moment().subtract(3, 'days'),\n    //     //     size: 545 * 1024,\n    //     // },\n    //     // ],\n    // });\n\n    // TODO\n    useEffect(() => {\n        // if(window.localStorage.getItem('fileList')) {\n        //     const allFiles = window.localStorage.getItem('fileList');\n        //     setFileState({ files: allFiles });\n        // }\n        window.localStorage.setItem('fileList', JSON.stringify(fileState));\n    }, [fileState]);\n\n    // const handleCreateFolder = (key) => {\n    //     setFileState((state) => {\n    //         state.files = state.files.concat([{\n    //             key: key,\n    //         }]);\n    //         console.log(fileState);\n    //         return state;\n    //     });\n    // };\n\n    // TODO\n    // const handleCreateFiles = (files, prefix) => {\n    //     setFileState((state) => {\n    //         const newFiles = files.map((file) => {\n    //             let newKey = prefix;\n    //             if (prefix !== '' && prefix.substring(prefix.length - 1, prefix.length) !== '/') {\n    //                 newKey += '/';\n    //             }\n    //             newKey += file.name;\n    //             return {\n    //                 key: newKey,\n    //                 size: file.size,\n    //                 modified: +Moment(),\n    //             };\n    //         });\n\n    //         const uniqueNewFiles = [];\n    //         newFiles.map((newFile) => {\n    //             let exists = false;\n    //             state.files.map((existingFile) => {\n    //                 if (existingFile.key === newFile.key) {\n    //                     exists = true;\n    //                 }\n    //             });\n    //             if (!exists) {\n    //                 uniqueNewFiles.push(newFile);\n    //             }\n    //         });\n    //         state.files = state.files.concat(uniqueNewFiles);\n    //         return state;\n    //     });\n    // };\n\n    const handleSelectFile = (data) => {\n        if (data.fileObj.name.split('.').pop() === 'graphml') readFile(superState, dispatcher, data.fileObj);\n        else {\n            readTextFile(superState, dispatcher, data.fileObj);\n        }\n    };\n\n    return (\n        <div>\n            <input\n                type=\"file\"\n                ref={fileRef}\n                onClick={(e) => { e.target.value = null; }}\n                onChange={(e) => {\n                    setFileState((state) => {\n                        for (let i = 0; i < e.target.files.length; i += 1) {\n                            state = state.concat([{\n                                key: e.target.files[i].name,\n                                modified: e.target.files[i].lastModifiedDate,\n                                size: e.target.files[i].size,\n                                fileObj: e.target.files[i],\n                            }]);\n                        }\n                        return state;\n                    });\n                    window.localStorage.setItem('fileList', JSON.stringify(fileState));\n                }}\n                directory\n                webkitdirectory=\"true\"\n            />\n            <FileBrowser\n                files={fileState}\n                onSelectFile={handleSelectFile}\n                detailRenderer={() => null}\n                // TODO\n                // onCreateFolder={handleCreateFolder}\n                // onCreateFiles={handleCreateFiles}\n            />\n        </div>\n    );\n};\nexport default LocalFileBrowser;\n","import React, { useState, useEffect } from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport Modal from './ParentModal';\nimport './file-edit.css';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/themes/prism.css';\nimport { actionType as T } from '../../reducer';\n\nconst FileEditModal = ({ superState, dispatcher }) => {\n    const [codeStuff, setCodeStuff] = useState('');\n    const [fileName, setFileName] = useState('');\n    const close = () => dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    // TODO - Save file\n    async function submit() {\n        // eslint-disable-next-line prefer-const\n        // let fileHandle = superState.fileObj;\n        // console.log(fileHandle);\n        // const stream = await fileHandle.createWriter();\n        // await stream.write(codeStuff);\n        // await stream.close();\n        dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    useEffect(() => {\n        if (superState.fileObj) {\n            setFileName(superState.fileObj.name);\n            const fr = new FileReader();\n            fr.onload = (x) => {\n                setCodeStuff(x.target.result);\n            };\n            fr.readAsText(superState.fileObj);\n        }\n    }, [superState.fileObj]);\n\n    return (\n        <Modal\n            ModelOpen={superState.textFileModal}\n            closeModal={close}\n            title={fileName}\n        >\n            <div className=\"File Edit Container\">\n                <div\n                    style={{\n                        minHeight: '400px',\n                    }}\n                >\n                    <Editor\n                        value={codeStuff}\n                        onValueChange={(e) => setCodeStuff(e)}\n                        highlight={(code) => highlight(code, languages.js)}\n                        padding={10}\n                        style={{\n                            fontFamily: '\"Arial\"',\n                            fontSize: 16,\n                            minHeight: '100vh',\n                            minWidth: '80vw',\n                            border: '1px solid black',\n                        }}\n                    />\n                </div>\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default FileEditModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphWorkspace from './GraphWorkspace';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\nimport FileDragDrop from './component/File-drag-drop';\nimport HistoryModal from './component/modals/History';\nimport LocalFileBrowser from './component/fileBrowser';\nimport FileEditModal from './component/modals/FileEdit';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <HistoryModal superState={superState} dispatcher={dispatcher} />\n            <FileEditModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <FileDragDrop dispatcher={dispatcher} />\n            <Header superState={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <div style={{ flex: 15 }}>\n                    <LocalFileBrowser dispatcher={dispatcher} />\n                </div>\n                <div className=\"graph\" style={{ display: 'flex', overflow: 'hidden' }}>\n                    <GraphWorkspace dispatcher={dispatcher} superState={superState} />\n                </div>\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(bendData.bendDistance)',\n            segmentWeights: 'data(bendData.bendWeight)',\n            edgeDistances: 'node-position',\n            lineStyle: 'data(style.shape)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n    SET_BENDW: 'SET_BENDW',\n};\n"],"sourceRoot":""}