{"version":3,"sources":["graph-builder/graph-core/3-component.js","graph-builder/graph-core/2-canvas.js","graph-builder/graph-core/1-core.js","graph-builder/local-storage-manager.js","component/ZoomSetter.jsx","toolbarActions/toolbarFunctions.js","component/TabBar.jsx","graph-builder/graphml/builder/nodeML.js","graph-builder/graphml/builder/graphML.js","graph-builder/graphml/builder/edgeML.js","graph-builder/graphml/builder/index.js","graph-builder/graph-core/4-undo-redo.js","graph-builder/graphml/parser/PropFromArr.js","graph-builder/graphml/parser/parseProperties.js","graph-builder/graphml/parser/index.js","graph-builder/graph-core/index.js","graph-builder/graph-core/6-server.js","graph-builder/graph-core/5-load-save.js","graph-builder/calculations/boundary-point.js","graph-builder/index.js","graph-builder/tailored-graph-builder.js","GraphArea.jsx","config/defaultValidators.js","GraphWorkspace.jsx","component/modals/ParentModal.jsx","component/modals/GraphCompDetails.jsx","toolbarActions/toolbarList.js","component/HeaderComps.jsx","component/Header.jsx","component/modals/ProjectDetails.jsx","component/modals/ShareModal.jsx","component/CodeEdit.jsx","component/modals/Settings.jsx","component/File-drag-drop.jsx","component/modals/History.jsx","component/fileBrowser.jsx","component/modals/FileEdit.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx","graph-builder/calculations/bending-dist-weight.js","config/cytoscape-style.js","config/cytoscape-options.js","graph-builder/graph-actions.js","reducer/actionType.js","component/modals/NodeDetails.jsx","component/modals/EdgeDetails.jsx","config/defaultStyles.js","reducer/initialState.js","reducer/reducer.js"],"names":["GraphComponent","args","nodeValidator","edgeValidator","setEdgeNodeValidator","getTid","Date","getTime","allNodes","this","cy","$","start","x","y","found","i","length","nodePos","position","label","style","type","getPos","data","id","tid","node","add","group","addAction","actionName","GA","DEL_NODE","parameters","ADD_NODE","sourceID","targetID","getById","edgesWith","edges","getEdgesBetweenNodes","dists","Set","forEach","edge","target","bendDistance","d","has","bendWeight","bendPoint","BendingDistanceWeight","getWeightDistance","w","getBendingD","edgeData","bendData","parseBendinDW","source","DEL_EDGE","ADD_EDGE","addEdgeWithLabel","dispatcher","T","Model_Open_Create_Edge","cb","edgeLabel","edgeStyle","message","validiateEdge","ok","shouldUpdateLabel","UPDATE_NODE","getStyle","UPDATE_EDGE","key","val","UPDATE_DATA","connectedEdges","deleteEdge","json","remove","removed","jsonEd","isNode","deleteNode","pos","emit","dim","height","width","setPos","toString","indexOf","lastIndexOf","a","b","slice","trim","eval","map","sourceLabel","getRealSourceId","targetLabel","comp","validator","getNodesEdges","nodes","undefined","err","e","validiateComp","GraphCanvas","reset","removeListener","setZoomUI","on","Math","round","zoom","fit","v","elements","window","confirm","el","deleteElem","actionArr","SET_ZOOM_LEVEL","payload","element","superState","projectName","cytoscape","use","edgehandles","nodeEditing","Konva","gridGuide","cyOptions","container","bendNode","classes","registerEvents","initizialize","resizeToContentCueEnabled","setWidth","setHeight","isNoResizeMode","isNoControlsMode","snapToGridOnRelease","zoomDash","panGrid","preview","handlePosition","handleNodes","complete","c","addEdge","getElementById","shouldEmit","SET_PROJECT_DETAILS","value","graphID","serverID","els","ELE_UNSELECTED","every","isEdge","ids","ELE_SELECTED","selectDeselectEventHandler","scratch","addClass","evt","ev","hasClass","CoreGraph","getBendEdgePoint","DW","addBendChange","removeClass","resetAllComp","resetAllAction","parseFloat","getCoordinate","ALL_GRAPHS","localStorageManager","btoa","AUTHOR_NAME","allgs","localStorage","getItem","setItem","JSON","stringify","parse","atob","saveAllgs","Array","from","addEmptyIfNot","get","save","graphContent","addGraph","serializedJson","delete","removeItem","getAllGraphs","addToFront","Garr","unshift","getAuthorName","setAuthorName","authorName","clearGraph","getFileList","minZoom","GraphOption","maxZoom","marks","ZoomComp","myGraph","curGraphInstance","zoomValue","zoomLevel","className","role","tabIndex","onClick","resetZoom","onKeyDown","fitZoom","min","max","onChange","setZoom","included","getGraphFun","createNode","state","setState","Model_Open_Create_Node","validiateNode","addNode","editElement","eleSelectedPayload","Model_Open_Update_Node","retMessage","updateNode","labelAllowed","getLabel","Model_Open_Update_Edge","updateEdge","downloadImg","format","saveGraphMLFile","graph","graphs","curGraphIndex","fileHandle","createWritable","stream","write","saveToFolder","close","alert","readFile","file","fr","FileReader","name","split","pop","onload","ADD_GRAPH","graphML","result","fileName","readAsText","createFile","EDIT_TEXTFILE","show","newProject","NEW_GRAPH","clearAll","undo","redo","openShareModal","SET_SHARE_MODAL","viewHistory","SET_HISTORY_MODAL","TabBar","closeTab","stopPropagation","REMOVE_GRAPH","editCur","SET_EDIT_DETAILS_MODAL","React","useEffect","hotkeys","event","preventDefault","document","click","querySelector","bind","data-tip","size","CHANGE_TAB","data-for","place","effect","nodeML","posX","posY","opacity","shape","color","backgroundColor","borderColor","borderWidth","actionHistory","graphml","xmlns","for","edgedefault","edgeML","lineColor","lineWidth","configuration","sx","sy","tx","ty","builder","G","edg","thickness","X","xml2js","Builder","buildObject","GraphUndoRedo","props","methodsMapped","updateData","SET_POS","SET_DIM","setDim","SET_BENDW","setBendWightDist","curActionIndex","SET_UNDO","SET_REDO","prevPos","curPos","prevDim","curDim","prevDW","curDW","inverse","equivalent","splice","actionIdentity","sequencify","push","hash","md5","at","informUI","performAction","curTid","addPositionChange","addDimensionChange","obj","Object","r","keys","sort","k","PropFromArr","arr","flatenArr","flatArr","constructor","o","p","filter","s","t","propFromArr","property","any","S","A","F","mapByDefault","def","includes","parseNode","parseProps","parseInt","parseEdge","parseActionML","parser","graphMlCnt","Promise","resolve","Parser","parseString","grahMLObj","grahML","parseDetails","parseActionHistory","GraphServer","config","setServerID","IS_WORKFLOW_ON_SERVER","Boolean","autoSaveIntervalId","saveLocalStorage","saveAs","png","full","getName","jpg","nodeID","edgeID","shouldNodeBeSaved","all","nodeJson","shouldEdgeBeSaved","edgeJson","GraphLoadSave","stringifyAction","str","graphmlBuilder","jsonifyGraph","bytes","TextEncoder","encode","blob","Blob","navigator","userAgent","options","types","description","accept","showSaveFilePicker","handle","prompt","content","parseAction","setProjectName","clearTimeout","setTimeout","graphMLParser","then","graphObject","loadGraphFromLocalStorage","loadJson","boundaryPoint","getEq","P1","P2","m","getX1X2","Cn","P","h","B","C","D","getY1Y2","x1","x2","dist","getClosestEllipse","y1","y2","slope","setSubQ","S1","S2","getClosestRect","abs","Infinity","TailoredGraphBuilder","connectedNodes","juncNode","TailoredGraph","calJuncNodePos","juncNodeId","incomers","unselectify","ed","sourceNode","targetNode","sourceNodeStyle","juncNodePos","getBoundaryPoint","ungrabify","addAutoMove","addEdgeWithJuncNode","tidd","juncNodes","outgoers","addEdgeWithoutJuncNode","addEdgeAction","junctionNode","n1","n2","n","union","c1","c2","values","parNode","meanNbrPosition","setOfPos","posStr","Graph","graphContainerRef","active","useState","instance","setInstance","ref","useRef","setContainerDim","elToAss","current","offsetWidth","offsetHeight","set","setCurStatus","SET_CUR_INSTANCE","addEventListener","MyGraph","forcePullFromServer","setGraphML","initialiseNewGraph","zIndex","display","GraphComp","allSavedGs","ADD_GRAPH_BULK","flex","flexDirection","background","ReactModal","setAppElement","Modal","closeModal","ModelOpen","title","children","curClass","setCurClass","isOpen","setIsOpen","stid","setStid","contentLabel","overlayClassName","aria-hidden","ModalComp","setData","errorMessage","setErrorMessage","modalPayload","submitText","Children","defaultStyle","defaultLabel","ParentModal","onSubmit","toolbarList","text","icon","FaPlus","action","visibility","hotkey","FaFileImport","FaSave","saveToDisk","saveAction","FaThermometerEmpty","FaUndo","undoEnabled","FaRedo","redoEnabled","FaEdit","eleSelected","FaTrash","FaHistory","isWorkflowOnServer","FaToggleOn","FiToggleLeft","toggleServer","FaHammer","build","FaBug","debug","FiPlay","run","FaRegTimesCircle","clear","FiStopCircle","stop","FaBomb","destroy","FiTriangle","open","FaShare","FaDownload","fn","DropDown","Icon","menuButton","FileUploader","fileRef","Switcher","checked","ActionButton","fontSize","Vsep","Hsep","Space","Header","actions","replace","handler","shortcut","setHotKeys","ProjectDetails","curGraph","inputRef","useCallback","focus","newGraphModal","editDetailsModal","setProjAuthorName","SET_AUTHOR","authorNameE","openExisting","NewWorkflow","SET_NEW_GRAPH_MODAL","placeholder","required","ShareModal","serializedGraph","setSerializedGraph","copyText","setCopyText","cond","shareModal","serializeGraph","link","location","protocol","host","pathname","readOnly","clipboard","writeText","getElementsByClassName","select","CodeEdit","pre","post","docString","createRef","spellCheck","data-gramm_editor","SettingsModal","setNodeValidator","setEdgeValidator","getNodeValidator","getEdgeValidator","settingsModal","SET_SETTING_MODAL","app","SET_FILE_REF","getElementsByTagName","cc","classList","dragEvent","dataTransfer","files","HistoryModal","curState","setcurState","historyList","setHistoryList","historyView","setHistoryView","res","mapActionToTrue","filterAction","setFilterAction","getLabelFromID","reverse","stringifyActionType","prefixTid","index","DT","date","toLocaleDateString","time","toLocaleTimeString","tempCurState","undoSingleAction","redoSingleAction","restoreState","fontWeight","par","htmlFor","listStyleType","LocalFileBrowser","dirButton","setDirButton","fileState","setFileState","handleFileInDirs","topKey","topLevel","entries","valueSubDir","kind","getFile","fileData","concat","modified","lastModified","fileObj","newFeature","showDirectoryPicker","dirHandle","newFeatureFile","pickerOpts","excludeAcceptAllOption","multiple","showOpenFilePicker","webkitRelativePath","directory","webkitdirectory","disabled","onSelectFile","foundi","g","detailRenderer","fileRenderer","FileRenderers","TableFile","folderRenderer","FolderRenderers","TableFolder","FileEditModal","codeStuff","setCodeStuff","setFileName","submit","saveAsSubmit","saveSubmit","newFileName","textFileModal","onValueChange","highlight","code","fileEx","languages","verilog","cpp","python","matlab","bash","plaintext","highlightSyntax","padding","fontFamily","minHeight","minWidth","border","useReducer","reducer","initialState","Settings","History","FileEdit","GraphCompDetails","Model_Close","overflow","GraphWorkspace","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","rotate","Q","cos","sin","extraRad","PI","getRadian","tanQ","atan","selector","overlayOpacity","textValign","textHalign","curveStyle","targetArrowShape","targetArrowColor","segmentDistances","segmentWeights","edgeDistances","lineStyle","edgeTextRotation","textBackgroundOpacity","textBackgroundColor","textBackgroundShape","textBorderColor","textBorderWidth","textBorderOpacity","borderOpacity","overlayColor","overlayPadding","zoomingEnabled","userZoomingEnabled","zealit","require","$$typeof","TURN_DRAW","SET_ZOOM","ADD_GRAPH_INSTANCE","NodeDetails","textRef","widthSet","labelName","setLabelName","labelFile","setLabelFile","indexOfFile","prop","borderRadius","lname","list","item","some","substring","Triangle","EqTriangle","borderLeft","borderBottom","borderTop","marginLeft","EdgeDetails","borderBottomWidth","borderBottomColor","borderBottomStyle","NodeStyle","EdgeStyle","drawModeOn","initialGraphState","component","newState"],"mappings":"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","file":"static/js/main.395cd23c.chunk.js","sourcesContent":["import BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\nimport GraphCanvas from './2-canvas';\n\nclass GraphComponent extends GraphCanvas {\n    getTid;\n\n    nodeValidator;\n\n    edgeValidator;\n\n    addAction;\n\n    getRealSourceId;\n\n    constructor(...args) {\n        super(...args);\n        const [,,,,, nodeValidator, edgeValidator] = args;\n        this.setEdgeNodeValidator({ nodeValidator, edgeValidator });\n        this.getTid = () => new Date().getTime();\n    }\n\n    getPos() {\n        const allNodes = this.cy.$('node');\n        const start = { x: 100, y: 100 };\n        let found = true;\n        while (found) {\n            found = false;\n            for (let i = 0; i < allNodes.length; i += 1) {\n                const nodePos = allNodes[i].position();\n                found = found || (nodePos.x === start.x && nodePos.y === start.y);\n            }\n            if (found) {\n                start.x += 10;\n                start.y += 10;\n            }\n        }\n        return start;\n    }\n\n    addNode(label, style, type = 'ordin', position = this.getPos(),\n        data = {}, id, tid = this.getTid()) {\n        const node = this.cy.add({\n            group: 'nodes',\n            data: {\n                ...data, id, label, type, style,\n            },\n            position,\n        });\n        this.addAction(\n            { actionName: GA.DEL_NODE, parameters: [node.id()] },\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [label, style, type, position, data, node.id()],\n            },\n            tid,\n        );\n        return node;\n    }\n\n    getEdgesBetweenNodes(sourceID, targetID) {\n        return this.getById(sourceID).edgesWith(this.getById(targetID));\n    }\n\n    getBendingD(sourceID, targetID) {\n        const edges = this.getEdgesBetweenNodes(sourceID, targetID);\n        const dists = new Set();\n        edges.forEach((edge) => {\n            if (targetID === edge.target().id()) dists.add(edge.data('bendData').bendDistance);\n            else dists.add(-edge.data('bendData').bendDistance);\n        });\n        for (let d = 0; ;d += 20) {\n            if (!dists.has(d)) return d;\n            if (!dists.has(-d)) return -d;\n        }\n    }\n\n    parseBendinDW({\n        sourceID, targetID, type, bendWeight, bendDistance, bendPoint,\n    }) {\n        if (type !== 'ordin') return { bendDistance: 0, bendWeight: 0 };\n        if (bendDistance && bendWeight) return { bendDistance, bendWeight };\n        if (bendPoint) {\n            const { x, y } = bendPoint;\n            const { d, w } = BendingDistanceWeight.getWeightDistance(\n                { x, y }, this.getById(sourceID).position(), this.getById(targetID).position(),\n            );\n            return { bendDistance: d, bendWeight: w };\n        }\n        return { bendDistance: this.getBendingD(sourceID, targetID), bendWeight: 0.5 };\n    }\n\n    addEdgeWithLabel(edgeData, tid = this.getTid()) {\n        const { type = 'ordin' } = edgeData;\n        const bendData = this.parseBendinDW({ ...edgeData, ...edgeData.bendData });\n        const edge = this.cy.add({\n            group: 'edges',\n            data: {\n                ...edgeData, source: edgeData.sourceID, target: edgeData.targetID, type, bendData,\n            },\n        });\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [edge.id()] },\n            { actionName: GA.ADD_EDGE, parameters: [{ ...edgeData, id: edge.id() }] },\n            tid,\n        );\n\n        return edge;\n    }\n\n    addEdge(edgeData, tid = this.getTid()) {\n        if ((edgeData.type && edgeData.type !== 'ordin') || edgeData.label) {\n            return this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n        }\n        this.dispatcher({\n            type: T.Model_Open_Create_Edge,\n            cb: (edgeLabel, edgeStyle) => {\n                const message = this.validiateEdge(edgeLabel, edgeStyle,\n                    edgeData.targetID, edgeData.targetID, null, 'New');\n                if (message.ok) this.addEdgeWithLabel({ ...edgeData, type: edgeData.type || 'ordin' }, tid);\n                return message;\n            },\n        });\n        return undefined;\n    }\n\n    getStyle(id) {\n        return this.getById(id).data('style');\n    }\n\n    getLabel(id) {\n        return this.getById(id).data('label') || this.getById(id).data('label');\n    }\n\n    updateNode(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_NODE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_NODE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        if (shouldUpdateLabel) this.getById(id).data('label', label);\n        this.getById(id).data('style', style);\n    }\n\n    updateData(id, key, val, tid = this.getTid()) {\n        this.addAction(\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, this.getById(id).data(key)] },\n            { actionName: GA.UPDATE_DATA, parameters: [id, key, val] }, tid,\n        );\n        this.getById(id).data(key, val);\n        return this;\n    }\n\n    deleteNode(id, tid = this.getTid()) {\n        const node = this.getById(id);\n        node.connectedEdges('[type=\"ordin\"]').forEach((edge) => this.deleteEdge(edge.id(), tid));\n        node.connectedEdges().forEach((edge) => this.deleteEdge(edge.id(), tid));\n        this.addAction(\n            {\n                actionName: GA.ADD_NODE,\n                parameters: [\n                    node.data('label'), this.getStyle(node.id()), node.data('type'),\n                    node.position(), node.json().data, id,\n                ],\n            },\n            { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n        );\n        node.remove();\n    }\n\n    deleteEdge(id, tid = this.getTid()) {\n        if (this.getById(id).length === 0 || this.getById(id).removed()) return;\n        const jsonEd = this.getById(id).json();\n        this.addAction(\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{\n                    ...jsonEd.data, sourceID: jsonEd.data.source, targetID: jsonEd.data.target,\n                }],\n            },\n            { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n        );\n        this.getById(id).remove();\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        if (this.getById(id).isNode()) return this.deleteNode(id, tid);\n        return this.deleteEdge(id, tid);\n    }\n\n    setPos(id, pos) {\n        this.getById(id).position(pos);\n        this.getById(id).emit('moved');\n    }\n\n    setDim(id, dim, pos) {\n        const style = this.getById(id).data('style');\n        this.getById(id).data('style', { ...style, height: dim.height, width: dim.width });\n        this.setPos(id, pos);\n    }\n\n    getNodeValidator() {\n        const [a, b] = [this.nodeValidator.toString().indexOf('{'), this.nodeValidator.toString().lastIndexOf('}')];\n        return this.nodeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    getEdgeValidator() {\n        const [a, b] = [this.edgeValidator.toString().indexOf('{'), this.edgeValidator.toString().lastIndexOf('}')];\n        return this.edgeValidator.toString().slice(a + 1, b).trim();\n    }\n\n    setEdgeNodeValidator({ nodeValidator, edgeValidator }) {\n        // eslint-disable-next-line no-eval\n        this.nodeValidator = eval(nodeValidator);\n        // eslint-disable-next-line no-eval\n        this.edgeValidator = eval(edgeValidator);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = this.cy.$('edge[type=\"ordin\"]').map((edge) => ({\n            label: edge.data('label'),\n            sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n            targetLabel: edge.target().data('label'),\n            style: edge.data('style'),\n            id: edge.data('id'),\n        }));\n        return [nodes, edges];\n    }\n\n    validiateComp(comp, validator, type) {\n        const [nodes, edges] = this.getNodesEdges();\n        try {\n            const message = validator(comp, nodes, edges, type);\n            if (message && message.ok !== undefined && message.err !== undefined) return message;\n            return { ok: false, err: 'Invalid return format from the defined validator.' };\n        } catch (e) {\n            return { ok: false, err: `Error raised at validator: ${e.message}` };\n        }\n    }\n\n    validiateNode(label, style, id, type) {\n        if (id) {\n            const node = this.getById(id);\n            return this.validiateComp({\n                label: label || node.data('label'),\n                style: style || node.data('style'),\n                id,\n            }, this.nodeValidator, type);\n        }\n        return this.validiateComp({ label, style, id }, this.nodeValidator, type);\n    }\n\n    validiateEdge(label, style, sourceID, targetID, id, type) {\n        if (id) {\n            const edge = this.getById(id);\n            return this.validiateComp({\n                label: label || edge.data('label'),\n                style: style || edge.data('style'),\n                sourceLabel: this.getById(this.getRealSourceId(edge.source().id())).data('label'),\n                targetLabel: edge.target().data('label'),\n                id,\n            }, this.edgeValidator, type);\n        }\n        return this.validiateComp({\n            label,\n            style,\n            sourceLabel: this.getById(this.getRealSourceId(sourceID)).data('label'),\n            targetLabel: this.getById(targetID).data('label'),\n            id,\n        }, this.edgeValidator, type);\n    }\n}\n\nexport default GraphComponent;\n","// import GraphUndoRedo from './graph-undo-redo';\nimport Core from './1-core';\nimport { actionType as T } from '../../reducer';\n\nclass GraphCanvas extends Core {\n    setZoomUI;\n\n    resetZoom() {\n        this.cy.reset();\n    }\n\n    setOnZoom(cb) {\n        this.cy.removeListener('zoom');\n        this.setZoomUI = cb;\n        this.cy.on('zoom', (e) => cb(Math.round(100 * e.target.zoom())));\n    }\n\n    fitZoom() {\n        this.cy.fit();\n    }\n\n    setZoom(v) {\n        this.cy.zoom(v / 100);\n    }\n\n    getZoom() {\n        return Math.round(this.cy.zoom() * 100);\n    }\n\n    clearAll() {\n        if (this.cy.elements().length === 0) return true;\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do want to clear all elements?')) return false;\n        this.cy.elements().forEach((el) => this.deleteElem(el.id(), 0));\n        this.actionArr = [];\n        this.cy.emit('graph-modified');\n        return true;\n    }\n\n    resetAllComp() {\n        this.cy.elements().remove();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.SET_ZOOM_LEVEL, payload: Math.round(this.cy.zoom() * 100) });\n    }\n}\n\nexport default GraphCanvas;\n","import cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport gridGuide from 'cytoscape-grid-guide';\nimport Konva from 'konva';\nimport nodeEditing from 'cytoscape-node-editing';\nimport $ from 'jquery';\nimport cyOptions from '../../config/cytoscape-options';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport { actionType as T } from '../../reducer';\n\nclass CoreGraph {\n    dispatcher;\n\n    superState;\n\n    id;\n\n    projectName;\n\n    cy;\n\n    bendNode;\n\n    constructor(id, element, dispatcher, superState, projectName) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (typeof cytoscape('core', 'edgehandles') !== 'function') {\n            cytoscape.use(edgehandles);\n        }\n        if (typeof cytoscape('core', 'nodeEditing') !== 'function') {\n            nodeEditing(cytoscape, $, Konva);\n        }\n        if (typeof cytoscape('core', 'gridGuide') !== 'function') {\n            gridGuide(cytoscape);\n        }\n        // if (cy) this.cy = cy;\n        this.cy = cytoscape({ ...cyOptions, container: element });\n        this.id = id;\n        this.projectName = projectName;\n        this.cy.emit('graph-modified');\n        this.bendNode = this.cy.add(\n            { group: 'nodes', data: { type: 'bend' }, classes: ['hidden'] },\n        );\n        this.registerEvents();\n        this.cy.emit('graph-modified');\n        this.initizialize();\n    }\n\n    initizialize() {\n        this.cy.nodeEditing({\n            resizeToContentCueEnabled: () => false,\n            setWidth(node, width) {\n                node.data('style', { ...node.data('style'), width });\n            },\n            setHeight(node, height) {\n                node.data('style', { ...node.data('style'), height });\n            },\n            isNoResizeMode(node) { return node.data('type') !== 'ordin'; },\n            isNoControlsMode(node) { return node.data('type') !== 'ordin'; },\n        });\n\n        this.cy.gridGuide({\n            snapToGridOnRelease: false,\n            zoomDash: true,\n            panGrid: true,\n        });\n        this.cy.edgehandles({\n            preview: false,\n            handlePosition() {\n                return 'none';\n            },\n            handleNodes: 'node[type = \"ordin\"],node[type = \"special\"]',\n            complete: (a, b, c) => { c.remove(); this.addEdge({ sourceID: a.id(), targetID: b.id() }); },\n        });\n    }\n\n    getById(x) {\n        return this.cy.getElementById(x);\n    }\n\n    getLabelFromID(x) {\n        return this.getById(x).data('label') || '**Deleted El**';\n    }\n\n    set({\n        cy, dispatcher, superState, projectName,\n    }) {\n        if (dispatcher) this.dispatcher = dispatcher;\n        if (superState) this.superState = superState;\n        if (cy) this.cy = cy;\n        if (projectName) this.projectName = projectName;\n    }\n\n    setProjectName(projectName, shouldEmit = true) {\n        this.projectName = projectName;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: projectName,\n                    graphID: this.id,\n                    type: 'projectName',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    setServerID(serverID, shouldEmit = true) {\n        this.serverID = serverID;\n        if (shouldEmit) {\n            this.dispatcher({\n                type: T.SET_PROJECT_DETAILS,\n                payload: {\n                    value: serverID,\n                    graphID: this.id,\n                    type: 'serverID',\n                },\n            });\n        }\n        this.cy.emit('graph-modified');\n    }\n\n    selectDeselectEventHandler() {\n        const els = this.cy.$(':selected');\n        if (els.length === 0) { return this.dispatcher({ type: T.ELE_UNSELECTED }); }\n        let type;\n        if (els.every((e) => e.isNode())) type = 'NODE';\n        else if (els.every((e) => e.isEdge())) type = 'EDGE';\n        else type = 'MIX';\n        const ids = els.map((e) => e.data('id'));\n        return this.dispatcher({\n            type: T.ELE_SELECTED,\n            payload: {\n                ids, type,\n            },\n        });\n    }\n\n    registerEvents() {\n        this.cy.on('select unselect', () => this.selectDeselectEventHandler());\n        this.cy.on('grab', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                node.scratch('position', { ...node.position() });\n            });\n        });\n\n        this.cy.on('nodeediting.resizestart', (e, type, node) => {\n            node.scratch('height', node.data('style').height);\n            node.scratch('width', node.data('style').width);\n            node.scratch('position', { ...node.position() });\n        });\n\n        this.cy.on('hide-bend remove', () => {\n            this.bendNode.removeListener('drag grab dragfree'); this.bendNode.addClass('hidden');\n        });\n\n        this.cy.on('grabon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('hide-bend') : 0));\n        this.cy.on('freeon', (evt) => (evt.target[0].data('type') !== 'bend' ? this.cy.emit('show-bend') : 0));\n\n        this.cy.on('click tap', (ev) => {\n            if (ev.target === this.cy) {\n                this.cy.emit('hide-bend');\n                this.cy.$('.eh-handle').remove();\n            }\n        });\n        this.cy.on('select unselect show-bend', () => {\n            const el = this.cy.$(':selected');\n            if (el.length !== 1 || !el[0].isEdge()) this.cy.emit('hide-bend');\n            return el.emit('bend-edge');\n        });\n        this.cy.on('mouseover', 'edge', (ev) => {\n            ev.target.emit('bend-edge');\n        });\n\n        this.cy.on('bend-edge', 'edge', (ev) => {\n            if (!this.bendNode.hasClass('hidden')) this.cy.emit('hide-bend');\n            const el = ev.target;\n            this.bendNode.position(CoreGraph.getBendEdgePoint(el));\n            this.bendNode.on('drag', () => {\n                const DW = BendingDistanceWeight.getWeightDistance(\n                    this.bendNode.position(), el.source().position(), el.target().position(),\n                );\n                el.data('bendData', { bendDistance: DW.d, bendWeight: DW.w });\n                ev.target.emit('bending');\n            });\n            this.bendNode.on('grab', () => {\n                const node = el;\n                node.scratch('bendDistWeight', el.data('bendData'));\n            });\n            this.bendNode.on('dragfree', () => {\n                const node = el;\n                this.addBendChange(node.id(), node.scratch('bendDistWeight'), el.data('bendData'));\n            });\n            this.bendNode.removeClass('hidden');\n        });\n    }\n\n    setBendWightDist(id, DW) {\n        this.getById(id).data('bendData', DW);\n    }\n\n    static getBendEdgePoint(el) {\n        const { bendWeight, bendDistance } = el.data('bendData');\n        const w = parseFloat(bendWeight);\n        const d = parseFloat(bendDistance);\n        return BendingDistanceWeight.getCoordinate(w, d, el.source().position(), el.target().position());\n    }\n\n    setCurStatus() {\n        this.selectDeselectEventHandler();\n    }\n\n    reset() {\n        this.resetAllComp();\n        this.resetAllAction();\n    }\n}\n\nexport default CoreGraph;\n","const getSet = (ALL_GRAPHS) => {\n    if (!window.localStorage.getItem(ALL_GRAPHS)) {\n        window.localStorage.setItem(ALL_GRAPHS, window.btoa(JSON.stringify([])));\n    }\n    return new Set(JSON.parse(window.atob(window.localStorage.getItem(ALL_GRAPHS))));\n};\n\nconst localStorageManager = {\n    ALL_GRAPHS: window.btoa('ALL_GRAPHS'),\n    AUTHOR_NAME: window.btoa('AUTHOR_NAME'),\n\n    allgs: getSet(window.btoa('ALL_GRAPHS')),\n\n    saveAllgs() {\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Array.from(this.allgs))));\n    },\n\n    addEmptyIfNot() {\n        if (!window.localStorage.getItem(this.ALL_GRAPHS)) {\n            window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify([])));\n        }\n    },\n\n    get(id) {\n        if (window.localStorage.getItem(id) === null) return null;\n        return JSON.parse(window.atob(window.localStorage.getItem(id)));\n    },\n    save(id, graphContent) {\n        this.addGraph(id);\n        const serializedJson = JSON.stringify(graphContent);\n        window.localStorage.setItem(id, window.btoa(serializedJson));\n    },\n    remove(id) {\n        if (this.allgs.delete(id)) this.saveAllgs();\n        localStorage.removeItem(id);\n    },\n    addGraph(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        this.saveAllgs();\n    },\n    getAllGraphs() {\n        return JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n    },\n    addToFront(id) {\n        if (this.allgs.has(id)) return;\n        this.allgs.add(id);\n        const Garr = JSON.parse(window.atob(window.localStorage.getItem(this.ALL_GRAPHS)));\n        Garr.unshift(id);\n        window.localStorage.setItem(this.ALL_GRAPHS, window.btoa(JSON.stringify(Garr)));\n    },\n    getAuthorName() {\n        return localStorage.getItem(this.AUTHOR_NAME) || '';\n    },\n    setAuthorName(authorName) {\n        localStorage.setItem(this.AUTHOR_NAME, authorName);\n    },\n    clearGraph(id) {\n        window.localStorage.removeItem(id);\n    },\n    getFileList() {\n        return localStorage.getItem('fileList') || '';\n    },\n};\nexport default localStorageManager;\n","import Slider from 'rc-slider';\nimport React from 'react';\nimport { BiReset, BiRectangle } from 'react-icons/bi';\nimport 'rc-slider/assets/index.css';\nimport './zoomSetter.css';\nimport GraphOption from '../config/cytoscape-options';\nimport { actionType as T } from '../reducer';\n\nconst { minZoom, maxZoom } = GraphOption;\nconst marks = {};\n\nconst ZoomComp = ({ superState, dispatcher }) => {\n    const myGraph = superState.curGraphInstance;\n    if (!myGraph) return <></>;\n    const zoomValue = superState.zoomLevel;\n    return (\n        <div>\n            <div className=\"zoom-comp\">\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.resetZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiReset />\n\n                </div>\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"zoom-box zoom-btn\"\n                    onClick={() => myGraph.fitZoom()}\n                    onKeyDown={(ev) => ev.key === ' ' && (myGraph.resetZoom())}\n                >\n                    <BiRectangle />\n\n                </div>\n                <div className=\"zoom-box zoom-value\">\n                    {zoomValue}\n                    %\n                </div>\n                <div className=\"slider\">\n                    <Slider\n                        min={100 * minZoom}\n                        max={100 * maxZoom}\n                        marks={marks}\n                        onChange={\n                            (value) => {\n                                myGraph.setZoom(value);\n                                dispatcher({ type: T.SET_ZOOM_LEVEL, payload: value });\n                            }\n                        }\n                        included={false}\n                        value={zoomValue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ZoomComp;\n","import { actionType as T } from '../reducer';\n\nconst getGraphFun = (superState) => superState.curGraphInstance;\n\nconst createNode = (state, setState) => {\n    setState({\n        type: T.Model_Open_Create_Node,\n        cb: (label, style) => {\n            const message = getGraphFun(state).validiateNode(label, style, null, 'New');\n            if (message.ok) getGraphFun(state).addNode(label, style);\n            return message;\n        },\n    });\n};\n\nconst editElement = (state, setState) => {\n    const shouldUpdateLabel = state.eleSelectedPayload.ids.length === 1;\n    const tid = new Date().getTime();\n    if (state.eleSelectedPayload.type === 'NODE') {\n        setState({\n            type: T.Model_Open_Update_Node,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateNode(\n                        shouldUpdateLabel ? label : null, style, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateNode(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n    if (state.eleSelectedPayload.type === 'EDGE') {\n        setState({\n            type: T.Model_Open_Update_Edge,\n            cb: (label, style) => {\n                const retMessage = { ok: true, err: null };\n                state.eleSelectedPayload.ids.forEach((id) => {\n                    const message = getGraphFun(state).validiateEdge(\n                        shouldUpdateLabel ? label : null, style, null, null, id, 'Update',\n                    );\n                    retMessage.ok = retMessage.ok && message.ok;\n                    retMessage.err = retMessage.err || message.err;\n                });\n                if (retMessage.ok) {\n                    state.eleSelectedPayload.ids.forEach(\n                        (id) => getGraphFun(state).updateEdge(id, style, label, shouldUpdateLabel, tid),\n                    );\n                }\n                return retMessage;\n            },\n            labelAllowed: shouldUpdateLabel,\n            label: getGraphFun(state).getLabel(state.eleSelectedPayload.ids[0]),\n            style: getGraphFun(state).getStyle(state.eleSelectedPayload.ids[0]),\n        });\n    }\n};\n\nconst deleteElem = (state) => {\n    const tid = new Date().getTime();\n    state.eleSelectedPayload.ids.forEach((id) => getGraphFun(state).deleteElem(id, tid));\n};\n\nconst downloadImg = (state, setState, format) => {\n    getGraphFun(state).downloadImg(format);\n};\n\nconst saveAction = (state) => {\n    getGraphFun(state).saveToDisk();\n};\n\nasync function saveGraphMLFile(state) {\n    if (state.curGraphInstance) {\n        const graph = state.graphs[state.curGraphIndex];\n        if (graph.fileHandle) {\n            const stream = await graph.fileHandle.createWritable();\n            await stream.write(getGraphFun(state).saveToFolder());\n            await stream.close();\n        } else {\n            // eslint-disable-next-line no-alert\n            alert('Switch to Edge/Chrome!');\n        }\n    } else {\n        // eslint-disable-next-line no-alert\n        alert('Switch to Edge/Chrome!');\n    }\n}\n\nconst readFile = (state, setState, file, fileHandle) => {\n    if (file) {\n        const fr = new FileReader();\n        const projectName = file.name;\n        if (file.name.split('.').pop() === 'graphml') {\n            fr.onload = (x) => {\n                setState({\n                    type: T.ADD_GRAPH,\n                    payload: {\n                        projectName, graphML: x.target.result, fileHandle, fileName: file.name,\n                    },\n                });\n            };\n            fr.readAsText(file);\n        }\n    }\n};\n\nconst readTextFile = (state, setState, file, fileHandle) => {\n    if (file) {\n        setState({\n            type: T.EDIT_TEXTFILE,\n            payload: { show: true, fileObj: file, fileHandle },\n        });\n    }\n};\n\nconst createFile = (state, setState) => {\n    setState({\n        type: T.EDIT_TEXTFILE,\n        payload: { show: true },\n    });\n};\n\nconst newProject = (state, setState) => {\n    setState({ type: T.NEW_GRAPH });\n};\n\nconst clearAll = (state) => {\n    getGraphFun(state).clearAll();\n};\n\nconst editDetails = (state, setState) => {\n    setState({\n        type: T.SET_EDIT_DETAILS_MODAL,\n        payload: true,\n    });\n};\n\nconst undo = (state) => {\n    if (getGraphFun(state)) getGraphFun(state).undo();\n};\nconst redo = (state) => {\n    getGraphFun(state).redo();\n};\n\nconst openShareModal = (state, setState) => {\n    setState({ type: T.SET_SHARE_MODAL, payload: true });\n};\n\nconst openSettingModal = (state, setState) => {\n    setState({ type: T.SET_SETTING_MODAL, payload: true });\n};\n\nconst viewHistory = (state, setState) => {\n    setState({ type: T.SET_HISTORY_MODAL, payload: true });\n};\n\nconst toggleServer = (state, dispatcher) => {\n    if (state.isWorkflowOnServer) {\n        dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: false });\n    } else {\n        dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: true });\n    }\n};\n\nexport {\n    createNode, editElement, deleteElem, downloadImg, saveAction, saveGraphMLFile,\n    createFile, readFile, readTextFile, newProject, clearAll, editDetails, undo, redo,\n    openShareModal, openSettingModal, viewHistory,\n    toggleServer,\n};\n","import React from 'react';\nimport {\n    MdEdit, MdClose, MdAdd,\n} from 'react-icons/md';\nimport hotkeys from 'hotkeys-js';\nimport ReactTooltip from 'react-tooltip';\nimport localStorageManager from '../graph-builder/local-storage-manager';\nimport { actionType as T } from '../reducer';\nimport { newProject, editDetails } from '../toolbarActions/toolbarFunctions';\nimport './tabBar.css';\n\nconst TabBar = ({ superState, dispatcher }) => {\n    const closeTab = (i, e) => {\n        e.stopPropagation();\n        // eslint-disable-next-line no-alert\n        if (!window.confirm('Do you confirm to close the tab? This action is irreversable.')) return;\n        localStorageManager.remove(superState.graphs[i] ? superState.graphs[i].graphID : null);\n        dispatcher({ type: T.REMOVE_GRAPH, payload: i });\n    };\n    const editCur = (e) => {\n        e.stopPropagation();\n        editDetails(superState, dispatcher);\n    };\n    React.useEffect(() => {\n        hotkeys('ctrl+shift+m,command+shift+m', (event) => {\n            event.preventDefault();\n            document.getElementById('new_graph').click();\n        });\n        hotkeys('ctrl+shift+e,command+shift+e', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.edit');\n            if (el) el.click();\n        });\n        hotkeys('ctrl+shift+l,command+shift+l', (event) => {\n            event.preventDefault();\n            const el = document.querySelector('.tab.tab-graph.selected > .tab-act.close');\n            if (el) el.click();\n        });\n    }, []);\n\n    return (\n        <div className=\"tab-par\">\n            <button\n                className=\"tab\"\n                onClick={newProject.bind(this, superState, dispatcher)}\n                type=\"button\"\n                id=\"new_graph\"\n                data-tip=\"New Workflow Tab (Ctrl + Shift + M)\"\n            >\n                <MdAdd size={25} />\n            </button>\n            {superState.graphs.map((el, i) => (\n                <div\n                    key={el.graphID}\n                    className={`tab tab-graph ${superState.curGraphIndex === i ? 'selected' : 'none'}`}\n                    onClick={() => dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    onKeyDown={(ev) => ev.key === ' ' && dispatcher({ type: T.CHANGE_TAB, payload: i })}\n                    role=\"button\"\n                    tabIndex={0}\n                    id={`tab_${i}`}\n                >\n                    <span className=\"tab-text\">\n                        {el.fileName || el.projectName}\n                    </span>\n\n                    {superState.curGraphIndex === i ? (\n                        <button\n                            className=\"tab-act edit\"\n                            onClick={editCur}\n                            type=\"button\"\n                            data-tip=\"Edit Workflow Details (Ctrl + Shift + E)\"\n                            data-for=\"header-tab\"\n                        >\n                            <MdEdit size={16} />\n                        </button>\n                    ) : <></>}\n                    <button\n                        className=\"tab-act close\"\n                        onClick={closeTab.bind(this, i)}\n                        type=\"button\"\n                        data-tip=\"Close current Workflow (Ctrl + Shift + L)\"\n                        data-for=\"header-tab\"\n                    >\n                        <MdClose size={20} />\n                    </button>\n                    <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" id=\"header-tab\" />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TabBar;\n","const nodeML = ({\n  label, id, posX, posY, width, height, opacity, shape, backgroundColor, borderColor, borderWidth,\n}) => ({\n  $: {\n    id,\n  },\n  data: [\n    {\n      $: {\n        key: 'd6',\n      },\n      'y:ShapeNode': [\n        {\n          'y:Geometry': [\n            {\n              $: {\n                height,\n                width,\n                x: posX,\n                y: posY,\n              },\n            },\n          ],\n          'y:Fill': [\n            {\n              $: {\n                color: backgroundColor,\n                opacity,\n              },\n            },\n          ],\n          'y:BorderStyle': [\n            {\n              $: {\n                color: borderColor,\n                width: borderWidth,\n              },\n            },\n          ],\n          'y:NodeLabel': [label],\n          'y:Shape': [\n            {\n              $: {\n                type: shape,\n              },\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default nodeML;\n","const graphML = ({\n  nodes, edges, id, projectName, actionHistory, serverID, fileHandle, fileName,\n}) => ({\n  graphml: {\n    $: {\n      xmlns: 'http://graphml.graphdrawing.org/xmlns',\n      'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation': 'http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd',\n      'xmlns:y': 'http://www.yworks.com/xml/graphml',\n    },\n    key: [\n      {\n        $: {\n          for: 'node',\n          id: 'd6',\n          'yfiles.type': 'nodegraphics',\n        },\n      },\n      {\n        $: {\n          for: 'edge',\n          id: 'd10',\n          'yfiles.type': 'edgegraphics',\n        },\n      },\n    ],\n    graph: [\n      {\n        $: {\n          edgedefault: 'directed',\n          id,\n          projectName,\n          serverID,\n          fileHandle,\n          fileName,\n        },\n        node: nodes,\n        edge: edges,\n        actionHistory,\n      },\n    ],\n  },\n});\n\nexport default graphML;\n","const edgeML = ({\n  id, label, source, target, lineColor, lineWidth, bendPoint, type,\n}) => ({\n  $: {\n    id,\n    source,\n    target,\n  },\n  data: [\n    {\n      $: {\n        key: 'd10',\n      },\n      'y:GenericEdge': [\n        {\n          $: {\n            configuration: 'com.yworks.bpmn.Connection',\n          },\n          'y:LineStyle': [\n            {\n              $: {\n                color: lineColor,\n                width: lineWidth,\n                type,\n              },\n            },\n          ],\n          'y:Arrows': [\n            {\n              $: {\n                source: 'none',\n                target: 'delta',\n              },\n            },\n          ],\n          'y:EdgeLabel': [label],\n          'y:Path': [\n            {\n              $: {\n                sx: '0.0',\n                sy: '0.0',\n                tx: '0.0',\n                ty: '0.0',\n              },\n              'y:Point': [\n                { $: bendPoint },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n\nexport default edgeML;\n","import xml2js from 'xml2js';\nimport nodeML from './nodeML';\nimport graphML from './graphML';\nimport edgeML from './edgeML';\n\nconst builder = (G) => {\n    const nodes = G.nodes.map((node) => (nodeML({\n        label: node.label,\n        id: node.id,\n        posX: node.position.x,\n        posY: node.position.y,\n        ...node.style,\n    })));\n    const edges = G.edges.map((edg, i) => edgeML({\n        id: i,\n        label: edg.label,\n        source: edg.source,\n        target: edg.target,\n        lineColor: edg.style.backgroundColor,\n        lineWidth: edg.style.thickness,\n        bendPoint: edg.bendData.bendPoint,\n        type: edg.style.shape,\n    }));\n    const X = graphML({\n        nodes,\n        edges,\n        projectName: G.projectName,\n        id: G.id,\n        actionHistory: G.actionHistory,\n        serverID: G.serverID,\n        fileHandle: G.fileHandle,\n        fileName: G.fileName,\n    });\n    const xml = new xml2js.Builder().buildObject(X);\n    return xml;\n};\nexport default builder;\n","import md5 from 'md5';\nimport GraphComponent from './3-component';\nimport GA from '../graph-actions';\nimport { actionType as T } from '../../reducer';\n\nclass GraphUndoRedo extends GraphComponent {\n    static methodsMapped\n\n    actionArr\n\n    curActionIndex\n\n    constructor(...props) {\n        super(...props);\n\n        this.methodsMapped = {\n            [GA.ADD_NODE]: (...args) => this.addNode(...args, 0),\n            [GA.ADD_EDGE]: (...args) => this.addEdge(...args, 0),\n            [GA.UPDATE_NODE]: (...args) => this.updateNode(...args, 0),\n            [GA.UPDATE_EDGE]: (...args) => this.updateEdge(...args, 0),\n            [GA.UPDATE_DATA]: (...args) => this.updateData(...args, 0),\n            [GA.DEL_NODE]: (...args) => this.deleteNode(...args, 0),\n            [GA.DEL_EDGE]: (...args) => this.deleteElem(...args, 0),\n            [GA.SET_POS]: (...args) => this.setPos(...args, 0),\n            [GA.SET_DIM]: (...args) => this.setDim(...args, 0),\n            [GA.SET_BENDW]: (...args) => this.setBendWightDist(...args),\n        };\n\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    resetAllAction() {\n        this.actionArr = [];\n        this.curActionIndex = 0;\n    }\n\n    informUI() {\n        this.dispatcher({ type: T.SET_UNDO, payload: this.curActionIndex !== 0 });\n        this.dispatcher({ type: T.SET_REDO, payload: this.curActionIndex !== this.actionArr.length });\n    }\n\n    performAction({ actionName, parameters }) {\n        const action = this.methodsMapped[actionName];\n        action(...parameters);\n    }\n\n    addPositionChange(id, prevPos, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_POS, parameters: [id, prevPos, curPos] },\n            { actionName: GA.SET_POS, parameters: [id, curPos, prevPos] }, tid,\n        );\n    }\n\n    addDimensionChange(id, prevDim, prevPos, curDim, curPos) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_DIM, parameters: [id, prevDim, prevPos] },\n            { actionName: GA.SET_DIM, parameters: [id, curDim, curPos] }, tid,\n        );\n    }\n\n    addBendChange(id, prevDW, curDW) {\n        const tid = new Date().getTime();\n        this.addAction(\n            { actionName: GA.SET_BENDW, parameters: [id, prevDW] },\n            { actionName: GA.SET_BENDW, parameters: [id, curDW] }, tid,\n        );\n    }\n\n    static sequencify(obj) {\n        if (!(obj instanceof Object)) return obj;\n        let r = [];\n        if (obj instanceof Array) {\n            r = obj.map(GraphUndoRedo.sequencify);\n        } else {\n            Object.keys(obj).sort().forEach((k) => {\n                r.push(`:${k}:`);\n                r.push(GraphUndoRedo.sequencify(obj[k]));\n            });\n        }\n        return r;\n    }\n\n    addAction(inverse, equivalent, tid, authorName = this.superState.authorName) {\n        if (tid === 0) return;\n        this.actionArr.splice(this.curActionIndex);\n\n        const actionIdentity = GraphUndoRedo.sequencify(equivalent).toString()\n            + GraphUndoRedo.sequencify(equivalent).toString()\n            + tid\n            + authorName;\n        this.actionArr.push({\n            tid,\n            inverse,\n            equivalent,\n            authorName,\n            hash: md5(\n                `${actionIdentity}|${this.actionArr.length ? this.actionArr.at(-1).hash : ''}`,\n            ),\n        });\n        this.curActionIndex += 1;\n        this.informUI();\n    }\n\n    undoSingleAction() {\n        if (this.curActionIndex !== 0) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n            this.informUI();\n        }\n    }\n\n    redoSingleAction() {\n        if (this.curActionIndex !== this.actionArr.length) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n            this.informUI();\n        }\n    }\n\n    undo() {\n        let curTid = null;\n        if (this.curActionIndex !== 0) curTid = this.actionArr[this.curActionIndex - 1].tid;\n        while (this.curActionIndex !== 0 && this.actionArr[this.curActionIndex - 1].tid === curTid) {\n            this.curActionIndex -= 1;\n            this.performAction(this.actionArr[this.curActionIndex].inverse);\n        }\n        this.informUI();\n    }\n\n    redo() {\n        let curTid = null;\n        if (this.curActionIndex !== this.actionArr.length) curTid = this.actionArr[this.curActionIndex].tid;\n        while (this.curActionIndex !== this.actionArr.length && this.actionArr[this.curActionIndex].tid === curTid) {\n            this.performAction(this.actionArr[this.curActionIndex].equivalent);\n            this.curActionIndex += 1;\n        }\n        this.informUI();\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.informUI();\n    }\n\n    registerEvents() {\n        super.registerEvents();\n        this.cy.on('dragfree', 'node[type = \"ordin\"]', (e) => {\n            e.target.forEach((node) => {\n                this.addPositionChange(node.id(), node.scratch('position'), { ...node.position() });\n            });\n        });\n        this.cy.on('nodeediting.resizeend', (e, type, node) => {\n            this.addDimensionChange(\n                node.id(),\n                { height: node.scratch('height'), width: node.scratch('width') },\n                node.scratch('position'),\n                { height: node.data('style').height, width: node.data('style').width },\n                { ...node.position() },\n            );\n        });\n    }\n}\n\nexport default GraphUndoRedo;\n","class PropFromArr {\n    constructor(obj) {\n        this.arr = [obj];\n        this.flatenArr();\n    }\n\n    flatenArr() {\n        const flatArr = [];\n        for (let i = 0; i < this.arr.length; i += 1) {\n            if (this.arr[i].constructor === Array) this.arr[i].forEach((o) => this.arr.push(o));\n            else flatArr.push(this.arr[i]);\n        }\n        this.arr = flatArr;\n    }\n\n    G(p) {\n        return new PropFromArr(this.arr.map((o) => o[p]).filter((o) => o));\n    }\n\n    S(p) {\n        this.arr = this.arr.map((o) => o[p]).filter((o) => o);\n        this.flatenArr();\n        return this;\n    }\n\n    any() {\n        const arr = [];\n        this.arr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n                arr.push(obj[key]);\n            });\n        });\n        this.arr = arr;\n        this.flatenArr();\n        return this;\n    }\n\n    parseProps(s, t) {\n        const propFromArr = new PropFromArr(this.arr);\n        s.split('.').forEach(\n            (property) => (property === '*' ? propFromArr.any() : propFromArr.S(property)),\n        );\n        if (t === 1) return propFromArr.A();\n        if (t === 2) return propFromArr;\n        return propFromArr.F();\n    }\n\n    A() { return this.arr; }\n\n    F() { return this.arr[0]; }\n}\nexport default PropFromArr;\n","import PropFromArr from './PropFromArr';\n\nconst mapByDefault = (x, arr, def) => {\n    if (arr.includes(x)) return x;\n    return def;\n};\n\nconst parseNode = (node) => {\n    const p = new PropFromArr(node).parseProps('data.y:ShapeNode', 2);\n    return {\n        label: p.parseProps('y:NodeLabel._') || p.parseProps('y:NodeLabel'),\n        id: new PropFromArr(node).parseProps('$.id'),\n        position: {\n            x: parseFloat(p.parseProps('y:Geometry.$.x')),\n            y: parseFloat(p.parseProps('y:Geometry.$.y')),\n        },\n        style: {\n            width: parseFloat(p.parseProps('y:Geometry.$.width')),\n            height: parseFloat(p.parseProps('y:Geometry.$.height')),\n            opacity: parseInt(p.parseProps('y:Fill.$.opacity'), 10) || 1,\n            shape: mapByDefault(p.parseProps('y:Shape.$.type'), ['rectangle', 'ellipse'], 'rectangle'),\n            backgroundColor: p.parseProps('y:Fill.$.color'),\n            borderColor: p.parseProps('y:BorderStyle.$.color'),\n            borderWidth: parseInt(p.parseProps('y:BorderStyle.$.width'), 10),\n        },\n    };\n};\n\nconst parseEdge = (edge) => ({\n    label: new PropFromArr(edge).parseProps('data.*.y:EdgeLabel._')\n             || new PropFromArr(edge).parseProps('data.*.y:EdgeLabel'),\n    source: new PropFromArr(edge).parseProps('$.source'),\n    target: new PropFromArr(edge).parseProps('$.target'),\n    style: {\n        backgroundColor: new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.color'),\n        thickness: parseFloat(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.width')),\n        shape: mapByDefault(new PropFromArr(edge).parseProps('data.*.y:LineStyle.$.type'),\n            ['dashed', 'dotted'], 'solid'),\n    },\n    bendData: {\n        bendPoint: new PropFromArr(edge).parseProps('data.*.y:Path.y:Point.$'),\n    },\n});\n\nconst parseActionML = (({ actionName, parameters }) => ({ actionName: actionName[0], parameters: parameters[0] }));\n\nconst parseActionHistory = (grahML) => grahML.parseProps('graphml.graph.actionHistory', 1)\n    .map(({\n        authorName, equivalent, inverse, tid,\n    }) => ({\n        authorName: authorName[0],\n        equivalent: parseActionML(equivalent[0]),\n        inverse: parseActionML(inverse[0]),\n        tid: tid[0],\n    }));\n\nconst parseDetails = (grahML) => grahML.parseProps('graphml.graph.$');\n\nexport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n};\n","import xml2js from 'xml2js';\nimport PropFromArr from './PropFromArr';\nimport {\n    parseNode, parseEdge, parseDetails, parseActionHistory,\n} from './parseProperties';\n\nconst parser = (graphMlCnt) => new Promise((resolve) => {\n    new xml2js.Parser().parseString(graphMlCnt, (err, grahMLObj) => {\n        const grahML = new PropFromArr(grahMLObj);\n        const nodes = grahML.parseProps('graphml.graph.node', 1).map(parseNode);\n        const edges = grahML.parseProps('graphml.graph.edge', 1).map(parseEdge);\n        const { id, projectName, serverID } = parseDetails(grahML);\n        const actionHistory = parseActionHistory(grahML);\n        resolve({\n            id, projectName, edges, nodes, actionHistory, serverID,\n        });\n    });\n});\nexport default parser;\n","import GraphServer from './6-server';\n\nexport default GraphServer;\n","import { actionType as T } from '../../reducer';\nimport GraphLoadSave from './5-load-save';\n// import {\n//     postGraph, updateGraph, forceUpdateGraph, getGraph, getGraphWithHashCheck,\n// } from '../../serverCon/crud_http';\n\nclass GraphServer extends GraphLoadSave {\n    set(config) {\n        const { serverID } = config;\n        super.set(config);\n        if (serverID) {\n            this.setServerID(serverID);\n            this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n        }\n    }\n    // Not being immplemented in version 1\n    // pushToServer() {\n    //     if (this.serverID) {\n    //         updateGraph(this.serverID, this.getGraphML()).then(() => {\n\n    //         });\n    //     } else {\n    //         postGraph(this.getGraphML()).then((serverID) => {\n    //             this.set({ serverID });\n    //             this.cy.emit('graph-modified');\n    //         });\n    //     }\n    // }\n\n    // forcePushToServer() {\n    //     if (this.serverID) {\n    //         forceUpdateGraph(this.serverID, this.getGraphML()).then(() => {\n\n    //         });\n    //     } else {\n    //         postGraph(this.getGraphML()).then((serverID) => {\n    //             this.set({ serverID });\n    //         });\n    //     }\n    // }\n\n    // forcePullFromServer() {\n    //     if (this.serverID) {\n    //         getGraph(this.serverID).then((graphXML) => {\n    //             this.setGraphML(graphXML);\n    //         });\n    //     } else {\n    //         // eslint-disable-next-line no-alert\n    //         alert('Not on server');\n    //     }\n    // }\n\n    // pullFromServer() {\n    //     if (this.actionArr.length === 0) { this.forcePullFromServer(); return; }\n    //     if (this.serverID) {\n    //         getGraphWithHashCheck(this.serverID, this.actionArr.at(-1).hash).then((graphXML) => {\n    //             this.setGraphML(graphXML);\n    //         }).catch(() => {\n\n    //         });\n    //     } else {\n    //         // eslint-disable-next-line no-alert\n    //         alert('Not on server');\n    //     }\n    // }\n\n    build() {\n        // TODO\n        if (this.serverID);\n    }\n\n    debug() {\n        // TODO\n        if (this.serverID);\n    }\n\n    run() {\n        // TODO\n        if (this.serverID);\n    }\n\n    clear() {\n        // TODO\n        if (this.serverID);\n    }\n\n    stop() {\n        // TODO\n        if (this.serverID);\n    }\n\n    destroy() {\n        // TODO\n        if (this.serverID);\n    }\n\n    setCurStatus() {\n        super.setCurStatus();\n        this.dispatcher({ type: T.IS_WORKFLOW_ON_SERVER, payload: Boolean(this.serverID) });\n    }\n}\n\nexport default GraphServer;\n","import { saveAs } from 'file-saver';\nimport localStorageManager from '../local-storage-manager';\nimport graphmlBuilder from '../graphml/builder';\nimport BendingDistanceWeight from '../calculations/bending-dist-weight';\nimport GraphUndoRedo from './4-undo-redo';\nimport graphMLParser from '../graphml/parser';\n\nclass GraphLoadSave extends GraphUndoRedo {\n    autoSaveIntervalId\n\n    constructor(...args) {\n        super(...args);\n        this.autoSaveIntervalId = null;\n    }\n\n    registerEvents() {\n        super.registerEvents();\n        this.cy.on('add remove data dragfreeon', 'node[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('add remove data', 'edge[type=\"ordin\"]', () => this.saveLocalStorage());\n        this.cy.on('nodeediting.resizeend graph-modified', () => this.saveLocalStorage());\n    }\n\n    downloadImg(format) {\n        this.cy.emit('hide-bend');\n        this.cy.$('.eh-handle').remove();\n        if (format === 'PNG') saveAs(this.cy.png({ full: true }), `${this.getName()}-DHGWorkflow.png`);\n        if (format === 'JPG') saveAs(this.cy.jpg({ full: true }), `${this.getName()}-DHGWorkflow.jpg`);\n    }\n\n    shouldNodeBeSaved(nodeID) {\n        return this.getById(nodeID).data('type') === 'ordin';\n    }\n\n    shouldEdgeBeSaved(edgeID) {\n        return this.getById(edgeID).data('type') === 'ordin';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getRealSourceId(nodeID) {\n        return nodeID;\n    }\n\n    static stringifyAction({ actionName, parameters }) {\n        return { actionName, parameters: window.btoa(JSON.stringify(parameters)) };\n    }\n\n    static parseAction({ actionName, parameters }) {\n        return { actionName, parameters: JSON.parse(window.atob(parameters)) };\n    }\n\n    jsonifyGraph() {\n        const graph = {\n            nodes: [],\n            edges: [],\n            actionHistory: [],\n            projectName: this.projectName,\n            id: this.id,\n            serverID: this.serverID,\n            fileName: null,\n            fileHandle: null,\n        };\n        this.cy.nodes().forEach((node) => {\n            if (this.shouldNodeBeSaved(node.id())) {\n                const all = node.json();\n                const nodeJson = {\n                    label: all.data.label,\n                    id: all.data.id,\n                    position: all.position,\n                    style: {},\n                };\n                nodeJson.style = this.getStyle(node.id());\n                graph.nodes.push(nodeJson);\n            }\n        });\n        this.cy.edges().forEach((edge) => {\n            if (this.shouldEdgeBeSaved(edge.id())) {\n                const edgeJson = edge.json().data;\n                edgeJson.source = this.getRealSourceId(edge.source().id());\n                edgeJson.style = this.getStyle(edge.id());\n                edgeJson.bendData.bendPoint = BendingDistanceWeight.getCoordinate(\n                    edgeJson.bendData.bendWeight, edgeJson.bendData.bendDistance,\n                    edge.source().position(), edge.target().position(),\n                );\n                graph.edges.push(edgeJson);\n            }\n        });\n        graph.actionHistory = this.actionArr.map(({\n            tid, inverse, equivalent, authorName, hash,\n        }) => ({\n            tid,\n            authorName,\n            inverse: GraphLoadSave.stringifyAction(inverse),\n            equivalent: GraphLoadSave.stringifyAction(equivalent),\n            hash,\n        }));\n        return graph;\n    }\n\n    getName() {\n        return `${this.projectName}`;\n    }\n\n    async saveToDisk() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        const bytes = new TextEncoder().encode(str);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            const options = {\n                types: [\n                    {\n                        description: 'GraphMl Files',\n                        accept: {\n                            'text/graphml': ['.graphml'],\n                        },\n                    },\n                ],\n            };\n            const handle = await window.showSaveFilePicker(options);\n            const stream = await handle.createWritable();\n            await stream.write(blob);\n            await stream.close();\n        } else {\n            // eslint-disable-next-line no-alert\n            const fileName = prompt('Filename:');\n            saveAs(blob, `${fileName || `${this.getName()}-concore`}.graphml`);\n        }\n    }\n\n    saveToFolder() {\n        const str = graphmlBuilder(this.jsonifyGraph());\n        return str;\n    }\n\n    getGraphML() {\n        return graphmlBuilder(this.jsonifyGraph());\n    }\n\n    loadJson(content) {\n        content.nodes.forEach((node) => {\n            this.addNode(node.label, node.style, 'ordin', node.position, {}, node.id, 0);\n        });\n        content.edges.forEach((edge) => {\n            this.addEdge({ ...edge, sourceID: edge.source, targetID: edge.target }, 0);\n        });\n        content.actionHistory.forEach(({\n            inverse, equivalent, tid, authorName,\n        }) => {\n            this.addAction(GraphLoadSave.parseAction(inverse), GraphLoadSave.parseAction(equivalent), tid, authorName);\n        });\n        this.setProjectName(content.projectName);\n        this.setServerID(this.serverID || content.serverID);\n    }\n\n    saveLocalStorage() {\n        if (this.autoSaveIntervalId !== null) clearTimeout(this.autoSaveIntervalId);\n        this.autoSaveIntervalId = setTimeout(() => localStorageManager.save(this.id, this.jsonifyGraph()), 1000);\n    }\n\n    setGraphML(graphML) {\n        graphMLParser(graphML).then((graphObject) => {\n            localStorageManager.save(this.id, graphObject);\n            this.loadGraphFromLocalStorage();\n        });\n    }\n\n    resetLocalStorage() {\n        localStorageManager.clearGraph(this.id);\n    }\n\n    loadGraphFromLocalStorage() {\n        this.reset();\n        const graphContent = localStorageManager.get(this.id);\n        if (!graphContent) return false;\n        this.loadJson(graphContent);\n        return true;\n    }\n\n    serializeGraph() {\n        return window.btoa(JSON.stringify(this.jsonifyGraph()));\n    }\n}\n\nexport default GraphLoadSave;\n","const boundaryPoint = {\n    getEq(P1, P2) {\n        const m = (P1.y - P2.y) / (P1.x - P2.x);\n        const c = P1.y - m * P1.x;\n        return [m, c];\n    },\n    getX1X2(Cn, P, w, h) {\n        if (Cn.x === P.x) return [P.x, P.x];\n        const P2 = { x: P.x - Cn.x, y: P.y - Cn.y };\n        const [m, c] = this.getEq({ x: 0, y: 0 }, P2);\n        // (𝑎2𝑚2+𝑏2)𝑥2+2𝑎2𝑚𝑐𝑥+𝑎2(𝑐2–𝑏2)\n        const A = (w ** 2 * m ** 2 + h ** 2);\n        const B = 2 * w ** 2 * m * c;\n        const C = w ** 2 * (c ** 2 - h ** 2);\n        const D = B ** 2 - 4 * A * C;\n        const x1 = (-B + D ** 0.5) / (2 * A) + Cn.x;\n        const x2 = (-B - D ** 0.5) / (2 * A) + Cn.x;\n        return [x1, x2];\n    },\n    getY1Y2(C, P, w, h, x1, x2) {\n        if (x1 === x2) return [C.y + h, C.y - h];\n        const [m, c] = this.getEq(C, P);\n        return [m * x1 + c, m * x2 + c];\n    },\n    dist(A, B) {\n        return ((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5;\n    },\n    getClosestEllipse(C, P, w, h) {\n        const [x1, x2] = this.getX1X2(C, P, w, h);\n        const [y1, y2] = this.getY1Y2(C, P, w, h, x1, x2);\n        const [d1, d2] = [this.dist(P, { x: x1, y: y1 }), this.dist(P, { x: x2, y: y2 })];\n        if (d1 < d2) return { x: x1, y: y1 };\n        return { x: x2, y: y2 };\n    },\n    slope(x1, y1, x2, y2) {\n        return (x1 - x2) / (y1 - y2);\n    },\n\n    setSubQ(C, P, w, h) {\n        const [S1, S2] = [[C.x + w, C.y + h], [C.x + w, C.y - h]]\n            .map(([x, y]) => ((C.x - x) * (P.y - y) - (C.y - y) * (P.x - x)) > 0);\n        if (S1 && !S2) return 0;\n        if (!S1 && !S2) return 1;\n        if (!S1 && S2) return 2;\n        if (S1 && S2) return 3;\n        return -1;\n    },\n\n    getClosestRect(C, P, w, h) {\n        const [m, c] = this.getEq(P, C);\n        let D = [\n            [C.x + w, C.y],\n            [C.x, C.y + h],\n            [C.x - w, C.y],\n            [C.x, C.y - h],\n        ];\n        if (Math.abs(m) !== Infinity) {\n            D = [ // To point toward center\n                [C.x + w, m * (C.x + w) + c],\n                [(C.y + h - c) / m, C.y + h],\n                [C.x - w, m * (C.x - w) + c],\n                [(C.y - h - c) / m, C.y - h],\n            ];\n        }\n        const [x, y] = D[this.setSubQ(C, P, w, h)];\n        return { x, y };\n    },\n    get(C, P, w, h, type) {\n        if (type === 'rectangle') return boundaryPoint.getClosestRect(C, P, w, h);\n        return boundaryPoint.getClosestEllipse(C, P, w, h);\n    },\n\n};\n\nexport default boundaryPoint.get;\n","import TailoredGraphBuilder from './tailored-graph-builder';\n\nexport default TailoredGraphBuilder;\n","import CoreGraph from './graph-core';\nimport { actionType as T } from '../reducer';\nimport getBoundaryPoint from './calculations/boundary-point';\nimport GA from './graph-actions';\n\nclass TailoredGraph extends CoreGraph {\n    registerEvents() {\n        super.registerEvents();\n        this.cy.on('drag data moved', 'node[type=\"ordin\"]', (evt) => {\n            evt.target.connectedEdges().connectedNodes('node[type=\"special\"]').forEach((juncNode) => {\n                juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n            });\n        });\n        this.cy.on('bending', (evt) => {\n            const juncNode = evt.target.source();\n            juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        });\n    }\n\n    static calJuncNodePos(juncNode) {\n        const parNode = juncNode.incomers('node')[0];\n        const meanNbrPosition = { x: 0, y: 0 };\n        const setOfPos = new Set();\n        juncNode.outgoers('edge[type=\"ordin\"]')\n            .forEach((edge) => setOfPos.add(JSON.stringify(TailoredGraph.getBendEdgePoint(edge))));\n        setOfPos.forEach((posStr) => {\n            const pos = JSON.parse(posStr);\n            meanNbrPosition.x += pos.x;\n            meanNbrPosition.y += pos.y;\n        });\n        if (setOfPos.size === 0) return juncNode.position();\n        meanNbrPosition.x /= setOfPos.size;\n        meanNbrPosition.y /= setOfPos.size;\n        return getBoundaryPoint(\n            parNode.position(), meanNbrPosition,\n            parNode.data('style').width / 2,\n            parNode.data('style').height / 2,\n            parNode.data('style').shape,\n        );\n    }\n\n    getRealNode(juncNodeId) {\n        return this.getById(juncNodeId).incomers().filter('node')[0];\n    }\n\n    addAutoMove(juncNode) {\n        juncNode.unselectify();\n        return this;\n    }\n\n    addEdgeWithJuncNode(edgeData, tid) {\n        const juncNode = this.getById(edgeData.sourceID);\n        const ed = super.addEdge({\n            ...edgeData,\n            label: juncNode.data('edgeLabel'),\n            style: juncNode.data('edgeStyle'),\n        }, tid);\n        juncNode.position(TailoredGraph.calJuncNodePos(juncNode));\n        return ed;\n    }\n\n    addEdgeWithoutJuncNode(edgeData, tid) {\n        const { sourceID, targetID, style } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const sourceNodeStyle = sourceNode.data('style');\n        const juncNodePos = getBoundaryPoint(\n            sourceNode.position(),\n            targetNode.position(),\n            sourceNodeStyle.width / 2,\n            sourceNodeStyle.height / 2,\n            sourceNodeStyle.shape,\n        );\n        const juncNode = super.addNode('', { backgroundColor: style.backgroundColor },\n            'special', juncNodePos, { edgeLabel: edgeData.label, edgeStyle: style }, undefined, tid);\n        juncNode.ungrabify();\n        super.addEdge({\n            sourceID,\n            targetID: juncNode.id(),\n            style: {\n                ...style,\n                'target-arrow-shape': 'none',\n            },\n            type: 'special',\n        }, tid);\n        this.addAutoMove(juncNode, sourceNode);\n        return this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNode.id() }, tid);\n    }\n\n    addEdgeAction(id, edgeData, tid) {\n        this.addAction(\n            { actionName: GA.DEL_EDGE, parameters: [id] },\n            {\n                actionName: GA.ADD_EDGE,\n                parameters: [{ ...edgeData, sourceID: this.getRealSourceId(edgeData.sourceID), id }],\n            },\n            tid,\n        );\n    }\n\n    addEdge(edgeData, tidd = this.getTid()) {\n        const tid = 0;\n        const { sourceID, targetID, label } = edgeData;\n        const [sourceNode, targetNode] = [sourceID, targetID].map(this.getById.bind(this));\n        const juncNodes = sourceNode.outgoers('node').filter((node) => label && node.data('edgeLabel') === label);\n\n        let edge;\n        if (targetNode.data('type') !== 'ordin') return edge; // Don't Add Node\n        if (sourceNode.data('type') === 'special') edge = this.addEdgeWithJuncNode(edgeData, tid);\n        else if (juncNodes.length) edge = this.addEdgeWithJuncNode({ ...edgeData, sourceID: juncNodes[0].id() }, tid);\n        else if (label && label.length) edge = this.addEdgeWithoutJuncNode(edgeData, tid);\n        else {\n            this.dispatcher({\n                type: T.Model_Open_Create_Edge,\n                cb: (edgeLabel, edgeStyle) => {\n                    const message = this.validiateEdge(edgeLabel, edgeStyle, sourceID, targetID, null, 'New');\n                    if (message.ok) edge = this.addEdge({ ...edgeData, label: edgeLabel, style: edgeStyle }, tid);\n                    if (edge) this.addEdgeAction(edge.id(), { ...edgeData, label: edgeLabel, style: edgeStyle }, tidd);\n                    return message;\n                },\n            });\n        }\n        if (edge) this.addEdgeAction(edge.id(), edgeData, tidd);\n        return edge;\n    }\n\n    updateEdge(id, style, label, shouldUpdateLabel, tid = this.getTid()) {\n        this.addAction(\n            {\n                actionName: GA.UPDATE_EDGE,\n                parameters: [id, this.getStyle(id), this.getById(id).data('label'), shouldUpdateLabel],\n            },\n            { actionName: GA.UPDATE_EDGE, parameters: [id, style, label, shouldUpdateLabel] },\n            tid,\n        );\n        const junctionNode = this.getById(id).source();\n        if (shouldUpdateLabel) this.updateData(junctionNode.data('id'), 'edgeLabel', label, 0);\n        this.updateData(junctionNode.data('id'), 'edgeStyle', style, 0);\n        this.updateNode(junctionNode.data('id'), { backgroundColor: style.backgroundColor }, '', false, 0);\n\n        junctionNode\n            .outgoers('edge')\n            .forEach((edge) => super.updateEdge(edge.data('id'), style, label, shouldUpdateLabel, 0));\n    }\n\n    deleteElem(id, tid = this.getTid()) {\n        const el = this.getById(id);\n        if (el.isNode()) {\n            if (el.removed()) return;\n            el.outgoers('node[type=\"special\"]')\n                .connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n            el.connectedEdges('edge[type=\"ordin\"]')\n                .forEach((edge) => this.deleteElem(edge.id(), tid));\n\n            const node = this.getById(id);\n            this.addAction(\n                {\n                    actionName: GA.ADD_NODE,\n                    parameters: [\n                        node.data('label'), this.getStyle(node.id()), node.data('type'),\n                        node.position(), node.json().data, id,\n                    ],\n                },\n                { actionName: GA.DEL_NODE, parameters: [id] }, tid,\n            );\n            super.deleteNode(id, 0);\n        } else {\n            if (!this.getById(id).length || el.removed()) return;\n            const jsonEd = this.getById(id).json().data;\n            this.addAction(\n                {\n                    actionName: GA.ADD_EDGE,\n                    parameters: [{\n                        ...jsonEd, sourceID: this.getRealSourceId(jsonEd.source), targetID: jsonEd.target,\n                    }],\n                },\n                { actionName: GA.DEL_EDGE, parameters: [id] }, tid,\n            );\n            const junctionNode = el.source();\n            super.deleteEdge(id, 0);\n            if (junctionNode) if (junctionNode.outgoers().length === 0) this.deleteNode(junctionNode.id(), 0);\n        }\n    }\n\n    getRealSourceId(nodeID) {\n        if (this.getById(nodeID).data('type') === 'ordin') return nodeID;\n        if (this.getById(nodeID).incomers('node').length === 0) return nodeID;\n        return this.getById(nodeID).incomers('node')[0].id();\n    }\n\n    getEdgesBetweenNodes(n1, n2) {\n        const [c1, c2] = [n1, n2]\n            .map((n) => this.getById(this.getRealSourceId(n)))\n            .map((r) => r.outgoers('node[type=\"special\"]').union(r));\n        return c1.edgesWith(c2);\n    }\n\n    getNodesEdges() {\n        const nodes = this.cy.$('node[type=\"ordin\"]').map((node) => ({\n            label: node.data('label'),\n            style: node.data('style'),\n            id: node.data('id'),\n        }));\n        const edges = {};\n        this.cy.$('edge[type=\"ordin\"]').forEach((edge) => {\n            const label = edge.data('label');\n            const sourceLabel = this.getById(this.getRealSourceId(edge.source().id())).data('label');\n            const targetLabel = edge.target().data('label');\n            const style = edge.data('style');\n            const id = edge.data('id');\n            if (!edges[label]) {\n                edges[label] = {\n                    targetLabel: [targetLabel], sourceLabel, id, label, style,\n                };\n            } else edges[label].targetLabel.push(targetLabel);\n        });\n        return [nodes, Object.values(edges)];\n    }\n}\n\nexport default TailoredGraph;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { edgeValidator, nodeValidator } from './config/defaultValidators';\nimport MyGraph from './graph-builder';\nimport { actionType as T } from './reducer';\n\nfunction Graph({\n    el, superState, dispatcher, graphID, serverID, graphML, projectName, graphContainerRef, active,\n}) {\n    const [instance, setInstance] = useState(null);\n    const ref = useRef();\n    const setContainerDim = (element) => {\n        if (element) {\n            const elToAss = element;\n            elToAss.style.width = `${graphContainerRef.current.offsetWidth - 2}px`;\n            elToAss.style.height = `${graphContainerRef.current.offsetHeight - 2}px`;\n        }\n    };\n\n    const initialiseNewGraph = () => {\n        const myGraph = new MyGraph(\n            graphID, ref.current, dispatcher, superState, projectName, nodeValidator, edgeValidator,\n        );\n        if (graphID) myGraph.loadGraphFromLocalStorage();\n        if (serverID) {\n            myGraph.set({ serverID });\n            myGraph.forcePullFromServer();\n        }\n        if (graphML) myGraph.setGraphML(graphML);\n        myGraph.setCurStatus();\n        return myGraph;\n    };\n    // Remote server implementation - Not being used.\n    // useEffect(() => {\n    //     if (active && loaded && serverID) {\n    //         window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 's', serverID));\n    //     } else if (active && loaded && graphID) {\n    //         window.history.pushState(null, null, path.join(process.env.PUBLIC_URL, 'l', graphID));\n    //     }\n    // }, [active, serverID, loaded, graphID]);\n    useEffect(() => instance && instance.set({ superState }), [instance, superState]);\n    useEffect(() => active && instance && instance.setCurStatus(), [active && instance]);\n    useEffect(() => {\n        if (active && instance) dispatcher({ type: T.SET_CUR_INSTANCE, payload: instance });\n    }, [active && instance]);\n\n    useEffect(() => {\n        if (ref.current) {\n            setContainerDim(ref.current);\n            window.addEventListener('resize', () => setContainerDim(ref.current));\n            setInstance(initialiseNewGraph());\n        }\n    }, [ref]);\n\n    const { id } = el;\n\n    return (\n        <div\n            style={{ zIndex: 1, display: active ? 'block' : 'none' }}\n            key={id}\n            className=\"graph-element\"\n            ref={ref}\n        />\n    );\n}\nexport default Graph;\n","const nodeValidator = `(node, nodes, edges) => {\n    var regex = /^[A-za-z0-9]+:[A-Za-z0-9.]+$/;\n    let message = { ok: true, err: null };\n    if (!regex.test(node.label)) {\n        message = {\n            ok: false,\n            err: 'Node with incorrect label.',\n        }\n        return message;\n    }\n    nodes.forEach((n) => {\n        if (n.id !== node.id && n.label.split(':')[0] === node.label.split(':')[0]) {\n            message = {\n                ok: false,\n                err: 'Node with same label exists.',\n            };\n        }\n    });\n    return message;\n    }`;\nconst edgeValidator = `(edge, nodes, edges) => {\nlet message = { ok: true, err: null };\nedges.forEach((e) => {\n    if (e.label === edge.label && e.sourceLabel !== edge.sourceLabel) {\n        message = {\n            ok: false,\n            err: 'Edge with same label exists.',\n        };\n    }\n});\nreturn message;\n}`;\n\n/* eslint-disable max-len */\nconst nodeValidatorFormat = `Takes **\\`node\\`** details under validation, existing **\\`nodes\\`**, existing **\\`edges\\`** and **\\`type\\`**\n\n**Node:** { label: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n\nconst edgeValidatorFormat = `Takes **\\`edge\\`** details under validation, existing **\\`nodes\\`** and existing **\\`edges\\`** and **\\`type\\`**\n\n**Edge:** { label: String, sourceLabel: String, targetLabel: String, style: Object, id: String | undefined },\n**Nodes:** [{ label: String, style: Object, id: String }],\n**Edges:** [{ label: String, sourceLabel: String, targetLabel: String, style: Object, id: String }],\n**Type:** \\`New\\` | \\`Update\\``;\n/* eslint-enable max-len */\n\nexport {\n    nodeValidator, edgeValidator, nodeValidatorFormat, edgeValidatorFormat,\n};\n","import React, { useEffect } from 'react';\nimport ZoomComp from './component/ZoomSetter';\n\nimport { actionType as T } from './reducer';\nimport './graphWorkspace.css';\nimport localStorageManager from './graph-builder/local-storage-manager';\nimport TabBar from './component/TabBar';\nimport Graph from './GraphArea';\n\nconst GraphComp = (props) => {\n    const graphContainerRef = React.useRef();\n    const { dispatcher, superState } = props;\n    // const [loadedFromStorage, setLoadedFromStorage] = React.useState(false);\n\n    useEffect(() => {\n        const allSavedGs = localStorageManager.getAllGraphs().map((graphID) => ({\n            graphID,\n        }));\n        dispatcher({\n            type: T.ADD_GRAPH_BULK,\n            payload: allSavedGs,\n        });\n        // setLoadedFromStorage(true);\n    }, []);\n\n    // Remote server implementation - Not being used.\n    // useEffect(() => {\n    //     if (!loadedFromStorage) return;\n    //     const graphFromParams = Object.fromEntries(new URLSearchParams(window.location.search).entries()).g;\n    //     if (graphFromParams) {\n    //         const graphContent = JSON.parse(window.atob(graphFromParams));\n    //         const gid = new Date().getTime().toString();\n    //         localStorageManager.addToFront(gid);\n    //         localStorageManager.save(gid, graphContent);\n    //         window.history.replaceState({}, document.title, window.location.pathname);\n    //         dispatcher({ type: T.ADD_GRAPH, payload: { graphID: gid } });\n    //     }\n    //     const urlParms = window.location.pathname.split('/');\n    //     const serverIDIndex = urlParms.indexOf('s');\n    //     const localIDIndex = urlParms.indexOf('l');\n    //     if (serverIDIndex !== -1 && serverIDIndex + 1 < urlParms.length) {\n    //         const serverID = urlParms[serverIDIndex + 1];\n    //         dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n    //     }\n    //     if (localIDIndex !== -1 && localIDIndex + 1 < urlParms.length) {\n    //         const graphID = urlParms[localIDIndex + 1];\n    //         dispatcher({ type: T.ADD_GRAPH, payload: { graphID } });\n    //     }\n    // }, [loadedFromStorage]);\n\n    return (\n        <div\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                display: 'flex',\n                width: '100%',\n            }}\n        >\n            <TabBar superState={superState} dispatcher={dispatcher} />\n            <div style={{ flex: 1, background: 'white' }} className=\"graph-container\" ref={graphContainerRef}>\n                {superState.graphs.map((el, i) => (\n                    <Graph\n                        el={el}\n                        i={i}\n                        superState={superState}\n                        graphContainerRef={graphContainerRef}\n                        dispatcher={dispatcher}\n                        key={el.graphID}\n                        active={i === superState.curGraphIndex}\n                        graphID={el.graphID}\n                        serverID={el.serverID}\n                        graphML={el.graphML}\n                        projectName={el.projectName}\n                        fileHandle={el.fileHandle}\n                        fileName={el.fileName}\n                    />\n                ))}\n                <ZoomComp dispatcher={dispatcher} superState={superState} />\n            </div>\n        </div>\n    );\n};\n\nexport default GraphComp;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './parent-modal.css';\n\nReactModal.setAppElement('#root');\n\nconst Modal = ({\n    closeModal, ModelOpen, title, children,\n}) => {\n    const [curClass, setCurClass] = useState('');\n    const [isOpen, setIsOpen] = useState(ModelOpen);\n    const [stid, setStid] = useState(null);\n    useEffect(() => {\n        if (ModelOpen === true) {\n            setIsOpen(true);\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(true);\n                setCurClass('');\n            }, 20));\n        } else {\n            setCurClass('closing');\n            clearTimeout(stid);\n            setStid(setTimeout(() => {\n                setIsOpen(false);\n            }, 400));\n        }\n    }, [ModelOpen]);\n\n    if (!isOpen) return '';\n    return (\n        <ReactModal\n            isOpen={isOpen}\n            contentLabel=\"onRequestClose Example\"\n            // onRequestClose={closeModal} // prevent modal from closing when clicked outside\n            className=\"Modal\"\n            overlayClassName={`Overlay ${curClass}`}\n        >\n            <div className={`modal-content ${curClass}`}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-title h4\">{title}</div>\n                    <button type=\"button\" className=\"close\" onClick={closeModal}>\n                        {closeModal ? <span aria-hidden=\"true\">×</span> : ''}\n                        <span className=\"sr-only\">Close</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n            </div>\n        </ReactModal>\n    );\n};\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport './graph-comp-details.css';\nimport ParentModal from './ParentModal';\n\nconst ModalComp = ({ closeModal, superState }) => {\n    const [data, setData] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const { modalPayload, ModelOpen } = superState;\n    const {\n        cb, title, submitText, Children, defaultStyle, defaultLabel, labelAllowed,\n    } = modalPayload;\n\n    useEffect(() => {\n        setErrorMessage('');\n    }, [ModelOpen]);\n\n    useEffect(() => {\n        setData({ label: defaultLabel || '', style: defaultStyle });\n        setErrorMessage('');\n    }, [defaultLabel, defaultStyle]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        const message = cb(data.label, data.style);\n        if (message.ok) {\n            setErrorMessage('');\n            setData({ label: defaultLabel || '', style: defaultStyle });\n            closeModal();\n        } else setErrorMessage(message.err);\n    };\n\n    return (\n        <ParentModal closeModal={closeModal} ModelOpen={ModelOpen} title={title}>\n            <form onSubmit={submit}>\n                <div className=\"modal-content-body\">\n                    <Children data={data} setData={setData} labelAllowed={labelAllowed} />\n                    {errorMessage ? <div className=\"err\">{errorMessage}</div> : <></>}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\">{submitText}</button>\n                </div>\n            </form>\n        </ParentModal>\n    );\n};\nexport default ModalComp;\n","/* eslint-disable no-alert */\nimport {\n    FaSave, FaUndo, FaRedo, FaTrash, FaFileImport, FaPlus, FaDownload, FaEdit, FaRegTimesCircle, FaShare, FaHistory,\n    FaHammer, FaBug, FaBomb, FaToggleOn, FaThermometerEmpty,\n} from 'react-icons/fa';\n\nimport {\n    // FiChevronDown, FiChevronsDown, FiChevronsUp, FiChevronUp,\n    FiPlay, FiStopCircle, FiToggleLeft, FiTriangle,\n} from 'react-icons/fi';\n\nimport {\n    createNode, editElement, deleteElem, downloadImg, saveAction, saveGraphMLFile,\n    createFile, readFile, clearAll, undo, redo, openShareModal, viewHistory,\n    toggleServer,\n    // openSettingModal,\n} from './toolbarFunctions';\n\nconst toolbarList = (state, dispatcher) => [\n    {\n        type: 'action',\n        text: 'Node',\n        icon: FaPlus,\n        action: createNode,\n        active: true,\n        visibility: true,\n        hotkey: 'Ctrl+G',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Create',\n        icon: FaFileImport,\n        action: createFile,\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'file-upload',\n        text: 'Open',\n        icon: FaFileImport,\n        action: readFile,\n        active: true,\n        visibility: true,\n        hotkey: 'Ctrl+O',\n    },\n    {\n        type: 'action',\n        text: 'Save',\n        icon: FaSave,\n        action: saveGraphMLFile,\n        active: state.curGraphInstance,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Save As',\n        icon: FaSave,\n        action: (s, d) => saveAction(s, d),\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Empty',\n        icon: FaThermometerEmpty,\n        action: clearAll,\n        active: true,\n        visibility: true,\n        hotkey: 'Ctrl+Backspace',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Undo',\n        icon: FaUndo,\n        action: undo,\n        active: state.undoEnabled,\n        visibility: true,\n        hotkey: 'Ctrl+Z',\n    },\n    {\n        type: 'action',\n        text: 'Redo',\n        icon: FaRedo,\n        action: redo,\n        active: state.redoEnabled,\n        visibility: true,\n        hotkey: 'Ctrl+Shift+Z,Ctrl+Y',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'Edit',\n        icon: FaEdit,\n        action: editElement,\n        active: (state.eleSelected && state.eleSelectedPayload.type !== 'MIX'),\n        visibility: true,\n        hotkey: 'Ctrl+E',\n    },\n    {\n        type: 'action',\n        text: 'Delete',\n        icon: FaTrash,\n        action: deleteElem,\n        active: state.eleSelected,\n        visibility: true,\n        hotkey: 'Delete,Backspace,Del,Clear',\n    },\n    { type: 'vsep' },\n    {\n        type: 'action',\n        text: 'History',\n        icon: FaHistory,\n        action: viewHistory,\n        active: true,\n        visibility: true,\n    },\n    { type: 'vsep' },\n    // server buttons\n    {\n        type: 'action',\n        text: 'Server',\n        icon: state.isWorkflowOnServer ? FaToggleOn : FiToggleLeft,\n        action: () => toggleServer(state, dispatcher),\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Build',\n        icon: FaHammer,\n        action: () => state.curGraphInstance && state.curGraphInstance.build(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Debug',\n        icon: FaBug,\n        action: () => state.curGraphInstance && state.curGraphInstance.debug(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Run',\n        icon: FiPlay,\n        action: () => state.curGraphInstance && state.curGraphInstance.run(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Clear',\n        icon: FaRegTimesCircle,\n        action: () => state.curGraphInstance && state.curGraphInstance.clear(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Stop',\n        icon: FiStopCircle,\n        action: () => state.curGraphInstance && state.curGraphInstance.stop(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n    {\n        type: 'action',\n        text: 'Destroy',\n        icon: FaBomb,\n        action: () => state.curGraphInstance && state.curGraphInstance.destroy(),\n        active: state.isWorkflowOnServer,\n        visibility: state.isWorkflowOnServer,\n    },\n\n    // Not being implemented in version 1\n    // {\n    //     type: 'action',\n    //     text: 'Push',\n    //     icon: FiChevronUp,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.pushToServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Pull',\n    //     icon: FiChevronDown,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.pullFromServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Force Push',\n    //     icon: FiChevronsUp,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.forcePushToServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // {\n    //     type: 'action',\n    //     text: 'Force Pull',\n    //     icon: FiChevronsDown,\n    //     action: () => state.curGraphInstance && state.curGraphInstance.forcePullFromServer(),\n    //     active: state.curGraphInstance && state.isWorkflowOnServer,\n    // },\n    // { type: 'vsep' },\n    { type: 'space' },\n    // Not being implemented in version 1\n    // {\n    //     type: 'action',\n    //     text: 'Settings',\n    //     icon: FaRegSun,\n    //     action: openSettingModal,\n    //     active: true,\n    // },\n    {\n        type: 'action',\n        text: 'Contribute',\n        icon: FiTriangle,\n        action: () => { window.open('https://github.com/ControlCore-Project/concore-editor', '_blank'); },\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'action',\n        text: 'Share',\n        icon: FaShare,\n        action: openShareModal,\n        active: true,\n        visibility: true,\n    },\n    {\n        type: 'menu',\n        text: 'Export',\n        icon: FaDownload,\n        action: (s, d) => [\n            { fn: () => downloadImg(s, d, 'JPG'), name: 'JPG' },\n            { fn: () => downloadImg(s, d, 'PNG'), name: 'PNG' },\n        ],\n        visibility: true,\n        active: true,\n    },\n    { type: 'vsep' },\n];\n\nexport default toolbarList;\n","import React from 'react';\nimport Switch from 'rc-switch';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\n\nfunction DropDown({\n    Icon, text, action, active, visibility, tabIndex, hotkey,\n}) {\n    return (\n        <Menu menuButton={(\n            <MenuButton>\n                <ActionButton {...{\n                    Icon, text, action, active, visibility, tabIndex, hotkey,\n                }}\n                />\n            </MenuButton>\n        )}\n        >\n            {action().map(({ fn, name }) => <MenuItem onClick={fn} key={name}>{name}</MenuItem>)}\n        </Menu>\n    );\n}\n\nconst FileUploader = ({\n    Icon, text, active, visibility, tabIndex, hotkey, superState,\n}) => (\n    <ActionButton {...{\n        Icon, text, active, visibility, tabIndex, action: () => superState.fileRef.current.click(), hotkey,\n    }}\n    />\n);\n\nconst Switcher = ({\n    text, action, active, tabIndex,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={action}\n        onKeyDown={(ev) => ev.key === ' ' && action()}\n    >\n        <Switch\n            onChange={action}\n            checked={active}\n            className=\"react-switch\"\n        />\n        <div>\n            {text}\n        </div>\n    </div>\n);\n\nconst ActionButton = ({\n    Icon, text, action, active, visibility, tabIndex, hotkey,\n}) => (\n    <div\n        role=\"button\"\n        id={`action_${tabIndex}`}\n        tabIndex={tabIndex}\n        className={`tool ${active ? 'active' : ''}`}\n        onClick={() => (active && action())}\n        onKeyDown={(ev) => active && ev.key === ' ' && action()}\n        data-tip={hotkey ? hotkey.split(',')[0] : ''}\n        style={{ display: `${visibility ? '' : 'none'}` }}\n    >\n        <div className=\"icon\"><Icon size=\"20\" /></div>\n        <div style={{ fontSize: 14 }}>{text}</div>\n    </div>\n);\n\nconst TextBox = ({ children }) => (\n    <div className=\"tool\" style={{ width: 'auto' }}>\n        <div className=\"middle tool-text-only\" style={{ fontSize: 16, color: '#888', height: '100%' }}>\n            {children}\n        </div>\n    </div>\n);\n\nconst Vsep = () => <div className=\"Vsep sep\" />;\nconst Hsep = () => <div className=\"hsep sep\" />;\nconst Space = () => <div className=\"space\" />;\n\nexport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport hotkeys from 'hotkeys-js';\nimport toolbarList from '../toolbarActions/toolbarList';\nimport '@szhsin/react-menu/dist/index.css';\nimport './header.css';\nimport {\n    ActionButton, Vsep, Hsep, Space, TextBox, Switcher, DropDown, FileUploader,\n} from './HeaderComps';\nimport 'rc-switch/assets/index.css';\n// import ServerActions from './serverActions/ServerActions';\n\nconst setHotKeys = (actions) => {\n    let keys = '';\n    const map = {};\n    actions.forEach((action, i) => {\n        if (action.hotkey) {\n            action.hotkey.split(',').forEach((key) => {\n                [key, key.replace('Ctrl', 'Command')].forEach((k) => {\n                    keys += `${k},`;\n                    map[k] = document.getElementById(`action_${i + 1}`);\n                });\n            });\n        }\n    });\n    hotkeys(keys, (event, handler) => {\n        event.preventDefault();\n        map[handler.shortcut].click();\n    });\n};\n\nconst Header = ({ superState, dispatcher }) => {\n    const actions = toolbarList(superState, dispatcher);\n    React.useEffect(() => {\n        setHotKeys(actions, superState, dispatcher);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <section className=\"middle titlebar\">\n                {\n                    superState.curGraphInstance ? `${\n                        superState.curGraphInstance.projectName\n                    } - concore Editor` : ''\n                }\n            </section>\n            <section className=\"toolbar\">\n                {\n                    actions.map(({\n                        text, active, visibility, action, icon, type, hotkey,\n                    }, i) => {\n                        const props = {\n                            text,\n                            active,\n                            visibility,\n                            tabIndex: i + 1,\n                            key: text,\n                            action: (e) => action(superState, dispatcher, e),\n                            Icon: icon,\n                            hotkey,\n                        };\n                        switch (type) {\n                        case 'vsep': return <Vsep key={`${`v${i}`}`} />;\n                        case 'space': return <Space key={`${`s${i}`}`} />;\n                        case 'switch': return <Switcher {...props} />;\n                        case 'menu': return <DropDown {...props} />;\n                        case 'file-upload': return <FileUploader {...props} superState={superState} />;\n                        case 'action': return <ActionButton {...props} />;\n                        // case 'serverActions': return <ServerActions superState={superState} />;\n                        default: return <></>;\n                        }\n                    })\n                }\n            </section>\n            <Hsep />\n        </header>\n\n    );\n};\n\nexport {\n    Header, ActionButton, Vsep, Hsep, Space, TextBox,\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Modal from './ParentModal';\nimport './project-details.css';\nimport { actionType as T } from '../../reducer';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst ProjectDetails = ({ superState, dispatcher }) => {\n    const curGraph = superState.graphs[superState.curGraphIndex];\n    const [projectName, setProjectName] = useState('Untitled');\n    const [authorName, setAuthorName] = useState('Default');\n    // const [serverID, setServerID] = useState('');\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const newGraphModal = superState.newGraphModal || superState.graphs.length === 0;\n    const editDetailsModal = superState.editDetailsModal || (curGraph && !curGraph.projectName);\n\n    const setProjAuthorName = (a) => {\n        setAuthorName(a);\n        dispatcher({\n            type: T.SET_AUTHOR,\n            payload: a,\n        });\n    };\n\n    useEffect(() => {\n        if (superState.editDetailsModal && curGraph) {\n            setProjectName(curGraph.projectName);\n        } else setProjectName('');\n    }, [superState.authorName, superState.editDetailsModal, curGraph]);\n\n    useEffect(() => {\n        if (superState.authorName) setAuthorName(superState.authorName);\n        else {\n            const authorNameE = localStorageManager.getAuthorName();\n            setProjAuthorName(authorNameE);\n        }\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (newGraphModal) dispatcher({ type: T.ADD_GRAPH, payload: { projectName } });\n        else if (editDetailsModal) {\n            superState.curGraphInstance.setProjectName(projectName);\n            dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n        }\n        setProjAuthorName(authorName);\n        localStorageManager.setAuthorName(authorName);\n    };\n\n    const openExisting = () => {\n        superState.fileRef.current.click();\n    };\n\n    const closeModal = () => {\n        if (superState.newGraphModal) dispatcher({ type: T.SET_NEW_GRAPH_MODAL, payload: false });\n        else if (superState.editDetailsModal) dispatcher({ type: T.SET_EDIT_DETAILS_MODAL, payload: false });\n    };\n    // const loadFromServer = () => {\n    //     dispatcher({ type: T.ADD_GRAPH, payload: { serverID } });\n    // };\n    const NewWorkflow = () => (\n        <>\n            {/* <div className=\"divider\" />\n            <input\n                placeholder=\"Enter the Server ID of Workflow\"\n                value={serverID}\n                onChange={(e) => setServerID(e.target.value)}\n                className=\"serverIDText\"\n            />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={loadFromServer}\n            >\n                Load From Server\n\n            </button> */}\n            <div className=\"divider\" />\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={openExisting}\n            >\n                Open Existing From GraphML File\n\n            </button>\n        </>\n    );\n\n    return (\n        <Modal\n            ModelOpen={newGraphModal || editDetailsModal}\n            closeModal={superState.editDetailsModal || superState.newGraphModal ? closeModal : null}\n            title=\"Project Details\"\n        >\n            <form className=\"proj-details\" onSubmit={submit}>\n                <span>Workflow Name</span>\n                <input\n                    ref={inputRef}\n                    placeholder=\"Title of workflow\"\n                    required\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                />\n                <span>Author</span>\n                <input\n                    placeholder=\"Author of workflow\"\n                    value={authorName}\n                    onChange={(e) => setAuthorName(e.target.value)}\n                    required\n                />\n                <div className=\"expand\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                </div>\n                <div className=\"expand\">\n                    {newGraphModal && <NewWorkflow />}\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ProjectDetails;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './shareModal.css';\nimport { actionType as T } from '../../reducer';\n\nconst ShareModal = ({ superState, dispatcher }) => {\n    const [serializedGraph, setSerializedGraph] = useState('');\n    const [copyText, setCopyText] = useState('Copy');\n    const cond = superState.shareModal && superState.curGraphInstance;\n    useEffect(() => {\n        if (cond) {\n            setSerializedGraph(superState.curGraphInstance.serializeGraph());\n            setCopyText('Copy');\n        }\n    }, [cond]);\n\n    const closeModal = () => {\n        dispatcher({ type: T.SET_SHARE_MODAL, payload: false });\n    };\n    const link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?g=${serializedGraph}`;\n    const copy = () => {\n        navigator.clipboard.writeText(link).then(() => {\n            setCopyText('Copied!');\n            document.getElementsByClassName('preDiv')[0].focus();\n            document.getElementsByClassName('preDiv')[0].select();\n        });\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.shareModal}\n            title=\"Shareable Link\"\n            closeModal={closeModal}\n        >\n            <div className=\"share-modal\">\n                <input readOnly className=\"preDiv\" value={link} />\n                <button onClick={copy} type=\"button\" className=\"copyBtn\">{copyText}</button>\n            </div>\n\n        </Modal>\n    );\n};\n\nexport default ShareModal;\n","import React from 'react';\nimport './codeEdit.css';\n\nconst CodeEdit = ({\n    pre, post, value, onChange, height, docString,\n}) => {\n    const inputRef = React.createRef();\n    const parseMD = (s) => s.split('**').map((e, i) => {\n        if (i % 2) return <span key={e}><b>{e}</b></span>;\n        return <span key={e}>{e}</span>;\n    });\n    return (\n        <div\n            className=\"textField\"\n            onClick={() => inputRef.current.focus()}\n            onKeyDown={() => inputRef.current.focus()}\n            role=\"textbox\"\n            tabIndex={0}\n        >\n            {docString\n                ? (\n                    <div className=\"docStr\">\n                        {parseMD(docString)}\n                    </div>\n                ) : <div />}\n            <br />\n            {pre\n                ? (\n                    <textarea\n                        className=\"preTextField\"\n                        value={pre}\n                        readOnly\n                        spellCheck=\"false\"\n                    />\n                ) : <div />}\n            <textarea\n                className=\"mainTextField\"\n                spellCheck=\"false\"\n                {...{ value, onChange }}\n                data-gramm_editor=\"false\"\n                style={{ height, width: '90vw' }}\n                ref={inputRef}\n            />\n            {post\n                ? (\n                    <textarea\n                        className=\"postTextField\"\n                        readOnly\n                        value={post}\n                        spellCheck=\"false\"\n                    />\n                ) : <div />}\n        </div>\n    );\n};\n\nexport default CodeEdit;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport CodeEdit from '../CodeEdit';\nimport { nodeValidatorFormat, edgeValidatorFormat } from '../../config/defaultValidators';\n\nconst SettingsModal = ({ superState, dispatcher }) => {\n    const [nodeValidator, setNodeValidator] = useState('');\n    const [edgeValidator, setEdgeValidator] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setNodeValidator(superState.curGraphInstance.getNodeValidator());\n            setEdgeValidator(superState.curGraphInstance.getEdgeValidator());\n        }\n    }, [superState.curGraphInstance]);\n\n    const close = () => dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n    const submit = () => {\n        try {\n            superState.curGraphInstance.setEdgeNodeValidator({\n                nodeValidator: `(node, nodes, edges, type)=>{${nodeValidator}}`,\n                edgeValidator: `(edge, nodes, edges, type)=>{${edgeValidator}}`,\n            });\n            dispatcher({ type: T.SET_SETTING_MODAL, payload: false });\n            setErrorMessage('');\n        } catch (e) {\n            setErrorMessage(e.message);\n        }\n    };\n\n    return (\n        <Modal\n            ModelOpen={superState.settingsModal}\n            closeModal={close}\n            title=\"Settings\"\n        >\n            <div className=\"setting-container\">\n                <div>\n                    <h3>Node Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateNode(node, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={nodeValidator}\n                        onChange={(e) => setNodeValidator(e.target.value)}\n                        height={200}\n                        docString={nodeValidatorFormat}\n                    />\n                </div>\n                <div>\n                    <h3>Edge  Validator</h3>\n                    <CodeEdit\n                        pre=\"function validateEdge(edge, nodes, edges, type) {\"\n                        post=\"}\"\n                        value={edgeValidator}\n                        onChange={(e) => setEdgeValidator(e.target.value)}\n                        height={200}\n                        docString={edgeValidatorFormat}\n                    />\n                </div>\n                <div className=\"error\">{errorMessage}</div>\n\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default SettingsModal;\n","import React, { useEffect } from 'react';\nimport { FaFileImport } from 'react-icons/fa';\nimport './file-drag-drop.css';\nimport { actionType as T } from '../reducer';\nimport { readFile } from '../toolbarActions/toolbarFunctions';\n\nconst app = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n\n    useEffect(() => {\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n        const p = document.getElementsByTagName('body')[0];\n        const c = document.getElementsByClassName('drag-drop-area')[0];\n        let cc = 0;\n        p.addEventListener('dragenter', (e) => {\n            e.preventDefault();\n            cc += 1;\n            if (cc === 1) c.classList.remove('hidden');\n        });\n        p.addEventListener('dragleave', (e) => {\n            e.preventDefault();\n            cc -= 1;\n            if (cc === 0) c.classList.add('hidden');\n        });\n\n        p.addEventListener('dragover', (e) => {\n            e.preventDefault();\n        });\n        ['dragend', 'dragexit', 'drop'].forEach((dragEvent) => {\n            p.addEventListener(dragEvent, (e) => {\n                e.preventDefault();\n                cc = 0;\n                c.classList.add('hidden');\n            });\n        });\n\n        p.addEventListener('drop', (e) => {\n            e.preventDefault();\n            fileRef.current.value = null;\n            if (e.dataTransfer.files.length === 1\n                && e.dataTransfer.files[0].name.split('.').slice(-1)[0] === 'graphml') {\n                readFile(superState, dispatcher, { target: e.dataTransfer });\n            }\n        });\n    }, []);\n    return (\n        <div className=\"drag-drop-area hidden\">\n            <div className=\"inner\">\n                <FaFileImport size={100} style={{ color: '#1e88e5' }} />\n                <div>\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e)}\n                    />\n                    <span className=\"arrow\">&#10230;</span>\n                    <h1 className=\"text\">Drop the File anywhere to open</h1>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default app;\n","import React, { useEffect, useState } from 'react';\nimport Modal from './ParentModal';\nimport './settings.css';\nimport { actionType as T } from '../../reducer';\nimport GA from '../../graph-builder/graph-actions';\nimport './history.css';\n\nconst HistoryModal = ({ superState, dispatcher }) => {\n    const [curState, setcurState] = useState(0);\n    const [historyList, setHistoryList] = useState([]);\n    const [historyView, setHistoryView] = useState([]);\n    const actions = [\n        GA.ADD_NODE, GA.ADD_EDGE,\n        GA.UPDATE_NODE, GA.UPDATE_EDGE,\n        GA.DEL_NODE, GA.DEL_EDGE,\n        GA.SET_DIM, GA.SET_BENDW, GA.SET_POS,\n    ];\n    const mapActionToTrue = () => {\n        const res = {};\n        actions.forEach((action) => { res[action] = true; });\n        return res;\n    };\n    const [filterAction, setFilterAction] = useState(mapActionToTrue());\n\n    const getLabelFromID = (x) => {\n        if (superState.curGraphInstance) {\n            return superState.curGraphInstance.getLabelFromID(x);\n        }\n        return '';\n    };\n    useEffect(() => {\n        if (superState.curGraphInstance) {\n            setHistoryList([\n                ...superState.curGraphInstance.actionArr\n                    .slice().reverse().map((action, i) => ({ ...action, i })),\n            ]);\n            setcurState(\n                superState.curGraphInstance.actionArr.length\n                - superState.curGraphInstance.curActionIndex,\n            );\n        }\n    }, [superState.viewHistory, superState.graphs, superState.curGraphInstance, curState]);\n\n    const stringifyAction = (equivalent) => {\n        const par = equivalent.parameters;\n        switch (equivalent.actionName) {\n        case GA.ADD_NODE: return `Created new Node: ${par[0]}`;\n        case GA.ADD_EDGE: return `Created new Edge ${\n            getLabelFromID(par[0].id)\n        } between ${getLabelFromID(par[0].sourceID)} and ${getLabelFromID(par[0].targetID)}`;\n        case GA.UPDATE_NODE: return `Updated Label/Style for ${getLabelFromID(par[0])} node`;\n        case GA.UPDATE_EDGE: return `Updated Edge ${getLabelFromID(par[0])}`;\n        case GA.DEL_NODE: return `Deleted Node: ${getLabelFromID(par[0])}`;\n        case GA.DEL_EDGE: return `Deleted Edge: ${getLabelFromID(par[0])}`;\n        case GA.SET_POS: return `Moved node ${getLabelFromID(par[0])} on canvas`;\n        case GA.SET_DIM: return `Changed dimension of node ${getLabelFromID(par[0])}`;\n        case GA.SET_BENDW: return `Modified Bend Point of node ${getLabelFromID(par[0])}`;\n        default: return '';\n        }\n    };\n\n    const stringifyActionType = {\n        [GA.ADD_NODE]: 'NodeAddition:',\n        [GA.ADD_EDGE]: 'EdgeAddition',\n        [GA.UPDATE_NODE]: 'NodeUpdates',\n        [GA.UPDATE_EDGE]: 'EdgeUpdates',\n        [GA.DEL_NODE]: 'NodeDeletion',\n        [GA.DEL_EDGE]: 'EdgeDeletion',\n        [GA.SET_POS]: 'NodePosChange',\n        [GA.SET_DIM]: 'NodeDimensionChange',\n        [GA.SET_BENDW]: 'EdgeBend',\n    };\n\n    const restoreState = (index) => {\n        // eslint-disable-next-line no-alert\n        if (window.confirm('Are you sure to restore the selected state?')) {\n            let tempCurState = curState;\n            while (index > tempCurState) {\n                superState.curGraphInstance.undoSingleAction();\n                tempCurState += 1;\n            }\n            while (index < tempCurState) {\n                superState.curGraphInstance.redoSingleAction();\n                tempCurState -= 1;\n            }\n            setcurState(tempCurState);\n        }\n    };\n    const prefixTid = (tid, str, authorName, index, hash) => {\n        const DT = new Date(parseInt(tid, 10));\n        const date = DT.toLocaleDateString();\n        const time = DT.toLocaleTimeString();\n        const c = (\n            <>\n                <td>\n                    {\n                        index === curState ? '[Current]' : (\n                            <button className=\"a-link\" type=\"button\" onClick={() => restoreState(index)}>\n                                [Restore]\n                            </button>\n                        )\n                    }\n                </td>\n                <td>{`${date}-${time}`}</td>\n                <td>\n                    [\n                    <b>{`${authorName}`}</b>\n                    ]\n                </td>\n                <td style={{ fontWeight: 100 }}>{str}</td>\n                <td style={{ fontWeight: 100 }}>{hash}</td>\n            </>\n        );\n        // if (index === curState) return <u>{c}</u>;\n        return c;\n    };\n\n    const parseAction = ({\n        equivalent, tid, i, authorName, hash,\n    }) => prefixTid(\n        tid, stringifyAction(equivalent), authorName, i, hash,\n    );\n\n    useEffect(() => {\n        setHistoryView(historyList.filter((action) => filterAction[action.equivalent.actionName]).map(parseAction));\n    }, [filterAction, historyList]);\n\n    const close = () => dispatcher({ type: T.SET_HISTORY_MODAL, payload: false });\n    return (\n        <Modal\n            ModelOpen={superState.viewHistory}\n            closeModal={close}\n            title=\"History\"\n        >\n            <div className=\"hist-container\">\n                <fieldset>\n                    <legend>Filters</legend>\n                    {\n                        actions.map((action) => (\n                            <label htmlFor={action} className=\"filter_checkbox\" key={action}>\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"filter\"\n                                    checked={filterAction[action]}\n                                    onChange={() => setFilterAction({\n                                        ...filterAction,\n                                        [action]: !filterAction[action],\n                                    })}\n                                />\n                                {stringifyActionType[action]}\n                            </label>\n                        ))\n                    }\n                </fieldset>\n                <div className=\"hist-list\">\n                    <table style={{ listStyleType: 'circle' }}>\n                        <tbody>\n                            {historyView.map((h, i) => (\n                                <tr\n                                    className={`hist-element ${i === curState ? 'active' : ''}`}\n                                    // eslint-disable-next-line react/no-array-index-key\n                                    key={i}\n                                >\n                                    {h}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default HistoryModal;\n","/* eslint-disable object-shorthand */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/state-in-constructor */\nimport React, { useEffect, useState } from 'react';\nimport FileBrowser, { FileRenderers, FolderRenderers } from 'react-keyed-file-browser';\nimport { readFile, readTextFile } from '../toolbarActions/toolbarFunctions';\nimport { actionType as T } from '../reducer';\nimport './fileBrowser.css';\n\nconst LocalFileBrowser = ({ superState, dispatcher }) => {\n    const fileRef = React.useRef();\n    const [dirButton, setDirButton] = useState(false);\n\n    useEffect(() => {\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            setDirButton(true);\n        }\n        dispatcher({ type: T.SET_FILE_REF, payload: fileRef });\n    }, []);\n\n    const [fileState, setFileState] = useState([]);\n\n    useEffect(() => {\n        // TODO - Loading file list from localStorage. Not supported by browsers.\n        // if(window.localStorage.getItem('fileList')) {\n        //     const allFiles = window.localStorage.getItem('fileList');\n        //     setFileState({ files: allFiles });\n        // }\n        window.localStorage.setItem('fileList', JSON.stringify(fileState));\n    }, [fileState]);\n\n    const handleSelectFile = (data) => {\n        if (data.fileObj.name.split('.').pop() === 'graphml') {\n            let foundi = -1;\n            superState.graphs.forEach((g, i) => {\n                if ((g.fileName === data.fileObj.name)) {\n                    foundi = i;\n                }\n            });\n            if (foundi !== -1) {\n                dispatcher({ type: T.CHANGE_TAB, payload: foundi });\n            } else {\n                readFile(superState, dispatcher, data.fileObj, data.fileHandle);\n            }\n        } else {\n            readTextFile(superState, dispatcher, data.fileObj, data.fileHandle);\n        }\n    };\n\n    const handleFileInDirs = async (topKey, value) => {\n        let topLevel = topKey;\n        let state = [];\n        // eslint-disable-next-line no-restricted-syntax\n        for await (const [key, valueSubDir] of value.entries()) {\n            if (valueSubDir.kind === 'file') {\n                const fileData = await valueSubDir.getFile();\n                state = state.concat([{\n                    key: `${topKey}/${value.name}/${key}`,\n                    modified: fileData.lastModified,\n                    size: fileData.size,\n                    fileObj: fileData,\n                    fileHandle: value,\n                }]);\n            } else if (valueSubDir.kind === 'directory') {\n                topLevel = `${topKey}/${value.name}`;\n                const res = await handleFileInDirs(topLevel, valueSubDir);\n                state = state.concat(res);\n            }\n        }\n        return state;\n    };\n\n    const newFeature = async () => {\n        const dirHandle = await window.showDirectoryPicker();\n        let state = [];\n        // eslint-disable-next-line no-restricted-syntax\n        for await (const [key, value] of dirHandle.entries()) {\n            if (value.kind === 'file') {\n                const fileData = await value.getFile();\n                state = state.concat([{\n                    key: `${dirHandle.name}/${key}`,\n                    modified: fileData.lastModified,\n                    size: fileData.size,\n                    fileObj: fileData,\n                    fileHandle: value,\n                }]);\n            } else if (value.kind === 'directory') {\n                const res = await handleFileInDirs(dirHandle.name, value);\n                state = state.concat(res);\n            }\n        }\n        setFileState([]);\n        setFileState(state);\n    };\n\n    const newFeatureFile = async () => {\n        const pickerOpts = {\n            types: [\n                {\n                    description: 'Graphml',\n                    accept: {\n                        'text/graphml': ['.graphml'],\n                    },\n                },\n            ],\n            excludeAcceptAllOption: true,\n            multiple: false,\n        };\n\n        const [fileHandle] = await window.showOpenFilePicker(pickerOpts);\n        const fileObj = await fileHandle.getFile();\n        readFile(superState, dispatcher, fileObj, fileHandle);\n    };\n\n    return (\n        <div>\n            {!dirButton && (\n                <label\n                    className=\"inputButton\"\n                    htmlFor=\"fileButton\"\n                >\n                    Upload Directory\n                    <input\n                        type=\"file\"\n                        accept=\".py, .m, .c, .cpp, .v, .sh\"\n                        id=\"fileButton\"\n                        style={{ display: 'none' }}\n                        onClick={(e) => { e.target.value = null; }}\n                        onChange={(e) => {\n                            setFileState([]);\n                            setFileState((state) => {\n                                for (let i = 0; i < e.target.files.length; i += 1) {\n                                    state = state.concat([{\n                                        key: e.target.files[i].webkitRelativePath,\n                                        modified: e.target.files[i].lastModified,\n                                        size: e.target.files[i].size,\n                                        fileObj: e.target.files[i],\n                                    }]);\n                                }\n                                return state;\n                            });\n                            window.localStorage.setItem('fileList', JSON.stringify(fileState));\n                        }}\n                        directory\n                        webkitdirectory=\"true\"\n                    />\n                </label>\n            ) }\n            {dirButton && (\n                <button\n                    type=\"button\"\n                    className=\"inputButton\"\n                    disabled={!dirButton}\n                    onClick={newFeature}\n                >\n                    Upload Directory\n                </button>\n            )}\n            {!dirButton\n                && (\n                    <input\n                        type=\"file\"\n                        ref={fileRef}\n                        onClick={(e) => { e.target.value = null; }}\n                        style={{ display: 'none' }}\n                        accept=\".graphml\"\n                        onChange={(e) => readFile(superState, dispatcher, e.target.files[0])}\n                    />\n                )}\n            {dirButton\n                && (\n                    <button\n                        type=\"button\"\n                        ref={fileRef}\n                        className=\"inputButton\"\n                        disabled={!dirButton}\n                        style={{ display: 'none' }}\n                        onClick={newFeatureFile}\n                        label=\"File Upload\"\n                    />\n                    // <input\n                    //     type=\"file\"\n                    //     ref={fileRef}\n                    //     onClick={(e) => { e.target.value = null; }}\n                    //     style={{ display: 'none' }}\n                    //     accept=\".graphml\"\n                    //     onChange={(e) => readFile(superState, dispatcher, e.target.files[0])}\n                    // />\n                )}\n            <h4>\n                Folder Name :\n                {' '}\n                {fileState[0] ? fileState[0].key.split('/')[0] : '' }\n            </h4>\n            <FileBrowser\n                files={fileState}\n                onSelectFile={handleSelectFile}\n                detailRenderer={() => null}\n                fileRenderer={FileRenderers.TableFile}\n                folderRenderer={FolderRenderers.TableFolder}\n            />\n        </div>\n    );\n};\nexport default LocalFileBrowser;\n","import React, { useState, useEffect } from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport { saveAs } from 'file-saver';\nimport Modal from './ParentModal';\nimport './file-edit.css';\nimport 'prismjs/components/prism-bash';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-c';\nimport 'prismjs/components/prism-cpp';\nimport 'prismjs/components/prism-matlab';\nimport 'prismjs/components/prism-verilog';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/themes/prism.css';\nimport { actionType as T } from '../../reducer';\n\nconst FileEditModal = ({ superState, dispatcher }) => {\n    const [codeStuff, setCodeStuff] = useState('');\n    const [fileName, setFileName] = useState('');\n    const [dirButton, setDirButton] = useState(false);\n\n    useEffect(() => {\n        if (navigator.userAgent.indexOf('Edg') !== -1 || navigator.userAgent.indexOf('Chrome') !== -1) {\n            setDirButton(true);\n        }\n    }, []);\n\n    const close = () => {\n        dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n        setCodeStuff('');\n        setFileName('');\n    };\n\n    async function submit() {\n        if (superState.fileHandle) {\n            const stream = await superState.fileHandle.createWritable();\n            await stream.write(codeStuff);\n            await stream.close();\n        } else {\n            // eslint-disable-next-line no-alert\n            alert('Switch to Edge/Chrome!');\n        }\n        dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    async function saveAsSubmit() {\n        const handle = await window.showSaveFilePicker();\n        const stream = await handle.createWritable();\n        await stream.write(codeStuff);\n        await stream.close();\n        // dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    async function saveSubmit() {\n        // eslint-disable-next-line no-alert\n        const newFileName = prompt('Filename:');\n        const bytes = new TextEncoder().encode(codeStuff);\n        const blob = new Blob([bytes], { type: 'application/json;charset=utf-8' });\n        saveAs(blob, newFileName);\n        // dispatcher({ type: T.EDIT_TEXTFILE, payload: { show: false } });\n    }\n\n    useEffect(() => {\n        if (superState.fileObj) {\n            setFileName(superState.fileObj.name);\n            const fr = new FileReader();\n            fr.onload = (x) => {\n                setCodeStuff(x.target.result);\n            };\n            fr.readAsText(superState.fileObj);\n        }\n    }, [superState.fileObj]);\n\n    function highlightSyntax(code) {\n        const extensions = ['v', 'c', 'h', 'hpp', 'cpp', 'py', 'm', 'sh'];\n        const fileEx = fileName.split('.').pop();\n        if (extensions.includes(fileEx)) {\n            switch (fileEx) {\n            case 'v': return highlight(code, languages.verilog, 'verilog');\n            case 'c': return highlight(code, languages.c, 'c');\n            case 'h': return highlight(code, languages.c, 'c');\n            case 'hpp': return highlight(code, languages.c, 'c');\n            case 'cpp': return highlight(code, languages.cpp, 'cpp');\n            case 'py': return highlight(code, languages.python, 'python');\n            case 'm': return highlight(code, languages.matlab, 'matlab');\n            case 'sh': return highlight(code, languages.bash, 'bash');\n            default: return highlight(code, languages.plaintext);\n            }\n        }\n        return highlight(code, languages.plaintext);\n    }\n\n    return (\n        <Modal\n            ModelOpen={superState.textFileModal}\n            closeModal={close}\n            title={fileName}\n        >\n            <div>\n                <div className=\"save-bar\">\n                    {fileName\n                        && (\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                        )}\n                    {dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveAsSubmit}>Save As</button>\n                    )}\n                    {!dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveSubmit}>Save As</button>\n                    )}\n                </div>\n                <div className=\"setting-container\">\n                    <Editor\n                        value={codeStuff}\n                        onValueChange={(e) => setCodeStuff(e)}\n                        highlight={(code) => highlightSyntax(code)}\n                        padding={10}\n                        style={{\n                            fontFamily: '\"Arial\", \"Helvetica\", sans-serif',\n                            fontSize: 16,\n                            minHeight: '100vh',\n                            minWidth: '90vw',\n                            border: '1px solid black',\n                        }}\n                    />\n                </div>\n                <div className=\"save-bar\">\n                    {fileName\n                        && (\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={submit}>Save</button>\n                        )}\n                    {dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveAsSubmit}>Save As</button>\n                    )}\n                    {!dirButton && (\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={saveSubmit}>Save As</button>\n                    )}\n                </div>\n            </div>\n        </Modal>\n    );\n};\n\nexport default FileEditModal;\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport ReactTooltip from 'react-tooltip';\nimport GraphWorkspace from './GraphWorkspace';\nimport GraphCompDetails from './component/modals/GraphCompDetails';\nimport { Header } from './component/Header';\nimport { reducer, initialState, actionType as T } from './reducer';\nimport ProjectDetails from './component/modals/ProjectDetails';\nimport ShareModal from './component/modals/ShareModal';\nimport SettingsModal from './component/modals/Settings';\nimport FileDragDrop from './component/File-drag-drop';\nimport HistoryModal from './component/modals/History';\nimport LocalFileBrowser from './component/fileBrowser';\nimport FileEditModal from './component/modals/FileEdit';\n\nconst app = () => {\n    const [superState, dispatcher] = useReducer(reducer, initialState);\n    return (\n        <div className=\"container\">\n            <ProjectDetails superState={superState} dispatcher={dispatcher} />\n            <ShareModal superState={superState} dispatcher={dispatcher} />\n            <SettingsModal superState={superState} dispatcher={dispatcher} />\n            <HistoryModal superState={superState} dispatcher={dispatcher} />\n            <FileEditModal superState={superState} dispatcher={dispatcher} />\n            <GraphCompDetails\n                closeModal={() => dispatcher({ type: T.Model_Close })}\n                superState={superState}\n            />\n            <FileDragDrop dispatcher={dispatcher} />\n            <Header superState={superState} dispatcher={dispatcher} />\n            <section className=\"body\" style={{ display: 'flex', overflow: 'hidden' }}>\n                <div style={{ display: 'flex', overflow: 'auto' }}>\n                    <LocalFileBrowser superState={superState} dispatcher={dispatcher} />\n                </div>\n                <div className=\"graph\" style={{ display: 'flex', overflow: 'hidden' }}>\n                    <GraphWorkspace dispatcher={dispatcher} superState={superState} />\n                </div>\n            </section>\n            <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\" />\n        </div>\n    );\n};\n\nexport default app;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({\n            getCLS, getFID, getFCP, getLCP, getTTFB,\n        }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const BendingDistanceWeight = {\n\n    dist: (A, B) => (((A.x - B.x) ** 2 + (A.y - B.y) ** 2) ** 0.5),\n\n    rotate: (P, Q) => ({\n        x: P.x * Math.cos(Q) - P.y * Math.sin(Q),\n        y: P.x * Math.sin(Q) + P.y * Math.cos(Q),\n    }),\n\n    extraRad: (A, B) => (((A.x >= B.x && A.y > B.y) || (A.x >= B.x && A.y < B.y)) ? Math.PI : 0),\n\n    getRadian(tanQ, A, B) {\n        return (Math.atan(tanQ) - this.extraRad(A, B) + 2 * Math.PI) % (2 * Math.PI);\n    },\n\n    getCoordinate(w, d, A, B) {\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const D = this.dist(A, B) * w;\n        const P = { x: D, y: d };\n        const { x, y } = this.rotate(P, Q);\n        return { x: x + A.x, y: y + A.y };\n    },\n\n    getWeightDistance(p, A, B) {\n        const P = { x: p.x - A.x, y: p.y - A.y };\n        const tanQ = (A.y - B.y) / (A.x - B.x);\n        const Q = this.getRadian(tanQ, A, B);\n        const { x, y } = this.rotate(P, -Q);\n        const d = this.dist(A, B);\n        return { d: y, w: x / d };\n    },\n};\n\nexport default BendingDistanceWeight;\n","const style = [\n    {\n        selector: '*',\n        style: {\n            overlayOpacity: '0',\n        },\n    },\n    {\n        selector: 'node[type = \"ordin\"]',\n        style: {\n            content: 'data(label)',\n            zIndex: 100,\n            width: 'data(style.width)',\n            height: 'data(style.height)',\n            shape: 'data(style.shape)',\n            opacity: 'data(style.opacity)',\n            backgroundColor: 'data(style.backgroundColor)',\n            borderColor: 'data(style.borderColor)',\n            borderWidth: 'data(style.borderWidth)',\n            textValign: 'center',\n            textHalign: 'center',\n        },\n    },\n    {\n        selector: 'node[type=\"special\"]',\n        style: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'data(style.backgroundColor)',\n            zIndex: 1000,\n        },\n    },\n\n    {\n        selector: 'edge',\n        style: {\n            curveStyle: 'bezier',\n            targetArrowShape: 'triangle',\n        },\n    },\n    {\n        selector: 'edge[type = \"ordin\"]',\n        style: {\n            width: 'data(style.thickness)',\n            lineColor: 'data(style.backgroundColor)',\n            targetArrowColor: 'data(style.backgroundColor)',\n            curveStyle: 'segments',\n            segmentDistances: 'data(bendData.bendDistance)',\n            segmentWeights: 'data(bendData.bendWeight)',\n            edgeDistances: 'node-position',\n            lineStyle: 'data(style.shape)',\n        },\n    },\n    {\n        selector: 'edge[label]',\n        style: {\n            label: 'data(label)',\n            edgeTextRotation: 'autorotate',\n            zIndex: 999,\n            textBackgroundOpacity: 1,\n            color: '#000',\n            textBackgroundColor: '#fff',\n            textBackgroundShape: 'roundrectangle',\n            textBorderColor: '#fff',\n            textBorderWidth: 2,\n            textBorderOpacity: 1,\n        },\n    },\n    {\n        selector: '.hidden',\n        style: {\n            display: 'none',\n        },\n    },\n    {\n        selector: '.eh-handle,node[type=\"bend\"]',\n        style: {\n            height: 25,\n            width: 25,\n            opacity: 0.4,\n            borderWidth: 5,\n            borderOpacity: 0.1,\n        },\n    },\n    {\n        selector: 'node[type=\"bend\"]',\n        style: {\n            backgroundColor: '#9575cd',\n        },\n    },\n    {\n        selector: '.eh-handle',\n        style: {\n            backgroundColor: '#f50057',\n        },\n    },\n    {\n        selector: ':selected',\n        style: {\n            overlayColor: '#000',\n            overlayOpacity: 0.1,\n            overlayPadding: 5,\n        },\n    },\n\n];\n\nexport default style;\n","import style from './cytoscape-style';\n\nconst options = {\n    style: [...style],\n    zoomingEnabled: true,\n    userZoomingEnabled: true,\n    minZoom: 0.25,\n    maxZoom: 5,\n};\n\nexport default options;\n","export default {\n    ADD_NODE: 'ADD_NODE',\n    ADD_EDGE: 'ADD_EDGE',\n    UPDATE_NODE: 'UPDATE_NODE',\n    UPDATE_EDGE: 'UPDATE_EDGE',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DEL_NODE: 'DEL_NODE',\n    DEL_EDGE: 'DEL_EDGE',\n    SET_POS: 'SET_POS',\n    SET_DIM: 'SET_DIM',\n    SET_BENDW: 'SET_BENDW',\n};\n","const zealit = require('zealit');\n\nconst actionType = {\n    $$typeof: '',\n    Model_Open_Create_Node: 'OpenModal_CreateNode',\n    Model_Open_Create_Edge: 'OpenModal_CreateEdge',\n    Model_Open_Update_Edge: 'OpenModal_UpdateEdge',\n    Model_Open_Update_Node: 'OpenModal_UpdateNode',\n    Model_Close: 'CloseModal',\n    ELE_UNSELECTED: 'ELE_UNSELECTED',\n    ELE_SELECTED: 'ELE_SELECTED',\n    TURN_DRAW: 'TURN_DRAW',\n    SET_ZOOM: 'SET_ZOOM',\n    SET_PROJECT_DETAILS: 'SET_PROJECT_DETAILS',\n    SET_UNDO: 'SET_UNDO',\n    SET_REDO: 'SET_REDO',\n    ADD_GRAPH_INSTANCE: 'ADD_GRAPH_INSTANCE',\n    ADD_GRAPH: 'ADD_GRAPH',\n    ADD_GRAPH_BULK: 'ADD_GRAPH_BULK',\n    CHANGE_TAB: 'CHANGE_TAB',\n    REMOVE_GRAPH: 'REMOVE_GRAPH',\n    NEW_GRAPH: 'NEW_GRAPH',\n    SET_SHARE_MODAL: 'SET_SHARE_MODAL',\n    SET_SETTING_MODAL: 'SET_SETTING_MODAL',\n    SET_FILE_REF: 'SET_FILE_REF',\n    SET_HISTORY_MODAL: 'SET_HISTORY_MODAL',\n    SET_AUTHOR: 'SET_AUTHOR',\n    IS_WORKFLOW_ON_SERVER: 'IS_WORKFLOW_ON_SERVER',\n    SET_CUR_INSTANCE: 'SET_CUR_INSTANCE',\n    SET_ZOOM_LEVEL: 'SET_ZOOM_LEVEL',\n    SET_EDIT_DETAILS_MODAL: 'SET_EDIT_DETAILS_MODAL',\n    SET_NEW_GRAPH_MODAL: 'SET_NEW_GRAPH_MODAL',\n    EDIT_TEXTFILE: 'EDIT_TEXTFILE',\n};\n\nexport default zealit(actionType);\n","import React, {\n    useCallback, useEffect, useState, createRef,\n} from 'react';\nimport './nodeDetails.css';\n// import ColorBox from './ColorBox';\nimport localStorageManager from '../../graph-builder/local-storage-manager';\n\nconst NodeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    const textRef = createRef();\n    const [widthSet] = useState(false);\n    const [labelName, setLabelName] = useState('');\n    const [labelFile, setLabelFile] = useState('');\n    const indexOfFile = [];\n    indexOfFile.push(0);\n\n    const setStyle = (prop) => {\n        setData({ ...data, style: { ...data.style, ...prop } });\n    };\n\n    useEffect(() => {\n        if (!widthSet) {\n            setStyle({\n                width: Math.max(data.style.width, Math.min(500, textRef.current.offsetWidth + 20)),\n            });\n        }\n    }, [!widthSet && data.label]);\n\n    useEffect(() => {\n        setLabelName(data.label.split(':')[0]);\n    }, [data.label]);\n\n    return (\n        <div className=\"nodeform\" onSubmit={submit}>\n            <div className=\"parent-div\" style={{ height: data.style.height }}>\n                <div\n                    className=\"node-div\"\n                    style={{\n                        ...data.style,\n                        borderRadius: data.style.shape === 'ellipse' ? '100%' : 0,\n                    }}\n                >\n                    <span ref={textRef}>{labelAllowed ? data.label : ''}</span>\n\n                </div>\n            </div>\n            <div className=\"form\" style={{ padding: 20 }}>\n                {/* <div> Shape</div>\n                <div>\n                    <label htmlFor=\"rectangle\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"rectangle\"\n                            checked={data.style.shape === 'rectangle'}\n                            onChange={() => setStyle({ shape: 'rectangle' })}\n                        />\n                        Rectangle\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"ellipse\">\n                        <input\n                            type=\"radio\"\n                            name=\"shape\"\n                            value=\"ellipse\"\n                            checked={data.style.shape === 'ellipse'}\n                            onChange={() => setStyle({ shape: 'ellipse' })}\n                        />\n                        Ellipse\n                    </label>\n                </div>\n                <div /> */}\n\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <>\n                        <input\n                            className=\"nodeLabel\"\n                            ref={inputRef}\n                            type=\"text\"\n                            required\n                            label=\"Node Label\"\n                            placeholder=\"Enter Node Label\"\n                            value={data.label.split(':')[0]}\n                            onChange={(e) => {\n                                if (e.target.value.slice(-1) !== ':') {\n                                    setLabelName(`${e.target.value}:`);\n                                    setData({ ...data, label: `${e.target.value}:${labelFile}` });\n                                } else {\n                                    setLabelName(e.target.value);\n                                    setData({ ...data, label: e.target.value + labelFile });\n                                }\n                            }}\n                        />\n\n                        <input\n                            className=\"nodeLabelFile\"\n                            type=\"text\"\n                            required\n                            label=\"Node Label file\"\n                            placeholder=\"Select file\"\n                            onChange={(e) => {\n                                setLabelFile(e.target.value.split('/').pop());\n                                if (labelName) {\n                                    let lname = labelName;\n                                    if (labelName.slice(-1) !== ':') {\n                                        setLabelName(`${labelName}:`);\n                                        lname += ':';\n                                    }\n                                    setData({ ...data, label: lname + e.target.value.split('/').pop() });\n                                } else setData({ ...data, label: `:${e.target.value.split('/').pop()}` });\n                            }}\n                            list=\"files\"\n                        />\n                        <datalist id=\"files\">\n                            {\n                                localStorageManager.getFileList()\n                                    // eslint-disable-next-line max-len, prefer-arrow-callback\n                                    ? JSON.parse(localStorageManager.getFileList())\n                                        .map((item) => {\n                                            const list = [];\n                                            const acceptedTypes = ['.v', '.c', '.cpp', '.py', '.m', '.sh'];\n                                            let index;\n                                            // eslint-disable-next-line max-len\n                                            if ((acceptedTypes.some((substring) => item.key.toString().includes(substring)))) {\n                                                list.push(item.key.toString());\n                                                indexOfFile.push(indexOfFile[indexOfFile.length - 1] + 1);\n                                                index = indexOfFile[indexOfFile.length - 1] + 1;\n                                                // eslint-disable-next-line jsx-a11y/control-has-associated-label\n                                                return <option value={list} key={index} />;\n                                            }\n                                            return null;\n                                        })\n                                    : ''\n                            }\n                        </datalist>\n                    </>\n                ) : ''}\n                {/* <div> Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.width}\n                    onChange={(e) => {\n                        setWidthSet(true);\n                        setStyle({\n                            width: Math.min(500, e.target.value),\n                        });\n                    }}\n                /> */}\n\n                {/* <div> Height</div>\n                <input\n                    type=\"number\"\n                    value={data.style.height}\n                    onChange={(e) => setStyle({ height: Math.min(200, e.target.value) })}\n                /> */}\n\n                {/* <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"light\"\n                /> */}\n\n                {/* <div> Border Color</div>\n                <ColorBox\n                    color={data.style.borderColor}\n                    setColor={(color) => setStyle({ borderColor: color })}\n                    type=\"dark\"\n                /> */}\n\n                {/* <div> Border Width</div>\n                <input\n                    type=\"number\"\n                    value={data.style.borderWidth}\n                    onChange={(e) => setStyle({ borderWidth: Math.min(30, e.target.value) })}\n                /> */}\n                {/* <div> Opacity</div>\n                <input\n                    type=\"number\"\n                    step=\".01\"\n                    value={data.style.opacity}\n                    onChange={(e) => setStyle({ opacity: Math.min(1, Math.max(0, e.target.value)) })}\n                /> */}\n            </div>\n        </div>\n    );\n};\n\nexport default NodeDetails;\n","import React, { useCallback } from 'react';\n// import ColorBox from './ColorBox';\nimport './edgeDetails.css';\n\nconst Triangle = ({ size, color }) => {\n    const s = parseInt(size, 10) * 5;\n    const EqTriangle = {\n        borderLeft: `${0.8666 * s}px solid ${color}`,\n        borderBottom: `${s / 2}px solid transparent`,\n        borderTop: `${s / 2}px solid transparent`,\n        marginLeft: -1,\n    };\n    return (\n        <div style={EqTriangle} />\n    );\n};\n\nconst EdgeDetails = ({\n    data, setData, submit, labelAllowed,\n}) => {\n    // const setStyle = (prop) => setData({ ...data, style: { ...data.style, ...prop } });\n    const inputRef = useCallback((node) => node && node.focus(), []);\n    // const RadioBtn = ({ name, shape }) => (\n    //     <label htmlFor=\"ellipse\">\n    //         <input\n    //             type=\"radio\"\n    //             name=\"shape\"\n    //             value={shape}\n    //             checked={data.style.shape === shape}\n    //             onChange={() => setStyle({ shape })}\n    //         />\n    //         {name}\n    //     </label>\n    // );\n\n    return (\n        <div className=\"edgeform\" onSubmit={submit}>\n            <div className=\"par-div\">\n                <div\n                    className=\"edge-div\"\n                    style={{\n                        borderBottomWidth: data.style.thickness,\n                        borderBottomColor: data.style.backgroundColor,\n                        borderBottomStyle: data.style.shape,\n                    }}\n                />\n                <Triangle size={data.style.thickness} color={data.style.backgroundColor} />\n                <div className=\"label\">{data.label}</div>\n            </div>\n            <div className=\"form\">\n                {labelAllowed ? <div> Label</div> : ''}\n                {labelAllowed ? (\n                    <input\n                        ref={inputRef}\n                        className=\"span-rest edgeLabel\"\n                        type=\"text\"\n                        required\n                        label=\"Edge Label\"\n                        value={data.label}\n                        placeholder=\"Enter Edge Label\"\n                        onChange={(e) => setData({ ...data, label: `${e.target.value}` })}\n                    />\n                ) : ''}\n                {/* <div> Shape</div>\n                <div className=\"span-rest hascheckbox\">\n                    <div><RadioBtn name=\"Solid\" shape=\"solid\" /></div>\n                    <div><RadioBtn name=\"Dotted\" shape=\"dotted\" /></div>\n                    <div><RadioBtn name=\"Dashed\" shape=\"dashed\" /></div>\n                </div>\n                <div> Thickness</div>\n                <input\n                    type=\"number\"\n                    value={data.style.thickness}\n                    onChange={(e) => setStyle({ thickness: Math.max(0, Math.min(20, e.target.value)) })}\n                />\n                <div> Background Color</div>\n                <ColorBox\n                    color={data.style.backgroundColor}\n                    setColor={(color) => setStyle({ backgroundColor: color })}\n                    type=\"dark\"\n                /> */}\n            </div>\n        </div>\n    );\n};\n\nexport default EdgeDetails;\n","const NodeStyle = {\n    width: 100,\n    height: 50,\n    shape: 'rectangle',\n    opacity: 1,\n    backgroundColor: '#ffcc00',\n    borderColor: '#000',\n    borderWidth: 1,\n};\n\nconst EdgeStyle = {\n    thickness: 1,\n    backgroundColor: null,\n    shape: 'solid',\n};\n\nexport { NodeStyle, EdgeStyle };\n","const initialState = {\n    ModelOpen: false,\n    modalPayload: {\n        cb: () => {},\n        title: '',\n        submitText: '',\n        Children: '',\n        defaultStyle: {},\n        defaultLabel: '',\n        labelAllowed: null,\n    },\n    shareModal: false,\n    settingsModal: false,\n    editDetailsModal: false,\n    newGraphModal: false,\n\n    eleSelected: false,\n    drawModeOn: true,\n    undoEnabled: false,\n    redoEnabled: false,\n    graphs: [],\n    curGraphIndex: 0,\n    viewHistory: false,\n    authorName: '',\n    isWorkflowOnServer: false,\n    curGraphInstance: null,\n    zoomLevel: 100,\n};\n\nconst initialGraphState = {\n    projectName: '',\n    graphID: null,\n    serverID: null,\n    graphML: null,\n\n    component: null,\n    instance: null,\n    id: null,\n    fileHandle: null,\n    fileName: null,\n};\n\nexport { initialState, initialGraphState };\n","import T from './actionType';\nimport NodeDetails from '../component/modals/NodeDetails';\nimport EdgeDetails from '../component/modals/EdgeDetails';\nimport { NodeStyle, EdgeStyle } from '../config/defaultStyles';\nimport { initialGraphState } from './initialState';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case T.Model_Open_Create_Node:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Node',\n                submitText: 'Create Node',\n                Children: NodeDetails,\n                defaultStyle: NodeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Create_Edge:\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Create Edge',\n                submitText: 'Create Edge',\n                Children: EdgeDetails,\n                defaultStyle: EdgeStyle,\n                defaultLabel: '',\n                labelAllowed: true,\n                cb: action.cb,\n            },\n        };\n    case T.Model_Open_Update_Node: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Node',\n                submitText: 'Edit Node',\n                Children: NodeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Open_Update_Edge: {\n        return {\n            ...state,\n            ModelOpen: true,\n            modalPayload: {\n                title: 'Edit Edge',\n                submitText: 'Edit Edge',\n                Children: EdgeDetails,\n                defaultStyle: action.style,\n                defaultLabel: action.label,\n                labelAllowed: action.labelAllowed,\n                cb: action.cb,\n            },\n        };\n    }\n    case T.Model_Close: return { ...state, ModelOpen: false };\n    case T.ELE_SELECTED: return { ...state, eleSelected: true, eleSelectedPayload: action.payload };\n    case T.ELE_UNSELECTED: return { ...state, eleSelected: false };\n    case T.TURN_DRAW: return { ...state, drawModeOn: action.payload };\n\n    case T.SET_UNDO: return { ...state, undoEnabled: action.payload };\n    case T.SET_REDO: return { ...state, redoEnabled: action.payload };\n\n    case T.ADD_GRAPH: {\n        let foundi = -1;\n        const graphID = action.payload.graphID || new Date().getTime().toString();\n        state.graphs.forEach((g, i) => {\n            if ((g.graphID && g.graphID === graphID) || (g.serverID && g.serverID === action.payload.serverID)) {\n                foundi = i;\n            }\n        });\n        if (foundi !== -1) {\n            return { ...state, newGraphModal: false, curGraphIndex: foundi };\n        }\n        return {\n            ...state,\n            newGraphModal: false,\n            curGraphIndex: state.graphs.length,\n            graphs: [\n                ...state.graphs,\n                {\n                    ...initialGraphState,\n                    projectName: action.payload.projectName,\n                    graphID,\n                    serverID: action.payload.serverID,\n                    graphML: action.payload.graphML,\n                    fileHandle: action.payload.fileHandle || null,\n                    fileName: action.payload.fileName,\n                },\n            ],\n        };\n    }\n    case T.ADD_GRAPH_BULK: {\n        return { ...state, graphs: [...state.graphs, ...action.payload] };\n    }\n    case T.SET_CUR_INSTANCE: {\n        return { ...state, curGraphInstance: action.payload };\n    }\n    case T.CHANGE_TAB: return { ...state, curGraphIndex: action.payload };\n\n    case T.NEW_GRAPH: return { ...state, newGraphModal: true };\n    case T.REMOVE_GRAPH: return {\n        ...state,\n        graphs: state.graphs.filter((e, i) => i !== action.payload),\n        curGraphIndex: state.curGraphIndex < action.payload\n            ? state.curGraphIndex\n            : Math.max(0, state.curGraphIndex - 1),\n    };\n\n    case T.SET_PROJECT_DETAILS: {\n        const newState = { ...state };\n        newState.graphs = newState.graphs.map((g) => (\n            g.graphID === action.payload.graphID ? { ...g, [action.payload.type]: action.payload.value }\n                : g\n        ));\n        return { ...newState };\n    }\n\n    case T.SET_SHARE_MODAL: {\n        return { ...state, shareModal: action.payload };\n    }\n\n    case T.SET_SETTING_MODAL: {\n        return { ...state, settingsModal: action.payload };\n    }\n\n    case T.SET_FILE_REF: {\n        return { ...state, fileRef: action.payload };\n    }\n\n    case T.SET_HISTORY_MODAL: {\n        return { ...state, viewHistory: action.payload };\n    }\n\n    case T.SET_AUTHOR: {\n        return { ...state, authorName: action.payload };\n    }\n\n    case T.IS_WORKFLOW_ON_SERVER: {\n        return { ...state, isWorkflowOnServer: action.payload };\n    }\n    case T.SET_ZOOM_LEVEL: {\n        return { ...state, zoomLevel: action.payload };\n    }\n    case T.SET_EDIT_DETAILS_MODAL: {\n        return { ...state, editDetailsModal: action.payload };\n    }\n    case T.SET_NEW_GRAPH_MODAL: {\n        return { ...state, newGraphModal: action.payload };\n    }\n\n    case T.EDIT_TEXTFILE: {\n        return {\n            ...state,\n            textFileModal: action.payload.show,\n            fileObj: action.payload.fileObj,\n            fileHandle: action.payload.fileHandle,\n        };\n    }\n\n    default:\n        return state;\n    }\n};\nexport default reducer;\n"],"sourceRoot":""}